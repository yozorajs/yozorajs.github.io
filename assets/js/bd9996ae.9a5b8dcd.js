"use strict";(self.webpackChunk_yozora_doc=self.webpackChunk_yozora_doc||[]).push([[7652],{9088:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>d,contentTitle:()=>h,default:()=>x,frontMatter:()=>o,metadata:()=>c,toc:()=>m});var i=n(7624),t=n(4552),r=n(6212),a=n(2440),l=n(7360);const o={id:"tokenizer-list",title:"@yozora/tokenizer-list",sidebar_label:"list"},h=void 0,c={id:"package/tokenizer-list",title:"@yozora/tokenizer-list",description:"<img",source:"@site/versioned_docs/version-1.x.x/package/tokenizer-list.mdx",sourceDirName:"package",slug:"/package/tokenizer-list",permalink:"/docs/1.x.x/package/tokenizer-list",draft:!1,unlisted:!1,tags:[],version:"1.x.x",lastUpdatedBy:"guanghechen",lastUpdatedAt:1706961465,formattedLastUpdatedAt:"Feb 3, 2024",frontMatter:{id:"tokenizer-list",title:"@yozora/tokenizer-list",sidebar_label:"list"},sidebar:"Docs",previous:{title:"link-reference",permalink:"/docs/1.x.x/package/tokenizer-link-reference"},next:{title:"list-item",permalink:"/docs/1.x.x/package/tokenizer-list-item"}},d={},m=[{value:"Install",id:"install",level:2},{value:"Usage",id:"usage",level:2},{value:"Options",id:"options",level:3},{value:"Types",id:"types",level:3},{value:"Live Examples",id:"live-examples",level:2},{value:"Related",id:"related",level:2}];function p(e){const s={a:"a",admonition:"admonition",annotation:"annotation",code:"code",em:"em",h2:"h2",h3:"h3",li:"li",math:"math",mn:"mn",mrow:"mrow",p:"p",pre:"pre",semantics:"semantics",span:"span",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.M)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)("header",{children:(0,i.jsxs)("div",{align:"center",children:[(0,i.jsx)("a",{href:"https://www.npmjs.com/package/@yozora/tokenizer-list",children:(0,i.jsx)("img",{alt:"Npm Version",src:"https://img.shields.io/npm/v/@yozora/tokenizer-list/v1.x.x"})}),(0,i.jsx)("a",{href:"https://www.npmjs.com/package/@yozora/tokenizer-list",children:(0,i.jsx)("img",{alt:"Npm Download",src:"https://img.shields.io/npm/dm/@yozora/tokenizer-list.svg"})}),(0,i.jsx)("a",{href:"https://www.npmjs.com/package/@yozora/tokenizer-list",children:(0,i.jsx)("img",{alt:"Npm License",src:"https://img.shields.io/npm/l/@yozora/tokenizer-list.svg"})}),(0,i.jsx)("a",{href:"#install",children:(0,i.jsx)("img",{alt:"Module formats: cjs, esm",src:"https://img.shields.io/badge/module_formats-cjs%2C%20esm-green.svg"})}),(0,i.jsx)("a",{href:"https://github.com/nodejs/node",children:(0,i.jsx)("img",{alt:"Node.js Version",src:"https://img.shields.io/node/v/@yozora/tokenizer-list"})}),(0,i.jsx)("a",{href:"https://github.com/facebook/jest",children:(0,i.jsx)("img",{alt:"Tested with Jest",src:"https://img.shields.io/badge/tested_with-jest-9c465e.svg"})}),(0,i.jsx)("a",{href:"https://github.com/prettier/prettier",children:(0,i.jsx)("img",{alt:"Code Style: prettier",src:"https://img.shields.io/badge/code_style-prettier-ff69b4.svg?style=flat-square"})})]})}),"\n",(0,i.jsx)("br",{}),"\n",(0,i.jsxs)(s.admonition,{title:"github flavor markdown spec",type:"note",children:[(0,i.jsxs)(s.p,{children:["A ",(0,i.jsx)(s.a,{href:"https://github.github.com/gfm/#lists",children:"list"})," is a sequence of one or more list items\n",(0,i.jsx)(s.a,{href:"https://github.github.com/gfm/#of-the-same-type",children:"of the same type"}),". The list items may be separated by any\nnumber of blank lines."]}),(0,i.jsxs)(s.p,{children:["Two list items are ",(0,i.jsx)(s.a,{href:"https://github.github.com/gfm/#of-the-same-type",children:"of the same type"})," if they begin with\na ",(0,i.jsx)(s.a,{href:"https://github.github.com/gfm/#list-marker",children:"list marker"})," of the same type. Two list markers are of the\nsame type if"]}),(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:["(a) they are ",(0,i.jsx)(s.a,{href:"https://github.github.com/gfm/#bullet-list-marker",children:"bullet list markers"})," using the same\ncharacter (",(0,i.jsx)(s.code,{children:"-"}),", ",(0,i.jsx)(s.code,{children:"+"}),", or ",(0,i.jsx)(s.code,{children:"*"}),") or"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:["(b) they are ordered list numbers with the same delimiter (either ",(0,i.jsx)(s.code,{children:"."})," or ",(0,i.jsx)(s.code,{children:")"}),")."]}),"\n"]}),"\n"]}),(0,i.jsxs)(s.p,{children:["A list is an ",(0,i.jsx)(s.a,{href:"https://github.github.com/gfm/#ordered-list",children:"ordered list"})," if its constituent list items\nbegin with ",(0,i.jsx)(s.a,{href:"https://github.github.com/gfm/#ordered-list-marker",children:"ordered list markers"}),", and a\n",(0,i.jsx)(s.a,{href:"https://github.github.com/gfm/#bullet-list",children:"bullet list"})," if its constituent list items begin with\n",(0,i.jsx)(s.a,{href:"https://github.github.com/gfm/#bullet-list-marker",children:"bullet list markers"}),"."]}),(0,i.jsxs)(s.p,{children:["The ",(0,i.jsx)(s.a,{href:"https://github.github.com/gfm/#start-number",children:"start number"})," of an ",(0,i.jsx)(s.a,{href:"https://github.github.com/gfm/#ordered-list",children:"ordered list"})," is\ndetermined by the list number of its initial list item. The numbers of\nsubsequent list items are disregarded."]}),(0,i.jsxs)(s.p,{children:["A list is ",(0,i.jsx)(s.a,{href:"https://github.github.com/gfm/#loose",children:"loose"})," if any of its constituent list items are separated\nby ",(0,i.jsx)(s.a,{href:"https://github.github.com/gfm/#blank-line",children:"blank line"}),"s, or if any of its constituent list items\ndirectly contain two block-level elements with a ",(0,i.jsx)(s.a,{href:"https://github.github.com/gfm/#blank-line",children:"blank line"}),"\nbetween them. Otherwise a list is ",(0,i.jsx)(s.a,{href:"https://github.github.com/gfm/#tight",children:"tight"}),". (The difference in HTML\noutput is that paragraphs in a loose list are wrapped in ",(0,i.jsx)(s.code,{children:"<p>"})," tags, while\nparagraphs in a tight list are not.)"]}),(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["See ",(0,i.jsx)(s.strong,{children:(0,i.jsx)(s.a,{href:"https://github.github.com/gfm/#block-quotes",children:"github flavor markdown spec"})})," for details."]}),"\n",(0,i.jsxs)(s.li,{children:["See ",(0,i.jsx)(s.strong,{children:(0,i.jsx)(s.a,{href:"#live-examples",children:"Live Examples"})})," for an intuitive impression."]}),"\n"]})]}),"\n",(0,i.jsx)(s.h2,{id:"install",children:"Install"}),"\n",(0,i.jsxs)(r.c,{groupId:"npm2yarn",children:[(0,i.jsx)(a.c,{value:"npm",children:(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-bash",children:"npm install --save @yozora/tokenizer-list\n"})})}),(0,i.jsx)(a.c,{value:"yarn",label:"Yarn",children:(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-bash",children:"yarn add @yozora/tokenizer-list\n"})})}),(0,i.jsx)(a.c,{value:"pnpm",label:"pnpm",children:(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-bash",children:"pnpm add @yozora/tokenizer-list\n"})})})]}),"\n",(0,i.jsx)(s.h2,{id:"usage",children:"Usage"}),"\n",(0,i.jsx)(s.admonition,{type:"tip",children:(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.a,{href:"./tokenizer-list",children:"@yozora/tokenizer-list"})," has been integrated into ",(0,i.jsx)(s.a,{href:"./parser",children:"@yozora/parser"})," / ",(0,i.jsx)(s.a,{href:"./parser-gfm-ex",children:"@yozora/parser-gfm-ex"})," / ",(0,i.jsx)(s.a,{href:"./parser-gfm",children:"@yozora/parser-gfm"}),",\nso you can use ",(0,i.jsx)(s.code,{children:"YozoraParser"})," / ",(0,i.jsx)(s.code,{children:"GfmExParser"})," / ",(0,i.jsx)(s.code,{children:"GfmParser"})," directly."]})}),"\n",(0,i.jsxs)(r.c,{defaultValue:"YozoraParser",values:[{label:"Basic Usage",value:"basic-usage"},{label:"YozoraParser",value:"YozoraParser"},{label:"GfmParser",value:"GfmParser"},{label:"GfmExParser",value:"GfmExParser"}],children:[(0,i.jsxs)(a.c,{value:"basic-usage",children:[(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.a,{href:"./tokenizer-list",children:"@yozora/tokenizer-list"})," cannot be used alone, it needs to be\nregistered in ",(0,i.jsx)(s.em,{children:"YastParser"})," as a plugin-in before it can be used."]}),(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-typescript",metastring:"{4,9}",children:"import { DefaultYastParser } from '@yozora/core-parser'\nimport ParagraphTokenizer from '@yozora/tokenizer-paragraph'\nimport TextTokenizer from '@yozora/tokenizer-text'\nimport ListTokenizer from '@yozora/tokenizer-list'\n\nconst parser = new DefaultYastParser()\n  .useBlockFallbackTokenizer(new ParagraphTokenizer())\n  .useInlineFallbackTokenizer(new TextTokenizer())\n  .useTokenizer(new ListTokenizer())\n\n// parse source markdown content\nparser.parse(`\n- a\n- b\n  - c\n  - d\n  - e\n- f\n- g\n\n---\n\n- [ ] This is a TODO item.\n- [-] This is a processing TODO item.\n- [x] This is a finished TODO item.\n\n---\n\n1. This is an ordered list item\n\na. This is an another type of ordered list item\n`)\n"})})]}),(0,i.jsx)(a.c,{value:"YozoraParser",children:(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-typescript",children:"import YozoraParser from '@yozora/parser'\n\nconst parser = new YozoraParser()\n\n// parse source markdown content\nparser.parse(`\n- a\n- b\n  - c\n  - d\n  - e\n- f\n- g\n\n---\n\n- [ ] This is a TODO item.\n- [-] This is a processing TODO item.\n- [x] This is a finished TODO item.\n\n---\n\n1. This is an ordered list item\n\na. This is an another type of ordered list item\n`)\n"})})}),(0,i.jsx)(a.c,{value:"GfmParser",children:(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-typescript",children:"import GfmParser from '@yozora/parser-gfm'\n\nconst parser = new GfmParser()\n\n// parse source markdown content\nparser.parse(`\n- a\n- b\n  - c\n  - d\n  - e\n- f\n- g\n\n---\n\n- [ ] This is a TODO item.\n- [-] This is a processing TODO item.\n- [x] This is a finished TODO item.\n\n---\n\n1. This is an ordered list item\n\na. This is an another type of ordered list item\n`)\n"})})}),(0,i.jsx)(a.c,{value:"GfmExParser",children:(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-typescript",children:"import GfmExParser from '@yozora/parser-gfm-ex'\n\nconst parser = new GfmExParser()\n\n// parse source markdown content\nparser.parse(`\n- a\n- b\n  - c\n  - d\n  - e\n- f\n- g\n\n---\n\n- [ ] This is a TODO item.\n- [-] This is a processing TODO item.\n- [x] This is a finished TODO item.\n\n---\n\n1. This is an ordered list item\n\na. This is an another type of ordered list item\n`)\n"})})})]}),"\n",(0,i.jsx)(s.h3,{id:"options",children:"Options"}),"\n",(0,i.jsxs)(s.table,{children:[(0,i.jsx)(s.thead,{children:(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.th,{style:{textAlign:"center"},children:"Name"}),(0,i.jsx)(s.th,{style:{textAlign:"center"},children:"Type"}),(0,i.jsx)(s.th,{style:{textAlign:"center"},children:"Required"}),(0,i.jsx)(s.th,{style:{textAlign:"center"},children:"Default"})]})}),(0,i.jsxs)(s.tbody,{children:[(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{style:{textAlign:"center"},children:(0,i.jsx)(s.code,{children:"name"})}),(0,i.jsx)(s.td,{style:{textAlign:"center"},children:(0,i.jsx)(s.code,{children:"string"})}),(0,i.jsx)(s.td,{style:{textAlign:"center"},children:(0,i.jsx)(s.code,{children:"false"})}),(0,i.jsx)(s.td,{style:{textAlign:"center"},children:(0,i.jsx)(s.code,{children:'"@yozora/tokenizer-list"'})})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{style:{textAlign:"center"},children:(0,i.jsx)(s.code,{children:"priority"})}),(0,i.jsx)(s.td,{style:{textAlign:"center"},children:(0,i.jsx)(s.code,{children:"number"})}),(0,i.jsx)(s.td,{style:{textAlign:"center"},children:(0,i.jsx)(s.code,{children:"false"})}),(0,i.jsx)(s.td,{style:{textAlign:"center"},children:(0,i.jsx)(s.code,{children:"TokenizerPriority.CONTAINING_BLOCK"})})]})]})]}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"name"}),": The unique name of the tokenizer, used to bind the token it generates,\nto determine the tokenizer that should be called in each life cycle of the\ntoken in the entire ",(0,i.jsx)(s.em,{children:"matching / parsing"})," phase."]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"priority"}),": Priority of the tokenizer, determine the order of processing,\nhigh priority priority execution. interruptable. In addition, in the ",(0,i.jsx)(s.code,{children:"match-block"}),"\nstage, a high-priority tokenizer can interrupt the matching process of a\nlow-priority tokenizer."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.h3,{id:"types",children:"Types"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.a,{href:"./tokenizer-list",children:"@yozora/tokenizer-list"})," produce ",(0,i.jsx)(s.a,{href:"./ast#list",children:"List"})," type nodes.\nSee ",(0,i.jsx)(s.a,{href:"./ast",children:"@yozora/ast"})," for full base types."]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-typescript",children:"import type { ListItem, YastParent } from '@yozora/ast'\n\nexport const ListType = 'list'\nexport type ListType = typeof ListType\n\n/**\n * List represents a list of items.\n * @see https://github.com/syntax-tree/mdast#list\n * @see https://github.github.com/gfm/#list\n */\nexport interface List extends YastParent<ListType> {\n  /**\n   * Whether it is an ordered lit.\n   */\n  ordered: boolean\n  /**\n   * The starting number of a ordered list-item.\n   */\n  start?: number\n  /**\n   * Marker of a unordered list-item, or delimiter of an ordered list-item.\n   */\n  marker: number\n  /**\n   * Whether if the list is loose.\n   * @see https://github.github.com/gfm/#loose\n   */\n  spread: boolean\n  /**\n   * Lists are container block.\n   */\n  children: ListItem[]\n}\n"})}),"\n",(0,i.jsx)(s.h2,{id:"live-examples",children:"Live Examples"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsx)(s.p,{children:"Basic."}),"\n",(0,i.jsx)(l.c,{ids:"281-283"}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:["In order to solve of unwanted lists in paragraphs with hard-wrapped\nnumerals, we allow only lists starting with ",(0,i.jsxs)(s.span,{className:"katex",children:[(0,i.jsx)(s.span,{className:"katex-mathml",children:(0,i.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(s.semantics,{children:[(0,i.jsx)(s.mrow,{children:(0,i.jsx)(s.mn,{children:"1"})}),(0,i.jsx)(s.annotation,{encoding:"application/x-tex",children:"1"})]})})}),(0,i.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"0.6444em"}}),(0,i.jsx)(s.span,{className:"mord",children:"1"})]})})]})," to interrupt paragraphs."]}),"\n",(0,i.jsx)(l.c,{ids:"284-285"}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsx)(s.p,{children:"There can be any number of blank lines between items."}),"\n",(0,i.jsx)(l.c,{ids:"286-287"}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsx)(s.p,{children:"To separate consecutive lists of the same type, or to separate a list from\nan indented code block that would otherwise be parsed as a subparagraph of\nthe final list item, you can insert a blank HTML comment."}),"\n",(0,i.jsx)(l.c,{ids:"288-289"}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsx)(s.p,{children:"List items need not be indented to the same level. The following list items\nwill be treated as items at the same list level, since none is indented\nenough to belong to the previous list item."}),"\n",(0,i.jsx)(l.c,{ids:"290-291"}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:["Note, however, that list items may not be indented more than three spaces.\nHere ",(0,i.jsx)(s.code,{children:"- e"})," is treated as a paragraph continuation line, because it is\nindented more than three spaces."]}),"\n",(0,i.jsx)(l.c,{ids:"292"}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:["And here, ",(0,i.jsx)(s.code,{children:"3. c"})," is treated as in indented code block, because it is indented\nfour spaces and preceded by a blank line."]}),"\n",(0,i.jsx)(l.c,{ids:"293"}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsx)(s.p,{children:"This is a loose list, because there is a blank line between two of the\nlist items."}),"\n",(0,i.jsx)(l.c,{ids:"294"}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsx)(s.p,{children:"So is this, with a empty second item."}),"\n",(0,i.jsx)(l.c,{ids:"295"}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsx)(s.p,{children:"These are loose lists, even though there is no space between the items,\nbecause one of the items directly contains two block-level elements with a\nblank line between them."}),"\n",(0,i.jsx)(l.c,{ids:"296-297"}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsx)(s.p,{children:"This is a tight list, because the blank lines are in a code block."}),"\n",(0,i.jsx)(l.c,{ids:"298"}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsx)(s.p,{children:"This is a tight list, because the blank line is between two paragraphs of a\nsublist. So the sublist is loose while the outer list is tight."}),"\n",(0,i.jsx)(l.c,{ids:"299"}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsx)(s.p,{children:"This is a tight list, because the blank line is inside the block quote."}),"\n",(0,i.jsx)(l.c,{ids:"300"}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsx)(s.p,{children:"This list is tight, because the consecutive block elements are not\nseparated by blank lines."}),"\n",(0,i.jsx)(l.c,{ids:"301"}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsx)(s.p,{children:"A single-paragraph list is tight."}),"\n",(0,i.jsx)(l.c,{ids:"302-303"}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsx)(s.p,{children:"This list is loose, because of the blank line between the two block elements\nin the list item."}),"\n",(0,i.jsx)(l.c,{ids:"304"}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsx)(s.p,{children:"Here the outer list is loose, the inner list tight."}),"\n",(0,i.jsx)(l.c,{ids:"305-306"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"related",children:"Related"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.a,{href:"./ast",children:"@yozora/ast"})}),"\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.a,{href:"./parser",children:"@yozora/parser"})}),"\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.a,{href:"./parser-gfm",children:"@yozora/parser-gfm"})}),"\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.a,{href:"./parser-gfm-ex",children:"@yozora/parser-gfm-ex"})}),"\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.a,{href:"./tokenizer-list-item",children:"@yozora/tokenizer-list-item"})}),"\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.a,{href:"https://github.com/yozorajs/yozora-react/tree/main/packages/list#readme",children:"@yozora/react-list"})}),"\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.a,{href:"https://github.com/yozorajs/yozora-react/tree/main/packages/list-item#readme",children:"@yozora/react-list-item"})}),"\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.a,{href:"https://github.com/yozorajs/yozora-react/tree/main/packages/markdown#readme",children:"@yozora/react-markdown"})}),"\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.a,{href:"https://github.com/yozorajs/yozora/tree/release-1.x.x/tokenizers/list",children:"Sourcecode"})}),"\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.a,{href:"./ast#list",children:"List | Yozora AST"})}),"\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.a,{href:"https://github.github.com/gfm/#lists",children:"Lists | Github Flavor Markdown Spec"})}),"\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.a,{href:"https://github.com/syntax-tree/mdast#list",children:"List | Mdast"})}),"\n"]})]})}function x(e={}){const{wrapper:s}={...(0,t.M)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(p,{...e})}):p(e)}}}]);