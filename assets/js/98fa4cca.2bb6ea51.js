"use strict";(self.webpackChunk_yozora_doc=self.webpackChunk_yozora_doc||[]).push([[5975],{87771:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>h,contentTitle:()=>o,default:()=>d,frontMatter:()=>m,metadata:()=>l,toc:()=>k});var n=a(87462),r=(a(67294),a(3905)),i=a(25487),p=a(86023),s=a(10629);const m={id:"tokenizer-emphasis",title:"@yozora/tokenizer-emphasis",sidebar_label:"emphasis"},o=void 0,l={unversionedId:"package/tokenizer-emphasis",id:"version-1.x.x/package/tokenizer-emphasis",title:"@yozora/tokenizer-emphasis",description:"<img",source:"@site/versioned_docs/version-1.x.x/package/tokenizer-emphasis.mdx",sourceDirName:"package",slug:"/package/tokenizer-emphasis",permalink:"/docs/1.x.x/package/tokenizer-emphasis",draft:!1,tags:[],version:"1.x.x",lastUpdatedBy:"guanghechen",lastUpdatedAt:1683986667,formattedLastUpdatedAt:"May 13, 2023",frontMatter:{id:"tokenizer-emphasis",title:"@yozora/tokenizer-emphasis",sidebar_label:"emphasis"},sidebar:"Docs",previous:{title:"ecma-import",permalink:"/docs/1.x.x/package/tokenizer-ecma-import"},next:{title:"fenced-code",permalink:"/docs/1.x.x/package/tokenizer-fenced-code"}},h={},k=[{value:"Install",id:"install",level:2},{value:"Usage",id:"usage",level:2},{value:"Options",id:"options",level:3},{value:"Types",id:"types",level:3},{value:"Live Examples",id:"live-examples",level:2},{value:"Related",id:"related",level:2}],c={toc:k};function d(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("header",null,(0,r.kt)("div",{align:"center"},(0,r.kt)("a",{href:"https://www.npmjs.com/package/@yozora/tokenizer-emphasis"},(0,r.kt)("img",{alt:"Npm Version",src:"https://img.shields.io/npm/v/@yozora/tokenizer-emphasis/v1.x.x"})),(0,r.kt)("a",{href:"https://www.npmjs.com/package/@yozora/tokenizer-emphasis"},(0,r.kt)("img",{alt:"Npm Download",src:"https://img.shields.io/npm/dm/@yozora/tokenizer-emphasis.svg"})),(0,r.kt)("a",{href:"https://www.npmjs.com/package/@yozora/tokenizer-emphasis"},(0,r.kt)("img",{alt:"Npm License",src:"https://img.shields.io/npm/l/@yozora/tokenizer-emphasis.svg"})),(0,r.kt)("a",{href:"#install"},(0,r.kt)("img",{alt:"Module formats: cjs, esm",src:"https://img.shields.io/badge/module_formats-cjs%2C%20esm-green.svg"})),(0,r.kt)("a",{href:"https://github.com/nodejs/node"},(0,r.kt)("img",{alt:"Node.js Version",src:"https://img.shields.io/node/v/@yozora/tokenizer-emphasis"})),(0,r.kt)("a",{href:"https://github.com/facebook/jest"},(0,r.kt)("img",{alt:"Tested with Jest",src:"https://img.shields.io/badge/tested_with-jest-9c465e.svg"})),(0,r.kt)("a",{href:"https://github.com/prettier/prettier"},(0,r.kt)("img",{alt:"Code Style: prettier",src:"https://img.shields.io/badge/code_style-prettier-ff69b4.svg?style=flat-square"})))),(0,r.kt)("br",null),(0,r.kt)("admonition",{title:"github flavor markdown spec",type:"note"},(0,r.kt)("p",{parentName:"admonition"},"First, some definitions. A ",(0,r.kt)("a",{parentName:"p",href:"https://github.github.com/gfm/#delimiter-run"},"delimiter run")," is either a\nsequence of one or more ",(0,r.kt)("inlineCode",{parentName:"p"},"*")," characters that is not preceded or followed by a\nnon-backslash-escaped ",(0,r.kt)("inlineCode",{parentName:"p"},"*")," character, or a sequence of one or more ",(0,r.kt)("inlineCode",{parentName:"p"},"_")," characters\nthat is not preceded or followed by a non-backslash-escaped ",(0,r.kt)("inlineCode",{parentName:"p"},"_")," character."),(0,r.kt)("p",{parentName:"admonition"},"A ",(0,r.kt)("a",{parentName:"p",href:"https://github.github.com/gfm/#left-flanking-delimiter-run"},"left-flanking delimiter run")," is a\n",(0,r.kt)("a",{parentName:"p",href:"https://github.github.com/gfm/#delimiter-run"},"delimiter run")," that is:"),(0,r.kt)("ol",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"not followed by ",(0,r.kt)("a",{parentName:"p",href:"https://github.github.com/gfm/#unicode-whitespace"},"Unicode whitespace"),", and either")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"a) not followed by a ",(0,r.kt)("a",{parentName:"p",href:"https://github.github.com/gfm/#punctuation-character"},"punctuation character"),", or"),(0,r.kt)("p",{parentName:"li"},"b) followed by a ",(0,r.kt)("a",{parentName:"p",href:"https://github.github.com/gfm/#punctuation-character"},"punctuation character")," and\npreceded by ",(0,r.kt)("a",{parentName:"p",href:"https://github.github.com/gfm/#unicode-whitespace"},"Unicode whitespace")," or a\n",(0,r.kt)("a",{parentName:"p",href:"https://github.github.com/gfm/#punctuation-character"},"punctuation character"),"."))),(0,r.kt)("p",{parentName:"admonition"},"For purposes of this definition, the beginning and the end of the line count as\n",(0,r.kt)("a",{parentName:"p",href:"https://github.github.com/gfm/#unicode-whitespace"},"Unicode whitespace"),"."),(0,r.kt)("p",{parentName:"admonition"},"A ",(0,r.kt)("a",{parentName:"p",href:"https://github.github.com/gfm/#right-flanking-delimiter-run"},"right-flanking delimiter")," run is a\n",(0,r.kt)("a",{parentName:"p",href:"https://github.github.com/gfm/#delimiter-run"},"delimiter run")," that is:"),(0,r.kt)("ol",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"not preceded by Unicode whitespace, and either")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"a) not preceded by a ",(0,r.kt)("a",{parentName:"p",href:"https://github.github.com/gfm/#punctuation-character"},"punctuation character"),", or"),(0,r.kt)("p",{parentName:"li"},"2b) preceded by a ",(0,r.kt)("a",{parentName:"p",href:"https://github.github.com/gfm/#punctuation-character"},"punctuation character")," and\nfollowed by ",(0,r.kt)("a",{parentName:"p",href:"https://github.github.com/gfm/#unicode-whitespace"},"Unicode whitespace")," or a\n",(0,r.kt)("a",{parentName:"p",href:"https://github.github.com/gfm/#punctuation-character"},"punctuation character"),"."))),(0,r.kt)("p",{parentName:"admonition"},"For purposes of this definition, the beginning and the end of the line count as\n",(0,r.kt)("a",{parentName:"p",href:"https://github.github.com/gfm/#unicode-whitespace"},"Unicode whitespace"),"."),(0,r.kt)("hr",{parentName:"admonition"}),(0,r.kt)("p",{parentName:"admonition"},"The following rules define emphasis and strong emphasis:"),(0,r.kt)("ol",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"A single ",(0,r.kt)("inlineCode",{parentName:"p"},"*")," character ",(0,r.kt)("a",{parentName:"p",href:"https://github.github.com/gfm/#can-open-emphasis"},"can open emphasis")," iff (if\nand only if) it is part of a ",(0,r.kt)("a",{parentName:"p",href:"https://github.github.com/gfm/#left-flanking-delimiter-run"},"left-flanking delimiter run"),".")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"A single ",(0,r.kt)("inlineCode",{parentName:"p"},"_")," character ",(0,r.kt)("a",{parentName:"p",href:"https://github.github.com/gfm/#can-open-emphasis"},"can open emphasis")," iff it is\npart of a ",(0,r.kt)("a",{parentName:"p",href:"https://github.github.com/gfm/#left-flanking-delimiter-run"},"left-flanking delimiter run")," and either"),(0,r.kt)("p",{parentName:"li"},"a) not part of a ",(0,r.kt)("a",{parentName:"p",href:"https://github.github.com/gfm/#right-flanking-delimiter-run"},"right-flanking delimiter run")," or"),(0,r.kt)("p",{parentName:"li"},"b) part of a ","[right-flanking delimiter run]"," preceded by a\n",(0,r.kt)("a",{parentName:"p",href:"https://github.github.com/gfm/#punctuation-character"},"punctuation character"),".")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"A single ",(0,r.kt)("inlineCode",{parentName:"p"},"*")," character ",(0,r.kt)("a",{parentName:"p",href:"https://github.github.com/gfm/#can-close-emphasis"},"can close emphasis")," iff it\nis part of a ",(0,r.kt)("a",{parentName:"p",href:"https://github.github.com/gfm/#right-flanking-delimiter-run"},"right-flanking delimiter run"),".")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"A single ",(0,r.kt)("inlineCode",{parentName:"p"},"_")," character ",(0,r.kt)("a",{parentName:"p",href:"https://github.github.com/gfm/#can-close-emphasis"},"can close emphasis")," iff it\nis part of a ",(0,r.kt)("a",{parentName:"p",href:"https://github.github.com/gfm/#right-flanking-delimiter-run"},"right-flanking delimiter run")," and either"),(0,r.kt)("p",{parentName:"li"},"a) not part of a ",(0,r.kt)("a",{parentName:"p",href:"https://github.github.com/gfm/#left-flanking-delimiter-run"},"left-flanking delimiter run")," or"),(0,r.kt)("p",{parentName:"li"},"b) part of a ",(0,r.kt)("a",{parentName:"p",href:"https://github.github.com/gfm/#left-flanking-delimiter-run"},"left-flanking delimiter run")," followed\nby a ",(0,r.kt)("a",{parentName:"p",href:"https://github.github.com/gfm/#punctuation-character"},"punctuation character"),".")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"A double ",(0,r.kt)("inlineCode",{parentName:"p"},"**")," ",(0,r.kt)("a",{parentName:"p",href:"https://github.github.com/gfm/#can-open-strong-emphasis"},"can open strong emphasis")," iff it is\npart of a ",(0,r.kt)("a",{parentName:"p",href:"https://github.github.com/gfm/#left-flanking-delimiter-run"},"left-flanking delimiter run"),".")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"A double ",(0,r.kt)("inlineCode",{parentName:"p"},"__")," ",(0,r.kt)("a",{parentName:"p",href:"https://github.github.com/gfm/#can-open-strong-emphasis"},"can open strong emphasis")," iff it is\npart of a ",(0,r.kt)("a",{parentName:"p",href:"https://github.github.com/gfm/#left-flanking-delimiter-run"},"left-flanking delimiter run")," and either"),(0,r.kt)("p",{parentName:"li"},"a) not part of a ",(0,r.kt)("a",{parentName:"p",href:"https://github.github.com/gfm/#right-flanking-delimiter-run"},"right-flanking delimiter run")," or"),(0,r.kt)("p",{parentName:"li"},"b) part of a ",(0,r.kt)("a",{parentName:"p",href:"https://github.github.com/gfm/#right-flanking-delimiter-run"},"right-flanking delimiter run"),"\npreceded by a ",(0,r.kt)("a",{parentName:"p",href:"https://github.github.com/gfm/#punctuation-character"},"punctuation character"),".")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"A double ",(0,r.kt)("inlineCode",{parentName:"p"},"**")," ",(0,r.kt)("a",{parentName:"p",href:"https://github.github.com/gfm/#can-close-strong-emphasis"},"can close strong emphasis")," iff it is\npart of a ",(0,r.kt)("a",{parentName:"p",href:"https://github.github.com/gfm/#right-flanking-delimiter-run"},"right-flanking delimiter run"),".")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"A double ",(0,r.kt)("inlineCode",{parentName:"p"},"__")," ",(0,r.kt)("a",{parentName:"p",href:"https://github.github.com/gfm/#can-close-strong-emphasis"},"can close strong emphasis")," iff it is\npart of a ",(0,r.kt)("a",{parentName:"p",href:"https://github.github.com/gfm/#right-flanking-delimiter-run"},"right-flanking delimiter")," run and either"),(0,r.kt)("p",{parentName:"li"},"a) not part of a ",(0,r.kt)("a",{parentName:"p",href:"https://github.github.com/gfm/#left-flanking-delimiter-run"},"left-flanking delimiter run")," or"),(0,r.kt)("p",{parentName:"li"},"b) part of a ","[left-flanking delimiter run]"," followed by a\n",(0,r.kt)("a",{parentName:"p",href:"https://github.github.com/gfm/#punctuation-character"},"punctuation character"),".")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Emphasis begins with a delimiter that ",(0,r.kt)("a",{parentName:"p",href:"https://github.github.com/gfm/#can-open-emphasis"},"can open emphasis"),"\nand ends with a delimiter that ",(0,r.kt)("a",{parentName:"p",href:"https://github.github.com/gfm/#can-close-emphasis"},"can close emphasis"),",\nand that uses the same character (",(0,r.kt)("inlineCode",{parentName:"p"},"_")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"*"),") as the opening delimiter. The\nopening and closing delimiters must belong to separate ",(0,r.kt)("a",{parentName:"p",href:"https://github.github.com/gfm/#delimiter-run"},"delimiter run"),"s.\nIf one of the delimiters can both open and close emphasis, then the sum of\nthe lengths of the delimiter runs containing the opening and closing\ndelimiters must not be a multiple of ",(0,r.kt)("span",{parentName:"p",className:"math math-inline"},(0,r.kt)("span",{parentName:"span",className:"katex"},(0,r.kt)("span",{parentName:"span",className:"katex-mathml"},(0,r.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,r.kt)("semantics",{parentName:"math"},(0,r.kt)("mrow",{parentName:"semantics"},(0,r.kt)("mn",{parentName:"mrow"},"3")),(0,r.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"3")))),(0,r.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"0.6444em"}}),(0,r.kt)("span",{parentName:"span",className:"mord"},"3")))))," unless both lengths are multiples\nof ",(0,r.kt)("span",{parentName:"p",className:"math math-inline"},(0,r.kt)("span",{parentName:"span",className:"katex"},(0,r.kt)("span",{parentName:"span",className:"katex-mathml"},(0,r.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,r.kt)("semantics",{parentName:"math"},(0,r.kt)("mrow",{parentName:"semantics"},(0,r.kt)("mn",{parentName:"mrow"},"3")),(0,r.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"3")))),(0,r.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"0.6444em"}}),(0,r.kt)("span",{parentName:"span",className:"mord"},"3"))))),".")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Strong emphasis begins with a delimiter that\n",(0,r.kt)("a",{parentName:"p",href:"https://github.github.com/gfm/#can-open-strong-emphasis"},"can open strong emphasis")," and ends with a delimiter\nthat ",(0,r.kt)("a",{parentName:"p",href:"https://github.github.com/gfm/#can-close-strong-emphasis"},"can close strong emphasis"),", and that uses the\nsame character (",(0,r.kt)("inlineCode",{parentName:"p"},"_")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"*"),") as the opening delimiter. The opening and\nclosing delimiters must belong to separate ",(0,r.kt)("a",{parentName:"p",href:"https://github.github.com/gfm/#delimiter-run"},"delimiter run"),"s.\nIf one of the delimiters can both open and close strong emphasis, then the\nsum of the lengths of the delimiter runs containing the opening and closing\ndelimiters must not be a multiple of ",(0,r.kt)("span",{parentName:"p",className:"math math-inline"},(0,r.kt)("span",{parentName:"span",className:"katex"},(0,r.kt)("span",{parentName:"span",className:"katex-mathml"},(0,r.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,r.kt)("semantics",{parentName:"math"},(0,r.kt)("mrow",{parentName:"semantics"},(0,r.kt)("mn",{parentName:"mrow"},"3")),(0,r.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"3")))),(0,r.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"0.6444em"}}),(0,r.kt)("span",{parentName:"span",className:"mord"},"3")))))," unless both lengths are multiples\nof ",(0,r.kt)("span",{parentName:"p",className:"math math-inline"},(0,r.kt)("span",{parentName:"span",className:"katex"},(0,r.kt)("span",{parentName:"span",className:"katex-mathml"},(0,r.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,r.kt)("semantics",{parentName:"math"},(0,r.kt)("mrow",{parentName:"semantics"},(0,r.kt)("mn",{parentName:"mrow"},"3")),(0,r.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"3")))),(0,r.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"0.6444em"}}),(0,r.kt)("span",{parentName:"span",className:"mord"},"3"))))),".")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"A literal ",(0,r.kt)("inlineCode",{parentName:"p"},"*")," character cannot occur at the beginning or end of\n",(0,r.kt)("inlineCode",{parentName:"p"},"*"),"-delimited emphasis or ",(0,r.kt)("inlineCode",{parentName:"p"},"**"),"-delimited strong emphasis, unless it is\nbackslash-escaped.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"A literal ",(0,r.kt)("inlineCode",{parentName:"p"},"_")," character cannot occur at the beginning or end of\n",(0,r.kt)("inlineCode",{parentName:"p"},"_"),"-delimited emphasis or ",(0,r.kt)("inlineCode",{parentName:"p"},"__"),"-delimited strong emphasis, unless it is\nbackslash-escaped."))),(0,r.kt)("hr",{parentName:"admonition"}),(0,r.kt)("p",{parentName:"admonition"},"Where rules 1-12 above are compatible with multiple parsings, the following\nprinciples resolve ambiguity:"),(0,r.kt)("ol",{parentName:"admonition",start:13},(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"The number of nestings should be minimized. Thus, for example, an\ninterpretation ",(0,r.kt)("inlineCode",{parentName:"p"},"<strong>...</strong>")," is always preferred to\n",(0,r.kt)("inlineCode",{parentName:"p"},"<em><em>...</em></em>"),".")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"An interpretation ",(0,r.kt)("inlineCode",{parentName:"p"},"<em><strong>...</strong></em>")," is always preferred to\n",(0,r.kt)("inlineCode",{parentName:"p"},"<strong><em>...</em></strong>"),".")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"When two potential emphasis or strong emphasis spans overlap, so that the\nsecond begins before the first ends and ends after the first ends, the first\ntakes precedence. Thus, for example, ",(0,r.kt)("inlineCode",{parentName:"p"},"*foo _bar* baz_")," is parsed as\n",(0,r.kt)("inlineCode",{parentName:"p"},"<em>foo _bar</em> baz_")," rather than ",(0,r.kt)("inlineCode",{parentName:"p"},"*foo <em>bar* baz</em>"),".")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"When there are two potential emphasis or strong emphasis spans with the\nsame closing delimiter, the shorter one (the one that opens later) takes\nprecedence. Thus, for example, ",(0,r.kt)("inlineCode",{parentName:"p"},"**foo **bar baz**")," is parsed as\n",(0,r.kt)("inlineCode",{parentName:"p"},"**foo <strong>bar baz</strong>")," rather than ",(0,r.kt)("inlineCode",{parentName:"p"},"<strong>foo **bar baz</strong>"),".")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Inline code spans, links, images, and HTML tags group more tightly than\nemphasis. So, when there is a choice between an interpretation that contains\none of these elements and one that does not, the former always wins. Thus,\nfor example, ",(0,r.kt)("inlineCode",{parentName:"p"},"*[foo*](bar)")," is parsed as ",(0,r.kt)("inlineCode",{parentName:"p"},'*<a href="bar">foo*</a>')," rather\nthan as ",(0,r.kt)("inlineCode",{parentName:"p"},"<em>[foo</em>](bar)"),"."))),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"See ",(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("a",{parentName:"strong",href:"https://github.github.com/gfm/#can-open-emphasis"},"github flavor markdown spec"))," for details."),(0,r.kt)("li",{parentName:"ul"},"See ",(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("a",{parentName:"strong",href:"#live-examples"},"Live Examples"))," for an intuitive impression."))),(0,r.kt)("h2",{id:"install"},"Install"),(0,r.kt)(i.Z,{groupId:"npm2yarn",mdxType:"Tabs"},(0,r.kt)(p.Z,{value:"npm",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"npm install --save @yozora/tokenizer-emphasis\n"))),(0,r.kt)(p.Z,{value:"yarn",label:"Yarn",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"yarn add @yozora/tokenizer-emphasis\n"))),(0,r.kt)(p.Z,{value:"pnpm",label:"pnpm",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"pnpm add @yozora/tokenizer-emphasis\n")))),(0,r.kt)("h2",{id:"usage"},"Usage"),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},(0,r.kt)("a",{parentName:"p",href:"./tokenizer-emphasis"},"@yozora/tokenizer-emphasis")," has been integrated into ",(0,r.kt)("a",{parentName:"p",href:"./parser"},"@yozora/parser")," / ",(0,r.kt)("a",{parentName:"p",href:"./parser-gfm-ex"},"@yozora/parser-gfm-ex")," / ",(0,r.kt)("a",{parentName:"p",href:"./parser-gfm"},"@yozora/parser-gfm"),",\nso you can use ",(0,r.kt)("inlineCode",{parentName:"p"},"YozoraParser")," / ",(0,r.kt)("inlineCode",{parentName:"p"},"GfmExParser")," / ",(0,r.kt)("inlineCode",{parentName:"p"},"GfmParser")," directly.")),(0,r.kt)(i.Z,{defaultValue:"YozoraParser",values:[{label:"Basic Usage",value:"basic-usage"},{label:"YozoraParser",value:"YozoraParser"},{label:"GfmParser",value:"GfmParser"},{label:"GfmExParser",value:"GfmExParser"}],mdxType:"Tabs"},(0,r.kt)(p.Z,{value:"basic-usage",mdxType:"TabItem"},(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"./tokenizer-emphasis"},"@yozora/tokenizer-emphasis")," cannot be used alone, it needs to be\nregistered in ",(0,r.kt)("em",{parentName:"p"},"YastParser")," as a plugin-in before it can be used."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript",metastring:"{4,9}","{4,9}":!0},"import { DefaultYastParser } from '@yozora/core-parser'\nimport ParagraphTokenizer from '@yozora/tokenizer-paragraph'\nimport TextTokenizer from '@yozora/tokenizer-text'\nimport EmphasisTokenizer from '@yozora/tokenizer-emphasis'\n\nconst parser = new DefaultYastParser()\n  .useBlockFallbackTokenizer(new ParagraphTokenizer())\n  .useInlineFallbackTokenizer(new TextTokenizer())\n  .useTokenizer(new EmphasisTokenizer())\n\n// parse source markdown content\nparser.parse(`\n\n**foo bar**\n\n__foo bar__\n\n_foo bar_\n\n*foo bar*\n\n__**__foo__**__\n\n`)\n"))),(0,r.kt)(p.Z,{value:"YozoraParser",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"import YozoraParser from '@yozora/parser'\n\nconst parser = new YozoraParser()\n\n// parse source markdown content\nparser.parse(`\n\n**foo bar**\n\n__foo bar__\n\n_foo bar_\n\n*foo bar*\n\n__**__foo__**__\n\n`)\n"))),(0,r.kt)(p.Z,{value:"GfmParser",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"import GfmParser from '@yozora/parser-gfm'\n\nconst parser = new GfmParser()\n\n// parse source markdown content\nparser.parse(`\n\n**foo bar**\n\n__foo bar__\n\n_foo bar_\n\n*foo bar*\n\n__**__foo__**__\n\n`)\n"))),(0,r.kt)(p.Z,{value:"GfmExParser",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"import GfmExParser from '@yozora/parser-gfm-ex'\n\nconst parser = new GfmExParser()\n\n// parse source markdown content\nparser.parse(`\n\n**foo bar**\n\n__foo bar__\n\n_foo bar_\n\n*foo bar*\n\n__**__foo__**__\n\n`)\n")))),(0,r.kt)("h3",{id:"options"},"Options"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"center"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"center"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"center"},"Required"),(0,r.kt)("th",{parentName:"tr",align:"center"},"Default"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"name")),(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"false")),(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},'"@yozora/tokenizer-emphasis"'))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"priority")),(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"false")),(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"TokenizerPriority.CONTAINING_INLINE"))))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"name"),": The unique name of the tokenizer, used to bind the token it generates,\nto determine the tokenizer that should be called in each life cycle of the\ntoken in the entire ",(0,r.kt)("em",{parentName:"p"},"matching / parsing")," phase.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"priority"),": Priority of the tokenizer, determine the order of processing,\nhigh priority priority execution. interruptable. In addition, in the ",(0,r.kt)("inlineCode",{parentName:"p"},"match-block"),"\nstage, a high-priority tokenizer can interrupt the matching process of a\nlow-priority tokenizer."),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Exception:")," Delimiters of type ",(0,r.kt)("inlineCode",{parentName:"p"},"full")," are always processed before other type\ndelimiters."))),(0,r.kt)("h3",{id:"types"},"Types"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"./tokenizer-emphasis"},"@yozora/tokenizer-emphasis")," produce ",(0,r.kt)("a",{parentName:"p",href:"./ast#emphasis"},"Emphasis")," / ",(0,r.kt)("a",{parentName:"p",href:"./ast#strong"},"Strong")," type nodes.\nSee ",(0,r.kt)("a",{parentName:"p",href:"./ast"},"@yozora/ast")," for full base types."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"Emphasis")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"import type { YastParent } from '@yozora/ast'\n\nexport const EmphasisType = 'emphasis'\nexport type EmphasisType = typeof EmphasisType\n\n/**\n * Emphasis represents stress emphasis of its contents.\n * @see https://github.com/syntax-tree/mdast#emphasis\n * @see https://github.github.com/gfm/#emphasis-and-strong-emphasis\n */\nexport type Emphasis = YastParent<EmphasisType>\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"Strong")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"import type { YastParent } from '@yozora/ast'\n\nexport const StrongType = 'strong'\nexport type StrongType = typeof StrongType\n\n/**\n* Strong represents strong importance, seriousness, or urgency for its\n* contents.\n* @see https://github.com/syntax-tree/mdast#strong\n* @see https://github.github.com/gfm/#emphasis-and-strong-emphasis\n*/\nexport type Strong = YastParent<StrongType>\n")))),(0,r.kt)("h2",{id:"live-examples"},"Live Examples"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Rule1."),(0,r.kt)(s.Z,{ids:"360-365",mdxType:"YozoraGFMLive"})),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Rule2."),(0,r.kt)(s.Z,{ids:"366-373",mdxType:"YozoraGFMLive"})),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Rule3."),(0,r.kt)(s.Z,{ids:"374-379",mdxType:"YozoraGFMLive"})),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Rule4."),(0,r.kt)(s.Z,{ids:"380-386",mdxType:"YozoraGFMLive"})),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Rule5."),(0,r.kt)(s.Z,{ids:"387-390",mdxType:"YozoraGFMLive"})),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Rule6."),(0,r.kt)(s.Z,{ids:"391-399",mdxType:"YozoraGFMLive"})),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Rule7."),(0,r.kt)(s.Z,{ids:"400-405",mdxType:"YozoraGFMLive"})),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Rule8."),(0,r.kt)(s.Z,{ids:"406-412",mdxType:"YozoraGFMLive"})),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Rule9."),(0,r.kt)(s.Z,{ids:"413-430",mdxType:"YozoraGFMLive"})),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Rule10."),(0,r.kt)(s.Z,{ids:"431-444",mdxType:"YozoraGFMLive"})),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Rule11."),(0,r.kt)(s.Z,{ids:"445-456",mdxType:"YozoraGFMLive"})),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Rule12."),(0,r.kt)(s.Z,{ids:"457-474",mdxType:"YozoraGFMLive"})),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Rule13."),(0,r.kt)(s.Z,{ids:"475-475",mdxType:"YozoraGFMLive"})),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Rule14."),(0,r.kt)(s.Z,{ids:"476-477",mdxType:"YozoraGFMLive"})),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Rule15."),(0,r.kt)(s.Z,{ids:"478-479",mdxType:"YozoraGFMLive"})),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Rule16."),(0,r.kt)(s.Z,{ids:"480-481",mdxType:"YozoraGFMLive"})),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Rule17."),(0,r.kt)(s.Z,{ids:"482-490",mdxType:"YozoraGFMLive"}))),(0,r.kt)("h2",{id:"related"},"Related"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"./ast"},"@yozora/ast")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"./parser"},"@yozora/parser")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"./parser-gfm"},"@yozora/parser-gfm")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"./parser-gfm-ex"},"@yozora/parser-gfm-ex")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/yozorajs/yozora-react/tree/main/packages/emphasis#readme"},"@yozora/react-emphasis")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/yozorajs/yozora-react/tree/main/packages/strong#readme"},"@yozora/react-strong")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/yozorajs/yozora-react/tree/main/packages/markdown#readme"},"@yozora/react-markdown")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/yozorajs/yozora/tree/release-1.x.x/tokenizers/emphasis"},"Sourcecode")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"./ast#emphasis"},"Emphasis | Yozora AST")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"./ast#strong"},"Strong | Yozora AST")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.github.com/gfm/#can-open-emphasis"},"Emphasis and strong emphasis | Github Flavor Markdown Spec")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/syntax-tree/mdast#emphasis"},"Emphasis | Mdast")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/syntax-tree/mdast#strong"},"Strong | Mdast"))))}d.isMDXComponent=!0}}]);