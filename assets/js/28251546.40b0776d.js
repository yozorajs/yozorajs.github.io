"use strict";(self.webpackChunk_yozora_doc=self.webpackChunk_yozora_doc||[]).push([[4517],{9562:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>k,contentTitle:()=>s,default:()=>h,frontMatter:()=>p,metadata:()=>m,toc:()=>d});var n=a(87462),r=(a(67294),a(3905)),i=a(25487),o=a(86023),l=a(10629);const p={id:"tokenizer-autolink-extension",title:"@yozora/tokenizer-autolink-extension",sidebar_label:"autolink (extension)"},s=void 0,m={unversionedId:"package/tokenizer-autolink-extension",id:"package/tokenizer-autolink-extension",title:"@yozora/tokenizer-autolink-extension",description:"<img",source:"@site/docs/package/tokenizer-autolink-extension.mdx",sourceDirName:"package",slug:"/package/tokenizer-autolink-extension",permalink:"/docs/next/package/tokenizer-autolink-extension",draft:!1,tags:[],version:"current",lastUpdatedBy:"guanghechen",lastUpdatedAt:1683986667,formattedLastUpdatedAt:"May 13, 2023",frontMatter:{id:"tokenizer-autolink-extension",title:"@yozora/tokenizer-autolink-extension",sidebar_label:"autolink (extension)"},sidebar:"Docs",previous:{title:"autolink",permalink:"/docs/next/package/tokenizer-autolink"},next:{title:"blockquote",permalink:"/docs/next/package/tokenizer-blockquote"}},k={},d=[{value:"Install",id:"install",level:2},{value:"Usage",id:"usage",level:2},{value:"Options",id:"options",level:3},{value:"Types",id:"types",level:3},{value:"Live Examples",id:"live-examples",level:2},{value:"Related",id:"related",level:2}],u={toc:d};function h(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("header",null,(0,r.kt)("div",{align:"center"},(0,r.kt)("a",{href:"https://www.npmjs.com/package/@yozora/tokenizer-autolink-extension"},(0,r.kt)("img",{alt:"Npm Version",src:"https://img.shields.io/npm/v/@yozora/tokenizer-autolink-extension/latest"})),(0,r.kt)("a",{href:"https://www.npmjs.com/package/@yozora/tokenizer-autolink-extension"},(0,r.kt)("img",{alt:"Npm Download",src:"https://img.shields.io/npm/dm/@yozora/tokenizer-autolink-extension.svg"})),(0,r.kt)("a",{href:"https://www.npmjs.com/package/@yozora/tokenizer-autolink-extension"},(0,r.kt)("img",{alt:"Npm License",src:"https://img.shields.io/npm/l/@yozora/tokenizer-autolink-extension.svg"})),(0,r.kt)("a",{href:"#install"},(0,r.kt)("img",{alt:"Module formats: cjs, esm",src:"https://img.shields.io/badge/module_formats-cjs%2C%20esm-green.svg"})),(0,r.kt)("a",{href:"https://github.com/nodejs/node"},(0,r.kt)("img",{alt:"Node.js Version",src:"https://img.shields.io/node/v/@yozora/tokenizer-autolink-extension"})),(0,r.kt)("a",{href:"https://github.com/facebook/jest"},(0,r.kt)("img",{alt:"Tested with Jest",src:"https://img.shields.io/badge/tested_with-jest-9c465e.svg"})),(0,r.kt)("a",{href:"https://github.com/prettier/prettier"},(0,r.kt)("img",{alt:"Code Style: prettier",src:"https://img.shields.io/badge/code_style-prettier-ff69b4.svg?style=flat-square"})))),(0,r.kt)("br",null),(0,r.kt)("admonition",{title:"github flavor markdown spec",type:"note"},(0,r.kt)("p",{parentName:"admonition"},"GFM enables the ",(0,r.kt)("a",{parentName:"p",href:"https://github.github.com/gfm/#autolinks-extension-"},"autolink extension"),", where autolinks\nwill be recognised in a greater number of conditions."),(0,r.kt)("p",{parentName:"admonition"},(0,r.kt)("a",{parentName:"p",href:"https://github.github.com/gfm/#autolinks"},"Autolinks")," can also be constructed without requiring the use of\n",(0,r.kt)("inlineCode",{parentName:"p"},"<")," and to ",(0,r.kt)("inlineCode",{parentName:"p"},">")," to delimit them, although they will be recognized under a smaller\nset of circumstances. All such recognized autolinks can only come at the\nbeginning of a line, after whitespace, or any of the delimiting characters\n",(0,r.kt)("inlineCode",{parentName:"p"},"*"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"_"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"~"),", and ",(0,r.kt)("inlineCode",{parentName:"p"},"("),"."),(0,r.kt)("p",{parentName:"admonition"},"An ",(0,r.kt)("a",{parentName:"p",href:"https://github.github.com/gfm/#extended-www-autolink"},"extended www autolink")," will be recognized when\nthe text ",(0,r.kt)("inlineCode",{parentName:"p"},"www.")," is found followed by a ",(0,r.kt)("a",{parentName:"p",href:"https://github.github.com/gfm/#valid-domain"},"valid domain"),". A\n",(0,r.kt)("a",{parentName:"p",href:"https://github.github.com/gfm/#valid-domain"},"valid domain")," consists of segments of alphanumeric characters,\nunderscores (",(0,r.kt)("inlineCode",{parentName:"p"},"_"),") and hyphens (",(0,r.kt)("inlineCode",{parentName:"p"},"-"),") separated by periods (",(0,r.kt)("inlineCode",{parentName:"p"},"."),"). There must be\nat least one period, and no underscores may be present in the last two segments\nof the domain. We then apply ",(0,r.kt)("a",{parentName:"p",href:"https://github.github.com/gfm/#extended-autolink-path-validation"},"extended autolink path validation"),"\nas follows:"),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"Trailing punctuation (specifically, ",(0,r.kt)("inlineCode",{parentName:"li"},"?"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"!"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"."),", ",(0,r.kt)("inlineCode",{parentName:"li"},","),", ",(0,r.kt)("inlineCode",{parentName:"li"},":"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"*"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"_"),", and ",(0,r.kt)("inlineCode",{parentName:"li"},"~"),")\nwill not be considered part of the autolink, though they may be included in the\ninterior of the link.")),(0,r.kt)("p",{parentName:"admonition"},"An ",(0,r.kt)("a",{parentName:"p",href:"https://github.github.com/gfm/#extended-url-autolink"},"extended url autolink")," will be recognised when\none of the schemes ",(0,r.kt)("inlineCode",{parentName:"p"},"http://"),", or ",(0,r.kt)("inlineCode",{parentName:"p"},"https://"),", followed by a\n",(0,r.kt)("a",{parentName:"p",href:"https://github.github.com/gfm/#valid-domain"},"valid domain"),", then zero or more non-space non-",(0,r.kt)("inlineCode",{parentName:"p"},"<")," characters\naccording to ",(0,r.kt)("a",{parentName:"p",href:"https://github.github.com/gfm/#extended-autolink-path-validation"},"extended autolink path validation"),"."),(0,r.kt)("p",{parentName:"admonition"},"An ",(0,r.kt)("a",{parentName:"p",href:"https://github.github.com/gfm/#extended-email-autolink"},"extended email autolink")," will be recognised when\nan email address is recognised within any text node. Email addresses are\nrecognised according to the following rules:"),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"One ore more characters which are alphanumeric, or ",(0,r.kt)("inlineCode",{parentName:"li"},"."),", ",(0,r.kt)("inlineCode",{parentName:"li"},"-"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"_"),", or ",(0,r.kt)("inlineCode",{parentName:"li"},"+"),"."),(0,r.kt)("li",{parentName:"ul"},"An ",(0,r.kt)("inlineCode",{parentName:"li"},"@")," symbol."),(0,r.kt)("li",{parentName:"ul"},"One or more characters which are alphanumeric, or ",(0,r.kt)("inlineCode",{parentName:"li"},"-")," or ",(0,r.kt)("inlineCode",{parentName:"li"},"_"),", separated by\nperiods (",(0,r.kt)("inlineCode",{parentName:"li"},"."),"). There must be at least one period. The last character must\nnot be one of ",(0,r.kt)("inlineCode",{parentName:"li"},"-")," or ",(0,r.kt)("inlineCode",{parentName:"li"},"_"),".")),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"See ",(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("a",{parentName:"strong",href:"https://github.github.com/gfm/#autolinks-extension-"},"github flavor markdown spec"))," for details."),(0,r.kt)("li",{parentName:"ul"},"See ",(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("a",{parentName:"strong",href:"#live-examples"},"Live Examples"))," for an intuitive impression."))),(0,r.kt)("h2",{id:"install"},"Install"),(0,r.kt)(i.Z,{groupId:"npm2yarn",mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"npm",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"npm install --save @yozora/tokenizer-autolink-extension\n"))),(0,r.kt)(o.Z,{value:"yarn",label:"Yarn",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"yarn add @yozora/tokenizer-autolink-extension\n"))),(0,r.kt)(o.Z,{value:"pnpm",label:"pnpm",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"pnpm add @yozora/tokenizer-autolink-extension\n")))),(0,r.kt)("h2",{id:"usage"},"Usage"),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},(0,r.kt)("a",{parentName:"p",href:"./tokenizer-autolink-extension"},"@yozora/tokenizer-autolink-extension")," has been integrated into ",(0,r.kt)("a",{parentName:"p",href:"./parser"},"@yozora/parser")," / ",(0,r.kt)("a",{parentName:"p",href:"./parser-gfm-ex"},"@yozora/parser-gfm-ex"),",\nso you can use ",(0,r.kt)("inlineCode",{parentName:"p"},"YozoraParser")," / ",(0,r.kt)("inlineCode",{parentName:"p"},"GfmExParser")," directly.")),(0,r.kt)(i.Z,{defaultValue:"YozoraParser",values:[{label:"Basic Usage",value:"basic-usage"},{label:"YozoraParser",value:"YozoraParser"},{label:"GfmParser",value:"GfmParser"},{label:"GfmExParser",value:"GfmExParser"}],mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"basic-usage",mdxType:"TabItem"},(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"./tokenizer-autolink-extension"},"@yozora/tokenizer-autolink-extension")," cannot be used alone, it needs to be\nregistered in ",(0,r.kt)("em",{parentName:"p"},"Parser")," as a plugin-in before it can be used."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript",metastring:"{4,9}","{4,9}":!0},"import { DefaultParser } from '@yozora/core-parser'\nimport ParagraphTokenizer from '@yozora/tokenizer-paragraph'\nimport TextTokenizer from '@yozora/tokenizer-text'\nimport AutolinkExtensionTokenizer from '@yozora/tokenizer-autolink-extension'\n\nconst parser = new DefaultParser()\n  .useFallbackTokenizer(new ParagraphTokenizer())\n  .useFallbackTokenizer(new TextTokenizer())\n  .useTokenizer(new AutolinkExtensionTokenizer())\n\n// parse source markdown content\nparser.parse(`\nfoo@bar.example.com\n\nhttp://foo.bar.baz\n\nmade-up-scheme://foo,bar\n`)\n"))),(0,r.kt)(o.Z,{value:"YozoraParser",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"import YozoraParser from '@yozora/parser'\n\nconst parser = new YozoraParser()\n\n// parse source markdown content\nparser.parse(`\nfoo@bar.example.com\n\nhttp://foo.bar.baz\n\nmade-up-scheme://foo,bar\n`)\n"))),(0,r.kt)(o.Z,{value:"GfmParser",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript",metastring:"{2,5}","{2,5}":!0},"import GfmParser from '@yozora/parser-gfm'\nimport AutolinkExtensionTokenizer from '@yozora/tokenizer-autolink-extension'\n\nconst parser = new GfmParser()\nparser.useTokenizer(new AutolinkExtensionTokenizer())\n\n// parse source markdown content\nparser.parse(`\nfoo@bar.example.com\n\nhttp://foo.bar.baz\n\nmade-up-scheme://foo,bar\n`)\n"))),(0,r.kt)(o.Z,{value:"GfmExParser",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"import GfmExParser from '@yozora/parser-gfm-ex'\n\nconst parser = new GfmExParser()\n\n// parse source markdown content\nparser.parse(`\nfoo@bar.example.com\n\nhttp://foo.bar.baz\n\nmade-up-scheme://foo,bar\n`)\n")))),(0,r.kt)("h3",{id:"options"},"Options"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"center"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"center"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"center"},"Required"),(0,r.kt)("th",{parentName:"tr",align:"center"},"Default"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"name")),(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"false")),(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},'"@yozora/tokenizer-autolink-extension"'))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"priority")),(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"false")),(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"TokenizerPriority.ATOMIC"))))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"name"),": The unique name of the tokenizer, used to bind the token it generates,\nto determine the tokenizer that should be called in each life cycle of the\ntoken in the entire ",(0,r.kt)("em",{parentName:"p"},"matching / parsing")," phase.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"priority"),": Priority of the tokenizer, determine the order of processing,\nhigh priority priority execution. interruptable. In addition, in the ",(0,r.kt)("inlineCode",{parentName:"p"},"match-block"),"\nstage, a high-priority tokenizer can interrupt the matching process of a\nlow-priority tokenizer."),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Exception:")," Delimiters of type ",(0,r.kt)("inlineCode",{parentName:"p"},"full")," are always processed before other type\ndelimiters."))),(0,r.kt)("h3",{id:"types"},"Types"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"./tokenizer-autolink-extension"},"@yozora/tokenizer-autolink-extension")," produce ",(0,r.kt)("a",{parentName:"p",href:"./ast#link"},"Link")," type nodes.\nSee ",(0,r.kt)("a",{parentName:"p",href:"./ast"},"@yozora/ast")," for full base types."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"import type { Parent, Resource } from '@yozora/ast'\n\nexport const LinkType = 'link'\nexport type LinkType = typeof LinkType\n\n/**\n * Link represents a hyperlink.\n * @see https://github.com/syntax-tree/mdast#link\n * @see https://github.github.com/gfm/#inline-link\n */\nexport interface Link extends Parent<LinkType>, Resource {}\n")),(0,r.kt)("h2",{id:"live-examples"},"Live Examples"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"https://github.github.com/gfm/#extended-www-autolink"},"Extended www autolink")),(0,r.kt)(l.Z,{ids:"621-628",initialParserType:"gfm-ex",mdxType:"YozoraGFMLive"})),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"[Extended email autolink][gfm-extended-email-autolink]"),(0,r.kt)(l.Z,{ids:"629-631",initialParserType:"gfm-ex",mdxType:"YozoraGFMLive"}))),(0,r.kt)("h2",{id:"related"},"Related"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"./ast"},"@yozora/ast")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"./parser"},"@yozora/parser")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"./parser-gfm"},"@yozora/parser-gfm")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"./parser-gfm-ex"},"@yozora/parser-gfm-ex")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"./tokenizer-autolink-extension"},"@yozora/tokenizer-autolink-extension")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"./tokenizer-link"},"@yozora/tokenizer-link")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"./tokenizer-link-reference"},"@yozora/tokenizer-link-reference")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/yozorajs/yozora-react/tree/main/packages/link#readme"},"@yozora/react-link")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/yozorajs/yozora-react/tree/main/packages/markdown#readme"},"@yozora/react-markdown")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/yozorajs/yozora/tree/main/tokenizers/autolink-extension"},"Sourcecode")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"./ast#link"},"Link | Yozora AST")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.github.com/gfm/#autolinks-extension-"},"Autolinks (extension) | Github Flavor Markdown Spec")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/syntax-tree/mdast#link"},"Link | Mdast"))))}h.isMDXComponent=!0}}]);