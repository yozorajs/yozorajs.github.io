"use strict";var AsciiCodePoint;!function(e){e[e.NUL=0]="NUL",e[e.SOH=1]="SOH",e[e.STX=2]="STX",e[e.ETX=3]="ETX",e[e.EOT=4]="EOT",e[e.ENQ=5]="ENQ",e[e.ACK=6]="ACK",e[e.BEL=7]="BEL",e[e.BS=8]="BS",e[e.HT=9]="HT",e[e.LF=10]="LF",e[e.VT=11]="VT",e[e.FF=12]="FF",e[e.CR=13]="CR",e[e.SO=14]="SO",e[e.SI=15]="SI",e[e.DLE=16]="DLE",e[e.DC1=17]="DC1",e[e.DC2=18]="DC2",e[e.DC3=19]="DC3",e[e.DC4=20]="DC4",e[e.NAK=21]="NAK",e[e.SYN=22]="SYN",e[e.ETB=23]="ETB",e[e.CAN=24]="CAN",e[e.EM=25]="EM",e[e.SUB=26]="SUB",e[e.ESC=27]="ESC",e[e.FS=28]="FS",e[e.GS=29]="GS",e[e.RS=30]="RS",e[e.US=31]="US",e[e.SPACE=32]="SPACE",e[e.EXCLAMATION_MARK=33]="EXCLAMATION_MARK",e[e.DOUBLE_QUOTE=34]="DOUBLE_QUOTE",e[e.NUMBER_SIGN=35]="NUMBER_SIGN",e[e.DOLLAR_SIGN=36]="DOLLAR_SIGN",e[e.PERCENT_SIGN=37]="PERCENT_SIGN",e[e.AMPERSAND=38]="AMPERSAND",e[e.SINGLE_QUOTE=39]="SINGLE_QUOTE",e[e.OPEN_PARENTHESIS=40]="OPEN_PARENTHESIS",e[e.CLOSE_PARENTHESIS=41]="CLOSE_PARENTHESIS",e[e.ASTERISK=42]="ASTERISK",e[e.PLUS_SIGN=43]="PLUS_SIGN",e[e.COMMA=44]="COMMA",e[e.MINUS_SIGN=45]="MINUS_SIGN",e[e.DOT=46]="DOT",e[e.SLASH=47]="SLASH",e[e.DIGIT0=48]="DIGIT0",e[e.DIGIT1=49]="DIGIT1",e[e.DIGIT2=50]="DIGIT2",e[e.DIGIT3=51]="DIGIT3",e[e.DIGIT4=52]="DIGIT4",e[e.DIGIT5=53]="DIGIT5",e[e.DIGIT6=54]="DIGIT6",e[e.DIGIT7=55]="DIGIT7",e[e.DIGIT8=56]="DIGIT8",e[e.DIGIT9=57]="DIGIT9",e[e.COLON=58]="COLON",e[e.SEMICOLON=59]="SEMICOLON",e[e.OPEN_ANGLE=60]="OPEN_ANGLE",e[e.EQUALS_SIGN=61]="EQUALS_SIGN",e[e.CLOSE_ANGLE=62]="CLOSE_ANGLE",e[e.QUESTION_MARK=63]="QUESTION_MARK",e[e.AT_SIGN=64]="AT_SIGN",e[e.UPPERCASE_A=65]="UPPERCASE_A",e[e.UPPERCASE_B=66]="UPPERCASE_B",e[e.UPPERCASE_C=67]="UPPERCASE_C",e[e.UPPERCASE_D=68]="UPPERCASE_D",e[e.UPPERCASE_E=69]="UPPERCASE_E",e[e.UPPERCASE_F=70]="UPPERCASE_F",e[e.UPPERCASE_G=71]="UPPERCASE_G",e[e.UPPERCASE_H=72]="UPPERCASE_H",e[e.UPPERCASE_I=73]="UPPERCASE_I",e[e.UPPERCASE_J=74]="UPPERCASE_J",e[e.UPPERCASE_K=75]="UPPERCASE_K",e[e.UPPERCASE_L=76]="UPPERCASE_L",e[e.UPPERCASE_M=77]="UPPERCASE_M",e[e.UPPERCASE_N=78]="UPPERCASE_N",e[e.UPPERCASE_O=79]="UPPERCASE_O",e[e.UPPERCASE_P=80]="UPPERCASE_P",e[e.UPPERCASE_Q=81]="UPPERCASE_Q",e[e.UPPERCASE_R=82]="UPPERCASE_R",e[e.UPPERCASE_S=83]="UPPERCASE_S",e[e.UPPERCASE_T=84]="UPPERCASE_T",e[e.UPPERCASE_U=85]="UPPERCASE_U",e[e.UPPERCASE_V=86]="UPPERCASE_V",e[e.UPPERCASE_W=87]="UPPERCASE_W",e[e.UPPERCASE_X=88]="UPPERCASE_X",e[e.UPPERCASE_Y=89]="UPPERCASE_Y",e[e.UPPERCASE_Z=90]="UPPERCASE_Z",e[e.OPEN_BRACKET=91]="OPEN_BRACKET",e[e.BACKSLASH=92]="BACKSLASH",e[e.CLOSE_BRACKET=93]="CLOSE_BRACKET",e[e.CARET=94]="CARET",e[e.UNDERSCORE=95]="UNDERSCORE",e[e.BACKTICK=96]="BACKTICK",e[e.LOWERCASE_A=97]="LOWERCASE_A",e[e.LOWERCASE_B=98]="LOWERCASE_B",e[e.LOWERCASE_C=99]="LOWERCASE_C",e[e.LOWERCASE_D=100]="LOWERCASE_D",e[e.LOWERCASE_E=101]="LOWERCASE_E",e[e.LOWERCASE_F=102]="LOWERCASE_F",e[e.LOWERCASE_G=103]="LOWERCASE_G",e[e.LOWERCASE_H=104]="LOWERCASE_H",e[e.LOWERCASE_I=105]="LOWERCASE_I",e[e.LOWERCASE_J=106]="LOWERCASE_J",e[e.LOWERCASE_K=107]="LOWERCASE_K",e[e.LOWERCASE_L=108]="LOWERCASE_L",e[e.LOWERCASE_M=109]="LOWERCASE_M",e[e.LOWERCASE_N=110]="LOWERCASE_N",e[e.LOWERCASE_O=111]="LOWERCASE_O",e[e.LOWERCASE_P=112]="LOWERCASE_P",e[e.LOWERCASE_Q=113]="LOWERCASE_Q",e[e.LOWERCASE_R=114]="LOWERCASE_R",e[e.LOWERCASE_S=115]="LOWERCASE_S",e[e.LOWERCASE_T=116]="LOWERCASE_T",e[e.LOWERCASE_U=117]="LOWERCASE_U",e[e.LOWERCASE_V=118]="LOWERCASE_V",e[e.LOWERCASE_W=119]="LOWERCASE_W",e[e.LOWERCASE_X=120]="LOWERCASE_X",e[e.LOWERCASE_Y=121]="LOWERCASE_Y",e[e.LOWERCASE_Z=122]="LOWERCASE_Z",e[e.OPEN_BRACE=123]="OPEN_BRACE",e[e.VERTICAL_SLASH=124]="VERTICAL_SLASH",e[e.CLOSE_BRACE=125]="CLOSE_BRACE",e[e.TILDE=126]="TILDE",e[e.DELETE=127]="DELETE"}(AsciiCodePoint||(AsciiCodePoint={}));const foldingCaseCodeMap={µ:"μ",À:"à",Á:"á",Â:"â",Ã:"ã",Ä:"ä",Å:"å",Æ:"æ",Ç:"ç",È:"è",É:"é",Ê:"ê",Ë:"ë",Ì:"ì",Í:"í",Î:"î",Ï:"ï",Ð:"ð",Ñ:"ñ",Ò:"ò",Ó:"ó",Ô:"ô",Õ:"õ",Ö:"ö",Ø:"ø",Ù:"ù",Ú:"ú",Û:"û",Ü:"ü",Ý:"ý",Þ:"þ",Ā:"ā",Ă:"ă",Ą:"ą",Ć:"ć",Ĉ:"ĉ",Ċ:"ċ",Č:"č",Ď:"ď",Đ:"đ",Ē:"ē",Ĕ:"ĕ",Ė:"ė",Ę:"ę",Ě:"ě",Ĝ:"ĝ",Ğ:"ğ",Ġ:"ġ",Ģ:"ģ",Ĥ:"ĥ",Ħ:"ħ",Ĩ:"ĩ",Ī:"ī",Ĭ:"ĭ",Į:"į",Ĳ:"ĳ",Ĵ:"ĵ",Ķ:"ķ",Ĺ:"ĺ",Ļ:"ļ",Ľ:"ľ",Ŀ:"ŀ",Ł:"ł",Ń:"ń",Ņ:"ņ",Ň:"ň",Ŋ:"ŋ",Ō:"ō",Ŏ:"ŏ",Ő:"ő",Œ:"œ",Ŕ:"ŕ",Ŗ:"ŗ",Ř:"ř",Ś:"ś",Ŝ:"ŝ",Ş:"ş",Š:"š",Ţ:"ţ",Ť:"ť",Ŧ:"ŧ",Ũ:"ũ",Ū:"ū",Ŭ:"ŭ",Ů:"ů",Ű:"ű",Ų:"ų",Ŵ:"ŵ",Ŷ:"ŷ",Ÿ:"ÿ",Ź:"ź",Ż:"ż",Ž:"ž",ſ:"s",Ɓ:"ɓ",Ƃ:"ƃ",Ƅ:"ƅ",Ɔ:"ɔ",Ƈ:"ƈ",Ɖ:"ɖ",Ɗ:"ɗ",Ƌ:"ƌ",Ǝ:"ǝ",Ə:"ə",Ɛ:"ɛ",Ƒ:"ƒ",Ɠ:"ɠ",Ɣ:"ɣ",Ɩ:"ɩ",Ɨ:"ɨ",Ƙ:"ƙ",Ɯ:"ɯ",Ɲ:"ɲ",Ɵ:"ɵ",Ơ:"ơ",Ƣ:"ƣ",Ƥ:"ƥ",Ʀ:"ʀ",Ƨ:"ƨ",Ʃ:"ʃ",Ƭ:"ƭ",Ʈ:"ʈ",Ư:"ư",Ʊ:"ʊ",Ʋ:"ʋ",Ƴ:"ƴ",Ƶ:"ƶ",Ʒ:"ʒ",Ƹ:"ƹ",Ƽ:"ƽ",Ǆ:"ǆ",ǅ:"ǆ",Ǉ:"ǉ",ǈ:"ǉ",Ǌ:"ǌ",ǋ:"ǌ",Ǎ:"ǎ",Ǐ:"ǐ",Ǒ:"ǒ",Ǔ:"ǔ",Ǖ:"ǖ",Ǘ:"ǘ",Ǚ:"ǚ",Ǜ:"ǜ",Ǟ:"ǟ",Ǡ:"ǡ",Ǣ:"ǣ",Ǥ:"ǥ",Ǧ:"ǧ",Ǩ:"ǩ",Ǫ:"ǫ",Ǭ:"ǭ",Ǯ:"ǯ",Ǳ:"ǳ",ǲ:"ǳ",Ǵ:"ǵ",Ƕ:"ƕ",Ƿ:"ƿ",Ǹ:"ǹ",Ǻ:"ǻ",Ǽ:"ǽ",Ǿ:"ǿ",Ȁ:"ȁ",Ȃ:"ȃ",Ȅ:"ȅ",Ȇ:"ȇ",Ȉ:"ȉ",Ȋ:"ȋ",Ȍ:"ȍ",Ȏ:"ȏ",Ȑ:"ȑ",Ȓ:"ȓ",Ȕ:"ȕ",Ȗ:"ȗ",Ș:"ș",Ț:"ț",Ȝ:"ȝ",Ȟ:"ȟ",Ƞ:"ƞ",Ȣ:"ȣ",Ȥ:"ȥ",Ȧ:"ȧ",Ȩ:"ȩ",Ȫ:"ȫ",Ȭ:"ȭ",Ȯ:"ȯ",Ȱ:"ȱ",Ȳ:"ȳ",Ⱥ:"ⱥ",Ȼ:"ȼ",Ƚ:"ƚ",Ⱦ:"ⱦ",Ɂ:"ɂ",Ƀ:"ƀ",Ʉ:"ʉ",Ʌ:"ʌ",Ɇ:"ɇ",Ɉ:"ɉ",Ɋ:"ɋ",Ɍ:"ɍ",Ɏ:"ɏ","ͅ":"ι",Ͱ:"ͱ",Ͳ:"ͳ",Ͷ:"ͷ",Ϳ:"ϳ",Ά:"ά",Έ:"έ",Ή:"ή",Ί:"ί",Ό:"ό",Ύ:"ύ",Ώ:"ώ",Α:"α",Β:"β",Γ:"γ",Δ:"δ",Ε:"ε",Ζ:"ζ",Η:"η",Θ:"θ",Ι:"ι",Κ:"κ",Λ:"λ",Μ:"μ",Ν:"ν",Ξ:"ξ",Ο:"ο",Π:"π",Ρ:"ρ",Σ:"σ",Τ:"τ",Υ:"υ",Φ:"φ",Χ:"χ",Ψ:"ψ",Ω:"ω",Ϊ:"ϊ",Ϋ:"ϋ",ς:"σ",Ϗ:"ϗ",ϐ:"β",ϑ:"θ",ϕ:"φ",ϖ:"π",Ϙ:"ϙ",Ϛ:"ϛ",Ϝ:"ϝ",Ϟ:"ϟ",Ϡ:"ϡ",Ϣ:"ϣ",Ϥ:"ϥ",Ϧ:"ϧ",Ϩ:"ϩ",Ϫ:"ϫ",Ϭ:"ϭ",Ϯ:"ϯ",ϰ:"κ",ϱ:"ρ",ϴ:"θ",ϵ:"ε",Ϸ:"ϸ",Ϲ:"ϲ",Ϻ:"ϻ",Ͻ:"ͻ",Ͼ:"ͼ",Ͽ:"ͽ",Ѐ:"ѐ",Ё:"ё",Ђ:"ђ",Ѓ:"ѓ",Є:"є",Ѕ:"ѕ",І:"і",Ї:"ї",Ј:"ј",Љ:"љ",Њ:"њ",Ћ:"ћ",Ќ:"ќ",Ѝ:"ѝ",Ў:"ў",Џ:"џ",А:"а",Б:"б",В:"в",Г:"г",Д:"д",Е:"е",Ж:"ж",З:"з",И:"и",Й:"й",К:"к",Л:"л",М:"м",Н:"н",О:"о",П:"п",Р:"р",С:"с",Т:"т",У:"у",Ф:"ф",Х:"х",Ц:"ц",Ч:"ч",Ш:"ш",Щ:"щ",Ъ:"ъ",Ы:"ы",Ь:"ь",Э:"э",Ю:"ю",Я:"я",Ѡ:"ѡ",Ѣ:"ѣ",Ѥ:"ѥ",Ѧ:"ѧ",Ѩ:"ѩ",Ѫ:"ѫ",Ѭ:"ѭ",Ѯ:"ѯ",Ѱ:"ѱ",Ѳ:"ѳ",Ѵ:"ѵ",Ѷ:"ѷ",Ѹ:"ѹ",Ѻ:"ѻ",Ѽ:"ѽ",Ѿ:"ѿ",Ҁ:"ҁ",Ҋ:"ҋ",Ҍ:"ҍ",Ҏ:"ҏ",Ґ:"ґ",Ғ:"ғ",Ҕ:"ҕ",Җ:"җ",Ҙ:"ҙ",Қ:"қ",Ҝ:"ҝ",Ҟ:"ҟ",Ҡ:"ҡ",Ң:"ң",Ҥ:"ҥ",Ҧ:"ҧ",Ҩ:"ҩ",Ҫ:"ҫ",Ҭ:"ҭ",Ү:"ү",Ұ:"ұ",Ҳ:"ҳ",Ҵ:"ҵ",Ҷ:"ҷ",Ҹ:"ҹ",Һ:"һ",Ҽ:"ҽ",Ҿ:"ҿ",Ӏ:"ӏ",Ӂ:"ӂ",Ӄ:"ӄ",Ӆ:"ӆ",Ӈ:"ӈ",Ӊ:"ӊ",Ӌ:"ӌ",Ӎ:"ӎ",Ӑ:"ӑ",Ӓ:"ӓ",Ӕ:"ӕ",Ӗ:"ӗ",Ә:"ә",Ӛ:"ӛ",Ӝ:"ӝ",Ӟ:"ӟ",Ӡ:"ӡ",Ӣ:"ӣ",Ӥ:"ӥ",Ӧ:"ӧ",Ө:"ө",Ӫ:"ӫ",Ӭ:"ӭ",Ӯ:"ӯ",Ӱ:"ӱ",Ӳ:"ӳ",Ӵ:"ӵ",Ӷ:"ӷ",Ӹ:"ӹ",Ӻ:"ӻ",Ӽ:"ӽ",Ӿ:"ӿ",Ԁ:"ԁ",Ԃ:"ԃ",Ԅ:"ԅ",Ԇ:"ԇ",Ԉ:"ԉ",Ԋ:"ԋ",Ԍ:"ԍ",Ԏ:"ԏ",Ԑ:"ԑ",Ԓ:"ԓ",Ԕ:"ԕ",Ԗ:"ԗ",Ԙ:"ԙ",Ԛ:"ԛ",Ԝ:"ԝ",Ԟ:"ԟ",Ԡ:"ԡ",Ԣ:"ԣ",Ԥ:"ԥ",Ԧ:"ԧ",Ԩ:"ԩ",Ԫ:"ԫ",Ԭ:"ԭ",Ԯ:"ԯ",Ա:"ա",Բ:"բ",Գ:"գ",Դ:"դ",Ե:"ե",Զ:"զ",Է:"է",Ը:"ը",Թ:"թ",Ժ:"ժ",Ի:"ի",Լ:"լ",Խ:"խ",Ծ:"ծ",Կ:"կ",Հ:"հ",Ձ:"ձ",Ղ:"ղ",Ճ:"ճ",Մ:"մ",Յ:"յ",Ն:"ն",Շ:"շ",Ո:"ո",Չ:"չ",Պ:"պ",Ջ:"ջ",Ռ:"ռ",Ս:"ս",Վ:"վ",Տ:"տ",Ր:"ր",Ց:"ց",Ւ:"ւ",Փ:"փ",Ք:"ք",Օ:"օ",Ֆ:"ֆ",Ⴀ:"ⴀ",Ⴁ:"ⴁ",Ⴂ:"ⴂ",Ⴃ:"ⴃ",Ⴄ:"ⴄ",Ⴅ:"ⴅ",Ⴆ:"ⴆ",Ⴇ:"ⴇ",Ⴈ:"ⴈ",Ⴉ:"ⴉ",Ⴊ:"ⴊ",Ⴋ:"ⴋ",Ⴌ:"ⴌ",Ⴍ:"ⴍ",Ⴎ:"ⴎ",Ⴏ:"ⴏ",Ⴐ:"ⴐ",Ⴑ:"ⴑ",Ⴒ:"ⴒ",Ⴓ:"ⴓ",Ⴔ:"ⴔ",Ⴕ:"ⴕ",Ⴖ:"ⴖ",Ⴗ:"ⴗ",Ⴘ:"ⴘ",Ⴙ:"ⴙ",Ⴚ:"ⴚ",Ⴛ:"ⴛ",Ⴜ:"ⴜ",Ⴝ:"ⴝ",Ⴞ:"ⴞ",Ⴟ:"ⴟ",Ⴠ:"ⴠ",Ⴡ:"ⴡ",Ⴢ:"ⴢ",Ⴣ:"ⴣ",Ⴤ:"ⴤ",Ⴥ:"ⴥ",Ⴧ:"ⴧ",Ⴭ:"ⴭ",Ḁ:"ḁ",Ḃ:"ḃ",Ḅ:"ḅ",Ḇ:"ḇ",Ḉ:"ḉ",Ḋ:"ḋ",Ḍ:"ḍ",Ḏ:"ḏ",Ḑ:"ḑ",Ḓ:"ḓ",Ḕ:"ḕ",Ḗ:"ḗ",Ḙ:"ḙ",Ḛ:"ḛ",Ḝ:"ḝ",Ḟ:"ḟ",Ḡ:"ḡ",Ḣ:"ḣ",Ḥ:"ḥ",Ḧ:"ḧ",Ḩ:"ḩ",Ḫ:"ḫ",Ḭ:"ḭ",Ḯ:"ḯ",Ḱ:"ḱ",Ḳ:"ḳ",Ḵ:"ḵ",Ḷ:"ḷ",Ḹ:"ḹ",Ḻ:"ḻ",Ḽ:"ḽ",Ḿ:"ḿ",Ṁ:"ṁ",Ṃ:"ṃ",Ṅ:"ṅ",Ṇ:"ṇ",Ṉ:"ṉ",Ṋ:"ṋ",Ṍ:"ṍ",Ṏ:"ṏ",Ṑ:"ṑ",Ṓ:"ṓ",Ṕ:"ṕ",Ṗ:"ṗ",Ṙ:"ṙ",Ṛ:"ṛ",Ṝ:"ṝ",Ṟ:"ṟ",Ṡ:"ṡ",Ṣ:"ṣ",Ṥ:"ṥ",Ṧ:"ṧ",Ṩ:"ṩ",Ṫ:"ṫ",Ṭ:"ṭ",Ṯ:"ṯ",Ṱ:"ṱ",Ṳ:"ṳ",Ṵ:"ṵ",Ṷ:"ṷ",Ṹ:"ṹ",Ṻ:"ṻ",Ṽ:"ṽ",Ṿ:"ṿ",Ẁ:"ẁ",Ẃ:"ẃ",Ẅ:"ẅ",Ẇ:"ẇ",Ẉ:"ẉ",Ẋ:"ẋ",Ẍ:"ẍ",Ẏ:"ẏ",Ẑ:"ẑ",Ẓ:"ẓ",Ẕ:"ẕ",ẛ:"ṡ",Ạ:"ạ",Ả:"ả",Ấ:"ấ",Ầ:"ầ",Ẩ:"ẩ",Ẫ:"ẫ",Ậ:"ậ",Ắ:"ắ",Ằ:"ằ",Ẳ:"ẳ",Ẵ:"ẵ",Ặ:"ặ",Ẹ:"ẹ",Ẻ:"ẻ",Ẽ:"ẽ",Ế:"ế",Ề:"ề",Ể:"ể",Ễ:"ễ",Ệ:"ệ",Ỉ:"ỉ",Ị:"ị",Ọ:"ọ",Ỏ:"ỏ",Ố:"ố",Ồ:"ồ",Ổ:"ổ",Ỗ:"ỗ",Ộ:"ộ",Ớ:"ớ",Ờ:"ờ",Ở:"ở",Ỡ:"ỡ",Ợ:"ợ",Ụ:"ụ",Ủ:"ủ",Ứ:"ứ",Ừ:"ừ",Ử:"ử",Ữ:"ữ",Ự:"ự",Ỳ:"ỳ",Ỵ:"ỵ",Ỷ:"ỷ",Ỹ:"ỹ",Ỻ:"ỻ",Ỽ:"ỽ",Ỿ:"ỿ",Ἀ:"ἀ",Ἁ:"ἁ",Ἂ:"ἂ",Ἃ:"ἃ",Ἄ:"ἄ",Ἅ:"ἅ",Ἆ:"ἆ",Ἇ:"ἇ",Ἐ:"ἐ",Ἑ:"ἑ",Ἒ:"ἒ",Ἓ:"ἓ",Ἔ:"ἔ",Ἕ:"ἕ",Ἠ:"ἠ",Ἡ:"ἡ",Ἢ:"ἢ",Ἣ:"ἣ",Ἤ:"ἤ",Ἥ:"ἥ",Ἦ:"ἦ",Ἧ:"ἧ",Ἰ:"ἰ",Ἱ:"ἱ",Ἲ:"ἲ",Ἳ:"ἳ",Ἴ:"ἴ",Ἵ:"ἵ",Ἶ:"ἶ",Ἷ:"ἷ",Ὀ:"ὀ",Ὁ:"ὁ",Ὂ:"ὂ",Ὃ:"ὃ",Ὄ:"ὄ",Ὅ:"ὅ",Ὑ:"ὑ",Ὓ:"ὓ",Ὕ:"ὕ",Ὗ:"ὗ",Ὠ:"ὠ",Ὡ:"ὡ",Ὢ:"ὢ",Ὣ:"ὣ",Ὤ:"ὤ",Ὥ:"ὥ",Ὦ:"ὦ",Ὧ:"ὧ",Ᾰ:"ᾰ",Ᾱ:"ᾱ",Ὰ:"ὰ",Ά:"ά",ι:"ι",Ὲ:"ὲ",Έ:"έ",Ὴ:"ὴ",Ή:"ή",Ῐ:"ῐ",Ῑ:"ῑ",Ὶ:"ὶ",Ί:"ί",Ῠ:"ῠ",Ῡ:"ῡ",Ὺ:"ὺ",Ύ:"ύ",Ῥ:"ῥ",Ὸ:"ὸ",Ό:"ό",Ὼ:"ὼ",Ώ:"ώ",Ω:"ω",K:"k",Å:"å",Ⅎ:"ⅎ",Ⅰ:"ⅰ",Ⅱ:"ⅱ",Ⅲ:"ⅲ",Ⅳ:"ⅳ",Ⅴ:"ⅴ",Ⅵ:"ⅵ",Ⅶ:"ⅶ",Ⅷ:"ⅷ",Ⅸ:"ⅸ",Ⅹ:"ⅹ",Ⅺ:"ⅺ",Ⅻ:"ⅻ",Ⅼ:"ⅼ",Ⅽ:"ⅽ",Ⅾ:"ⅾ",Ⅿ:"ⅿ",Ↄ:"ↄ","Ⓐ":"ⓐ","Ⓑ":"ⓑ","Ⓒ":"ⓒ","Ⓓ":"ⓓ","Ⓔ":"ⓔ","Ⓕ":"ⓕ","Ⓖ":"ⓖ","Ⓗ":"ⓗ","Ⓘ":"ⓘ","Ⓙ":"ⓙ","Ⓚ":"ⓚ","Ⓛ":"ⓛ","Ⓜ":"ⓜ","Ⓝ":"ⓝ","Ⓞ":"ⓞ","Ⓟ":"ⓟ","Ⓠ":"ⓠ","Ⓡ":"ⓡ","Ⓢ":"ⓢ","Ⓣ":"ⓣ","Ⓤ":"ⓤ","Ⓥ":"ⓥ","Ⓦ":"ⓦ","Ⓧ":"ⓧ","Ⓨ":"ⓨ","Ⓩ":"ⓩ",Ⰰ:"ⰰ",Ⰱ:"ⰱ",Ⰲ:"ⰲ",Ⰳ:"ⰳ",Ⰴ:"ⰴ",Ⰵ:"ⰵ",Ⰶ:"ⰶ",Ⰷ:"ⰷ",Ⰸ:"ⰸ",Ⰹ:"ⰹ",Ⰺ:"ⰺ",Ⰻ:"ⰻ",Ⰼ:"ⰼ",Ⰽ:"ⰽ",Ⰾ:"ⰾ",Ⰿ:"ⰿ",Ⱀ:"ⱀ",Ⱁ:"ⱁ",Ⱂ:"ⱂ",Ⱃ:"ⱃ",Ⱄ:"ⱄ",Ⱅ:"ⱅ",Ⱆ:"ⱆ",Ⱇ:"ⱇ",Ⱈ:"ⱈ",Ⱉ:"ⱉ",Ⱊ:"ⱊ",Ⱋ:"ⱋ",Ⱌ:"ⱌ",Ⱍ:"ⱍ",Ⱎ:"ⱎ",Ⱏ:"ⱏ",Ⱐ:"ⱐ",Ⱑ:"ⱑ",Ⱒ:"ⱒ",Ⱓ:"ⱓ",Ⱔ:"ⱔ",Ⱕ:"ⱕ",Ⱖ:"ⱖ",Ⱗ:"ⱗ",Ⱘ:"ⱘ",Ⱙ:"ⱙ",Ⱚ:"ⱚ",Ⱛ:"ⱛ",Ⱜ:"ⱜ",Ⱝ:"ⱝ",Ⱞ:"ⱞ",Ⱡ:"ⱡ",Ɫ:"ɫ",Ᵽ:"ᵽ",Ɽ:"ɽ",Ⱨ:"ⱨ",Ⱪ:"ⱪ",Ⱬ:"ⱬ",Ɑ:"ɑ",Ɱ:"ɱ",Ɐ:"ɐ",Ɒ:"ɒ",Ⱳ:"ⱳ",Ⱶ:"ⱶ",Ȿ:"ȿ",Ɀ:"ɀ",Ⲁ:"ⲁ",Ⲃ:"ⲃ",Ⲅ:"ⲅ",Ⲇ:"ⲇ",Ⲉ:"ⲉ",Ⲋ:"ⲋ",Ⲍ:"ⲍ",Ⲏ:"ⲏ",Ⲑ:"ⲑ",Ⲓ:"ⲓ",Ⲕ:"ⲕ",Ⲗ:"ⲗ",Ⲙ:"ⲙ",Ⲛ:"ⲛ",Ⲝ:"ⲝ",Ⲟ:"ⲟ",Ⲡ:"ⲡ",Ⲣ:"ⲣ",Ⲥ:"ⲥ",Ⲧ:"ⲧ",Ⲩ:"ⲩ",Ⲫ:"ⲫ",Ⲭ:"ⲭ",Ⲯ:"ⲯ",Ⲱ:"ⲱ",Ⲳ:"ⲳ",Ⲵ:"ⲵ",Ⲷ:"ⲷ",Ⲹ:"ⲹ",Ⲻ:"ⲻ",Ⲽ:"ⲽ",Ⲿ:"ⲿ",Ⳁ:"ⳁ",Ⳃ:"ⳃ",Ⳅ:"ⳅ",Ⳇ:"ⳇ",Ⳉ:"ⳉ",Ⳋ:"ⳋ",Ⳍ:"ⳍ",Ⳏ:"ⳏ",Ⳑ:"ⳑ",Ⳓ:"ⳓ",Ⳕ:"ⳕ",Ⳗ:"ⳗ",Ⳙ:"ⳙ",Ⳛ:"ⳛ",Ⳝ:"ⳝ",Ⳟ:"ⳟ",Ⳡ:"ⳡ",Ⳣ:"ⳣ",Ⳬ:"ⳬ",Ⳮ:"ⳮ",Ⳳ:"ⳳ",Ꙁ:"ꙁ",Ꙃ:"ꙃ",Ꙅ:"ꙅ",Ꙇ:"ꙇ",Ꙉ:"ꙉ",Ꙋ:"ꙋ",Ꙍ:"ꙍ",Ꙏ:"ꙏ",Ꙑ:"ꙑ",Ꙓ:"ꙓ",Ꙕ:"ꙕ",Ꙗ:"ꙗ",Ꙙ:"ꙙ",Ꙛ:"ꙛ",Ꙝ:"ꙝ",Ꙟ:"ꙟ",Ꙡ:"ꙡ",Ꙣ:"ꙣ",Ꙥ:"ꙥ",Ꙧ:"ꙧ",Ꙩ:"ꙩ",Ꙫ:"ꙫ",Ꙭ:"ꙭ",Ꚁ:"ꚁ",Ꚃ:"ꚃ",Ꚅ:"ꚅ",Ꚇ:"ꚇ",Ꚉ:"ꚉ",Ꚋ:"ꚋ",Ꚍ:"ꚍ",Ꚏ:"ꚏ",Ꚑ:"ꚑ",Ꚓ:"ꚓ",Ꚕ:"ꚕ",Ꚗ:"ꚗ",Ꚙ:"ꚙ",Ꚛ:"ꚛ",Ꜣ:"ꜣ",Ꜥ:"ꜥ",Ꜧ:"ꜧ",Ꜩ:"ꜩ",Ꜫ:"ꜫ",Ꜭ:"ꜭ",Ꜯ:"ꜯ",Ꜳ:"ꜳ",Ꜵ:"ꜵ",Ꜷ:"ꜷ",Ꜹ:"ꜹ",Ꜻ:"ꜻ",Ꜽ:"ꜽ",Ꜿ:"ꜿ",Ꝁ:"ꝁ",Ꝃ:"ꝃ",Ꝅ:"ꝅ",Ꝇ:"ꝇ",Ꝉ:"ꝉ",Ꝋ:"ꝋ",Ꝍ:"ꝍ",Ꝏ:"ꝏ",Ꝑ:"ꝑ",Ꝓ:"ꝓ",Ꝕ:"ꝕ",Ꝗ:"ꝗ",Ꝙ:"ꝙ",Ꝛ:"ꝛ",Ꝝ:"ꝝ",Ꝟ:"ꝟ",Ꝡ:"ꝡ",Ꝣ:"ꝣ",Ꝥ:"ꝥ",Ꝧ:"ꝧ",Ꝩ:"ꝩ",Ꝫ:"ꝫ",Ꝭ:"ꝭ",Ꝯ:"ꝯ",Ꝺ:"ꝺ",Ꝼ:"ꝼ",Ᵹ:"ᵹ",Ꝿ:"ꝿ",Ꞁ:"ꞁ",Ꞃ:"ꞃ",Ꞅ:"ꞅ",Ꞇ:"ꞇ",Ꞌ:"ꞌ",Ɥ:"ɥ",Ꞑ:"ꞑ",Ꞓ:"ꞓ",Ꞗ:"ꞗ",Ꞙ:"ꞙ",Ꞛ:"ꞛ",Ꞝ:"ꞝ",Ꞟ:"ꞟ",Ꞡ:"ꞡ",Ꞣ:"ꞣ",Ꞥ:"ꞥ",Ꞧ:"ꞧ",Ꞩ:"ꞩ",Ɦ:"ɦ",Ɜ:"ɜ",Ɡ:"ɡ",Ɬ:"ɬ",Ʞ:"ʞ",Ʇ:"ʇ",Ａ:"ａ",Ｂ:"ｂ",Ｃ:"ｃ",Ｄ:"ｄ",Ｅ:"ｅ",Ｆ:"ｆ",Ｇ:"ｇ",Ｈ:"ｈ",Ｉ:"ｉ",Ｊ:"ｊ",Ｋ:"ｋ",Ｌ:"ｌ",Ｍ:"ｍ",Ｎ:"ｎ",Ｏ:"ｏ",Ｐ:"ｐ",Ｑ:"ｑ",Ｒ:"ｒ",Ｓ:"ｓ",Ｔ:"ｔ",Ｕ:"ｕ",Ｖ:"ｖ",Ｗ:"ｗ",Ｘ:"ｘ",Ｙ:"ｙ",Ｚ:"ｚ",𐐀:"𐐨",𐐁:"𐐩",𐐂:"𐐪",𐐃:"𐐫",𐐄:"𐐬",𐐅:"𐐭",𐐆:"𐐮",𐐇:"𐐯",𐐈:"𐐰",𐐉:"𐐱",𐐊:"𐐲",𐐋:"𐐳",𐐌:"𐐴",𐐍:"𐐵",𐐎:"𐐶",𐐏:"𐐷",𐐐:"𐐸",𐐑:"𐐹",𐐒:"𐐺",𐐓:"𐐻",𐐔:"𐐼",𐐕:"𐐽",𐐖:"𐐾",𐐗:"𐐿",𐐘:"𐑀",𐐙:"𐑁",𐐚:"𐑂",𐐛:"𐑃",𐐜:"𐑄",𐐝:"𐑅",𐐞:"𐑆",𐐟:"𐑇",𐐠:"𐑈",𐐡:"𐑉",𐐢:"𐑊",𐐣:"𐑋",𐐤:"𐑌",𐐥:"𐑍",𐐦:"𐑎",𐐧:"𐑏",𑢠:"𑣀",𑢡:"𑣁",𑢢:"𑣂",𑢣:"𑣃",𑢤:"𑣄",𑢥:"𑣅",𑢦:"𑣆",𑢧:"𑣇",𑢨:"𑣈",𑢩:"𑣉",𑢪:"𑣊",𑢫:"𑣋",𑢬:"𑣌",𑢭:"𑣍",𑢮:"𑣎",𑢯:"𑣏",𑢰:"𑣐",𑢱:"𑣑",𑢲:"𑣒",𑢳:"𑣓",𑢴:"𑣔",𑢵:"𑣕",𑢶:"𑣖",𑢷:"𑣗",𑢸:"𑣘",𑢹:"𑣙",𑢺:"𑣚",𑢻:"𑣛",𑢼:"𑣜",𑢽:"𑣝",𑢾:"𑣞",𑢿:"𑣟",ß:"ss",İ:"i̇",ŉ:"ʼn",ǰ:"ǰ",ΐ:"ΐ",ΰ:"ΰ",և:"եւ",ẖ:"ẖ",ẗ:"ẗ",ẘ:"ẘ",ẙ:"ẙ",ẚ:"aʾ",ẞ:"ss",ὐ:"ὐ",ὒ:"ὒ",ὔ:"ὔ",ὖ:"ὖ",ᾀ:"ἀι",ᾁ:"ἁι",ᾂ:"ἂι",ᾃ:"ἃι",ᾄ:"ἄι",ᾅ:"ἅι",ᾆ:"ἆι",ᾇ:"ἇι",ᾈ:"ἀι",ᾉ:"ἁι",ᾊ:"ἂι",ᾋ:"ἃι",ᾌ:"ἄι",ᾍ:"ἅι",ᾎ:"ἆι",ᾏ:"ἇι",ᾐ:"ἠι",ᾑ:"ἡι",ᾒ:"ἢι",ᾓ:"ἣι",ᾔ:"ἤι",ᾕ:"ἥι",ᾖ:"ἦι",ᾗ:"ἧι",ᾘ:"ἠι",ᾙ:"ἡι",ᾚ:"ἢι",ᾛ:"ἣι",ᾜ:"ἤι",ᾝ:"ἥι",ᾞ:"ἦι",ᾟ:"ἧι",ᾠ:"ὠι",ᾡ:"ὡι",ᾢ:"ὢι",ᾣ:"ὣι",ᾤ:"ὤι",ᾥ:"ὥι",ᾦ:"ὦι",ᾧ:"ὧι",ᾨ:"ὠι",ᾩ:"ὡι",ᾪ:"ὢι",ᾫ:"ὣι",ᾬ:"ὤι",ᾭ:"ὥι",ᾮ:"ὦι",ᾯ:"ὧι",ᾲ:"ὰι",ᾳ:"αι",ᾴ:"άι",ᾶ:"ᾶ",ᾷ:"ᾶι",ᾼ:"αι",ῂ:"ὴι",ῃ:"ηι",ῄ:"ήι",ῆ:"ῆ",ῇ:"ῆι",ῌ:"ηι",ῒ:"ῒ",ΐ:"ΐ",ῖ:"ῖ",ῗ:"ῗ",ῢ:"ῢ",ΰ:"ΰ",ῤ:"ῤ",ῦ:"ῦ",ῧ:"ῧ",ῲ:"ὼι",ῳ:"ωι",ῴ:"ώι",ῶ:"ῶ",ῷ:"ῶι",ῼ:"ωι",ﬀ:"ff",ﬁ:"fi",ﬂ:"fl",ﬃ:"ffi",ﬄ:"ffl",ﬅ:"st",ﬆ:"st",ﬓ:"մն",ﬔ:"մե",ﬕ:"մի",ﬖ:"վն",ﬗ:"մխ"},entityReferences=[{key:[65,69,108,105,103,59],value:"Æ"},{key:[65,77,80,59],value:"&"},{key:[65,97,99,117,116,101,59],value:"Á"},{key:[65,98,114,101,118,101,59],value:"Ă"},{key:[65,99,105,114,99,59],value:"Â"},{key:[65,99,121,59],value:"А"},{key:[65,102,114,59],value:"𝔄"},{key:[65,103,114,97,118,101,59],value:"À"},{key:[65,108,112,104,97,59],value:"Α"},{key:[65,109,97,99,114,59],value:"Ā"},{key:[65,110,100,59],value:"⩓"},{key:[65,111,103,111,110,59],value:"Ą"},{key:[65,111,112,102,59],value:"𝔸"},{key:[65,112,112,108,121,70,117,110,99,116,105,111,110,59],value:"⁡"},{key:[65,114,105,110,103,59],value:"Å"},{key:[65,115,99,114,59],value:"𝒜"},{key:[65,115,115,105,103,110,59],value:"≔"},{key:[65,116,105,108,100,101,59],value:"Ã"},{key:[65,117,109,108,59],value:"Ä"},{key:[66,97,99,107,115,108,97,115,104,59],value:"∖"},{key:[66,97,114,118,59],value:"⫧"},{key:[66,97,114,119,101,100,59],value:"⌆"},{key:[66,99,121,59],value:"Б"},{key:[66,101,99,97,117,115,101,59],value:"∵"},{key:[66,101,114,110,111,117,108,108,105,115,59],value:"ℬ"},{key:[66,101,116,97,59],value:"Β"},{key:[66,102,114,59],value:"𝔅"},{key:[66,111,112,102,59],value:"𝔹"},{key:[66,114,101,118,101,59],value:"˘"},{key:[66,115,99,114,59],value:"ℬ"},{key:[66,117,109,112,101,113,59],value:"≎"},{key:[67,72,99,121,59],value:"Ч"},{key:[67,79,80,89,59],value:"©"},{key:[67,97,99,117,116,101,59],value:"Ć"},{key:[67,97,112,59],value:"⋒"},{key:[67,97,112,105,116,97,108,68,105,102,102,101,114,101,110,116,105,97,108,68,59],value:"ⅅ"},{key:[67,97,121,108,101,121,115,59],value:"ℭ"},{key:[67,99,97,114,111,110,59],value:"Č"},{key:[67,99,101,100,105,108,59],value:"Ç"},{key:[67,99,105,114,99,59],value:"Ĉ"},{key:[67,99,111,110,105,110,116,59],value:"∰"},{key:[67,100,111,116,59],value:"Ċ"},{key:[67,101,100,105,108,108,97,59],value:"¸"},{key:[67,101,110,116,101,114,68,111,116,59],value:"·"},{key:[67,102,114,59],value:"ℭ"},{key:[67,104,105,59],value:"Χ"},{key:[67,105,114,99,108,101,68,111,116,59],value:"⊙"},{key:[67,105,114,99,108,101,77,105,110,117,115,59],value:"⊖"},{key:[67,105,114,99,108,101,80,108,117,115,59],value:"⊕"},{key:[67,105,114,99,108,101,84,105,109,101,115,59],value:"⊗"},{key:[67,108,111,99,107,119,105,115,101,67,111,110,116,111,117,114,73,110,116,101,103,114,97,108,59],value:"∲"},{key:[67,108,111,115,101,67,117,114,108,121,68,111,117,98,108,101,81,117,111,116,101,59],value:"”"},{key:[67,108,111,115,101,67,117,114,108,121,81,117,111,116,101,59],value:"’"},{key:[67,111,108,111,110,59],value:"∷"},{key:[67,111,108,111,110,101,59],value:"⩴"},{key:[67,111,110,103,114,117,101,110,116,59],value:"≡"},{key:[67,111,110,105,110,116,59],value:"∯"},{key:[67,111,110,116,111,117,114,73,110,116,101,103,114,97,108,59],value:"∮"},{key:[67,111,112,102,59],value:"ℂ"},{key:[67,111,112,114,111,100,117,99,116,59],value:"∐"},{key:[67,111,117,110,116,101,114,67,108,111,99,107,119,105,115,101,67,111,110,116,111,117,114,73,110,116,101,103,114,97,108,59],value:"∳"},{key:[67,114,111,115,115,59],value:"⨯"},{key:[67,115,99,114,59],value:"𝒞"},{key:[67,117,112,59],value:"⋓"},{key:[67,117,112,67,97,112,59],value:"≍"},{key:[68,68,59],value:"ⅅ"},{key:[68,68,111,116,114,97,104,100,59],value:"⤑"},{key:[68,74,99,121,59],value:"Ђ"},{key:[68,83,99,121,59],value:"Ѕ"},{key:[68,90,99,121,59],value:"Џ"},{key:[68,97,103,103,101,114,59],value:"‡"},{key:[68,97,114,114,59],value:"↡"},{key:[68,97,115,104,118,59],value:"⫤"},{key:[68,99,97,114,111,110,59],value:"Ď"},{key:[68,99,121,59],value:"Д"},{key:[68,101,108,59],value:"∇"},{key:[68,101,108,116,97,59],value:"Δ"},{key:[68,102,114,59],value:"𝔇"},{key:[68,105,97,99,114,105,116,105,99,97,108,65,99,117,116,101,59],value:"´"},{key:[68,105,97,99,114,105,116,105,99,97,108,68,111,116,59],value:"˙"},{key:[68,105,97,99,114,105,116,105,99,97,108,68,111,117,98,108,101,65,99,117,116,101,59],value:"˝"},{key:[68,105,97,99,114,105,116,105,99,97,108,71,114,97,118,101,59],value:"`"},{key:[68,105,97,99,114,105,116,105,99,97,108,84,105,108,100,101,59],value:"˜"},{key:[68,105,97,109,111,110,100,59],value:"⋄"},{key:[68,105,102,102,101,114,101,110,116,105,97,108,68,59],value:"ⅆ"},{key:[68,111,112,102,59],value:"𝔻"},{key:[68,111,116,59],value:"¨"},{key:[68,111,116,68,111,116,59],value:"⃜"},{key:[68,111,116,69,113,117,97,108,59],value:"≐"},{key:[68,111,117,98,108,101,67,111,110,116,111,117,114,73,110,116,101,103,114,97,108,59],value:"∯"},{key:[68,111,117,98,108,101,68,111,116,59],value:"¨"},{key:[68,111,117,98,108,101,68,111,119,110,65,114,114,111,119,59],value:"⇓"},{key:[68,111,117,98,108,101,76,101,102,116,65,114,114,111,119,59],value:"⇐"},{key:[68,111,117,98,108,101,76,101,102,116,82,105,103,104,116,65,114,114,111,119,59],value:"⇔"},{key:[68,111,117,98,108,101,76,101,102,116,84,101,101,59],value:"⫤"},{key:[68,111,117,98,108,101,76,111,110,103,76,101,102,116,65,114,114,111,119,59],value:"⟸"},{key:[68,111,117,98,108,101,76,111,110,103,76,101,102,116,82,105,103,104,116,65,114,114,111,119,59],value:"⟺"},{key:[68,111,117,98,108,101,76,111,110,103,82,105,103,104,116,65,114,114,111,119,59],value:"⟹"},{key:[68,111,117,98,108,101,82,105,103,104,116,65,114,114,111,119,59],value:"⇒"},{key:[68,111,117,98,108,101,82,105,103,104,116,84,101,101,59],value:"⊨"},{key:[68,111,117,98,108,101,85,112,65,114,114,111,119,59],value:"⇑"},{key:[68,111,117,98,108,101,85,112,68,111,119,110,65,114,114,111,119,59],value:"⇕"},{key:[68,111,117,98,108,101,86,101,114,116,105,99,97,108,66,97,114,59],value:"∥"},{key:[68,111,119,110,65,114,114,111,119,59],value:"↓"},{key:[68,111,119,110,65,114,114,111,119,66,97,114,59],value:"⤓"},{key:[68,111,119,110,65,114,114,111,119,85,112,65,114,114,111,119,59],value:"⇵"},{key:[68,111,119,110,66,114,101,118,101,59],value:"̑"},{key:[68,111,119,110,76,101,102,116,82,105,103,104,116,86,101,99,116,111,114,59],value:"⥐"},{key:[68,111,119,110,76,101,102,116,84,101,101,86,101,99,116,111,114,59],value:"⥞"},{key:[68,111,119,110,76,101,102,116,86,101,99,116,111,114,59],value:"↽"},{key:[68,111,119,110,76,101,102,116,86,101,99,116,111,114,66,97,114,59],value:"⥖"},{key:[68,111,119,110,82,105,103,104,116,84,101,101,86,101,99,116,111,114,59],value:"⥟"},{key:[68,111,119,110,82,105,103,104,116,86,101,99,116,111,114,59],value:"⇁"},{key:[68,111,119,110,82,105,103,104,116,86,101,99,116,111,114,66,97,114,59],value:"⥗"},{key:[68,111,119,110,84,101,101,59],value:"⊤"},{key:[68,111,119,110,84,101,101,65,114,114,111,119,59],value:"↧"},{key:[68,111,119,110,97,114,114,111,119,59],value:"⇓"},{key:[68,115,99,114,59],value:"𝒟"},{key:[68,115,116,114,111,107,59],value:"Đ"},{key:[69,78,71,59],value:"Ŋ"},{key:[69,84,72,59],value:"Ð"},{key:[69,97,99,117,116,101,59],value:"É"},{key:[69,99,97,114,111,110,59],value:"Ě"},{key:[69,99,105,114,99,59],value:"Ê"},{key:[69,99,121,59],value:"Э"},{key:[69,100,111,116,59],value:"Ė"},{key:[69,102,114,59],value:"𝔈"},{key:[69,103,114,97,118,101,59],value:"È"},{key:[69,108,101,109,101,110,116,59],value:"∈"},{key:[69,109,97,99,114,59],value:"Ē"},{key:[69,109,112,116,121,83,109,97,108,108,83,113,117,97,114,101,59],value:"◻"},{key:[69,109,112,116,121,86,101,114,121,83,109,97,108,108,83,113,117,97,114,101,59],value:"▫"},{key:[69,111,103,111,110,59],value:"Ę"},{key:[69,111,112,102,59],value:"𝔼"},{key:[69,112,115,105,108,111,110,59],value:"Ε"},{key:[69,113,117,97,108,59],value:"⩵"},{key:[69,113,117,97,108,84,105,108,100,101,59],value:"≂"},{key:[69,113,117,105,108,105,98,114,105,117,109,59],value:"⇌"},{key:[69,115,99,114,59],value:"ℰ"},{key:[69,115,105,109,59],value:"⩳"},{key:[69,116,97,59],value:"Η"},{key:[69,117,109,108,59],value:"Ë"},{key:[69,120,105,115,116,115,59],value:"∃"},{key:[69,120,112,111,110,101,110,116,105,97,108,69,59],value:"ⅇ"},{key:[70,99,121,59],value:"Ф"},{key:[70,102,114,59],value:"𝔉"},{key:[70,105,108,108,101,100,83,109,97,108,108,83,113,117,97,114,101,59],value:"◼"},{key:[70,105,108,108,101,100,86,101,114,121,83,109,97,108,108,83,113,117,97,114,101,59],value:"▪"},{key:[70,111,112,102,59],value:"𝔽"},{key:[70,111,114,65,108,108,59],value:"∀"},{key:[70,111,117,114,105,101,114,116,114,102,59],value:"ℱ"},{key:[70,115,99,114,59],value:"ℱ"},{key:[71,74,99,121,59],value:"Ѓ"},{key:[71,84,59],value:">"},{key:[71,97,109,109,97,59],value:"Γ"},{key:[71,97,109,109,97,100,59],value:"Ϝ"},{key:[71,98,114,101,118,101,59],value:"Ğ"},{key:[71,99,101,100,105,108,59],value:"Ģ"},{key:[71,99,105,114,99,59],value:"Ĝ"},{key:[71,99,121,59],value:"Г"},{key:[71,100,111,116,59],value:"Ġ"},{key:[71,102,114,59],value:"𝔊"},{key:[71,103,59],value:"⋙"},{key:[71,111,112,102,59],value:"𝔾"},{key:[71,114,101,97,116,101,114,69,113,117,97,108,59],value:"≥"},{key:[71,114,101,97,116,101,114,69,113,117,97,108,76,101,115,115,59],value:"⋛"},{key:[71,114,101,97,116,101,114,70,117,108,108,69,113,117,97,108,59],value:"≧"},{key:[71,114,101,97,116,101,114,71,114,101,97,116,101,114,59],value:"⪢"},{key:[71,114,101,97,116,101,114,76,101,115,115,59],value:"≷"},{key:[71,114,101,97,116,101,114,83,108,97,110,116,69,113,117,97,108,59],value:"⩾"},{key:[71,114,101,97,116,101,114,84,105,108,100,101,59],value:"≳"},{key:[71,115,99,114,59],value:"𝒢"},{key:[71,116,59],value:"≫"},{key:[72,65,82,68,99,121,59],value:"Ъ"},{key:[72,97,99,101,107,59],value:"ˇ"},{key:[72,97,116,59],value:"^"},{key:[72,99,105,114,99,59],value:"Ĥ"},{key:[72,102,114,59],value:"ℌ"},{key:[72,105,108,98,101,114,116,83,112,97,99,101,59],value:"ℋ"},{key:[72,111,112,102,59],value:"ℍ"},{key:[72,111,114,105,122,111,110,116,97,108,76,105,110,101,59],value:"─"},{key:[72,115,99,114,59],value:"ℋ"},{key:[72,115,116,114,111,107,59],value:"Ħ"},{key:[72,117,109,112,68,111,119,110,72,117,109,112,59],value:"≎"},{key:[72,117,109,112,69,113,117,97,108,59],value:"≏"},{key:[73,69,99,121,59],value:"Е"},{key:[73,74,108,105,103,59],value:"Ĳ"},{key:[73,79,99,121,59],value:"Ё"},{key:[73,97,99,117,116,101,59],value:"Í"},{key:[73,99,105,114,99,59],value:"Î"},{key:[73,99,121,59],value:"И"},{key:[73,100,111,116,59],value:"İ"},{key:[73,102,114,59],value:"ℑ"},{key:[73,103,114,97,118,101,59],value:"Ì"},{key:[73,109,59],value:"ℑ"},{key:[73,109,97,99,114,59],value:"Ī"},{key:[73,109,97,103,105,110,97,114,121,73,59],value:"ⅈ"},{key:[73,109,112,108,105,101,115,59],value:"⇒"},{key:[73,110,116,59],value:"∬"},{key:[73,110,116,101,103,114,97,108,59],value:"∫"},{key:[73,110,116,101,114,115,101,99,116,105,111,110,59],value:"⋂"},{key:[73,110,118,105,115,105,98,108,101,67,111,109,109,97,59],value:"⁣"},{key:[73,110,118,105,115,105,98,108,101,84,105,109,101,115,59],value:"⁢"},{key:[73,111,103,111,110,59],value:"Į"},{key:[73,111,112,102,59],value:"𝕀"},{key:[73,111,116,97,59],value:"Ι"},{key:[73,115,99,114,59],value:"ℐ"},{key:[73,116,105,108,100,101,59],value:"Ĩ"},{key:[73,117,107,99,121,59],value:"І"},{key:[73,117,109,108,59],value:"Ï"},{key:[74,99,105,114,99,59],value:"Ĵ"},{key:[74,99,121,59],value:"Й"},{key:[74,102,114,59],value:"𝔍"},{key:[74,111,112,102,59],value:"𝕁"},{key:[74,115,99,114,59],value:"𝒥"},{key:[74,115,101,114,99,121,59],value:"Ј"},{key:[74,117,107,99,121,59],value:"Є"},{key:[75,72,99,121,59],value:"Х"},{key:[75,74,99,121,59],value:"Ќ"},{key:[75,97,112,112,97,59],value:"Κ"},{key:[75,99,101,100,105,108,59],value:"Ķ"},{key:[75,99,121,59],value:"К"},{key:[75,102,114,59],value:"𝔎"},{key:[75,111,112,102,59],value:"𝕂"},{key:[75,115,99,114,59],value:"𝒦"},{key:[76,74,99,121,59],value:"Љ"},{key:[76,84,59],value:"<"},{key:[76,97,99,117,116,101,59],value:"Ĺ"},{key:[76,97,109,98,100,97,59],value:"Λ"},{key:[76,97,110,103,59],value:"⟪"},{key:[76,97,112,108,97,99,101,116,114,102,59],value:"ℒ"},{key:[76,97,114,114,59],value:"↞"},{key:[76,99,97,114,111,110,59],value:"Ľ"},{key:[76,99,101,100,105,108,59],value:"Ļ"},{key:[76,99,121,59],value:"Л"},{key:[76,101,102,116,65,110,103,108,101,66,114,97,99,107,101,116,59],value:"⟨"},{key:[76,101,102,116,65,114,114,111,119,59],value:"←"},{key:[76,101,102,116,65,114,114,111,119,66,97,114,59],value:"⇤"},{key:[76,101,102,116,65,114,114,111,119,82,105,103,104,116,65,114,114,111,119,59],value:"⇆"},{key:[76,101,102,116,67,101,105,108,105,110,103,59],value:"⌈"},{key:[76,101,102,116,68,111,117,98,108,101,66,114,97,99,107,101,116,59],value:"⟦"},{key:[76,101,102,116,68,111,119,110,84,101,101,86,101,99,116,111,114,59],value:"⥡"},{key:[76,101,102,116,68,111,119,110,86,101,99,116,111,114,59],value:"⇃"},{key:[76,101,102,116,68,111,119,110,86,101,99,116,111,114,66,97,114,59],value:"⥙"},{key:[76,101,102,116,70,108,111,111,114,59],value:"⌊"},{key:[76,101,102,116,82,105,103,104,116,65,114,114,111,119,59],value:"↔"},{key:[76,101,102,116,82,105,103,104,116,86,101,99,116,111,114,59],value:"⥎"},{key:[76,101,102,116,84,101,101,59],value:"⊣"},{key:[76,101,102,116,84,101,101,65,114,114,111,119,59],value:"↤"},{key:[76,101,102,116,84,101,101,86,101,99,116,111,114,59],value:"⥚"},{key:[76,101,102,116,84,114,105,97,110,103,108,101,59],value:"⊲"},{key:[76,101,102,116,84,114,105,97,110,103,108,101,66,97,114,59],value:"⧏"},{key:[76,101,102,116,84,114,105,97,110,103,108,101,69,113,117,97,108,59],value:"⊴"},{key:[76,101,102,116,85,112,68,111,119,110,86,101,99,116,111,114,59],value:"⥑"},{key:[76,101,102,116,85,112,84,101,101,86,101,99,116,111,114,59],value:"⥠"},{key:[76,101,102,116,85,112,86,101,99,116,111,114,59],value:"↿"},{key:[76,101,102,116,85,112,86,101,99,116,111,114,66,97,114,59],value:"⥘"},{key:[76,101,102,116,86,101,99,116,111,114,59],value:"↼"},{key:[76,101,102,116,86,101,99,116,111,114,66,97,114,59],value:"⥒"},{key:[76,101,102,116,97,114,114,111,119,59],value:"⇐"},{key:[76,101,102,116,114,105,103,104,116,97,114,114,111,119,59],value:"⇔"},{key:[76,101,115,115,69,113,117,97,108,71,114,101,97,116,101,114,59],value:"⋚"},{key:[76,101,115,115,70,117,108,108,69,113,117,97,108,59],value:"≦"},{key:[76,101,115,115,71,114,101,97,116,101,114,59],value:"≶"},{key:[76,101,115,115,76,101,115,115,59],value:"⪡"},{key:[76,101,115,115,83,108,97,110,116,69,113,117,97,108,59],value:"⩽"},{key:[76,101,115,115,84,105,108,100,101,59],value:"≲"},{key:[76,102,114,59],value:"𝔏"},{key:[76,108,59],value:"⋘"},{key:[76,108,101,102,116,97,114,114,111,119,59],value:"⇚"},{key:[76,109,105,100,111,116,59],value:"Ŀ"},{key:[76,111,110,103,76,101,102,116,65,114,114,111,119,59],value:"⟵"},{key:[76,111,110,103,76,101,102,116,82,105,103,104,116,65,114,114,111,119,59],value:"⟷"},{key:[76,111,110,103,82,105,103,104,116,65,114,114,111,119,59],value:"⟶"},{key:[76,111,110,103,108,101,102,116,97,114,114,111,119,59],value:"⟸"},{key:[76,111,110,103,108,101,102,116,114,105,103,104,116,97,114,114,111,119,59],value:"⟺"},{key:[76,111,110,103,114,105,103,104,116,97,114,114,111,119,59],value:"⟹"},{key:[76,111,112,102,59],value:"𝕃"},{key:[76,111,119,101,114,76,101,102,116,65,114,114,111,119,59],value:"↙"},{key:[76,111,119,101,114,82,105,103,104,116,65,114,114,111,119,59],value:"↘"},{key:[76,115,99,114,59],value:"ℒ"},{key:[76,115,104,59],value:"↰"},{key:[76,115,116,114,111,107,59],value:"Ł"},{key:[76,116,59],value:"≪"},{key:[77,97,112,59],value:"⤅"},{key:[77,99,121,59],value:"М"},{key:[77,101,100,105,117,109,83,112,97,99,101,59],value:" "},{key:[77,101,108,108,105,110,116,114,102,59],value:"ℳ"},{key:[77,102,114,59],value:"𝔐"},{key:[77,105,110,117,115,80,108,117,115,59],value:"∓"},{key:[77,111,112,102,59],value:"𝕄"},{key:[77,115,99,114,59],value:"ℳ"},{key:[77,117,59],value:"Μ"},{key:[78,74,99,121,59],value:"Њ"},{key:[78,97,99,117,116,101,59],value:"Ń"},{key:[78,99,97,114,111,110,59],value:"Ň"},{key:[78,99,101,100,105,108,59],value:"Ņ"},{key:[78,99,121,59],value:"Н"},{key:[78,101,103,97,116,105,118,101,77,101,100,105,117,109,83,112,97,99,101,59],value:"​"},{key:[78,101,103,97,116,105,118,101,84,104,105,99,107,83,112,97,99,101,59],value:"​"},{key:[78,101,103,97,116,105,118,101,84,104,105,110,83,112,97,99,101,59],value:"​"},{key:[78,101,103,97,116,105,118,101,86,101,114,121,84,104,105,110,83,112,97,99,101,59],value:"​"},{key:[78,101,115,116,101,100,71,114,101,97,116,101,114,71,114,101,97,116,101,114,59],value:"≫"},{key:[78,101,115,116,101,100,76,101,115,115,76,101,115,115,59],value:"≪"},{key:[78,101,119,76,105,110,101,59],value:"\n"},{key:[78,102,114,59],value:"𝔑"},{key:[78,111,66,114,101,97,107,59],value:"⁠"},{key:[78,111,110,66,114,101,97,107,105,110,103,83,112,97,99,101,59],value:" "},{key:[78,111,112,102,59],value:"ℕ"},{key:[78,111,116,59],value:"⫬"},{key:[78,111,116,67,111,110,103,114,117,101,110,116,59],value:"≢"},{key:[78,111,116,67,117,112,67,97,112,59],value:"≭"},{key:[78,111,116,68,111,117,98,108,101,86,101,114,116,105,99,97,108,66,97,114,59],value:"∦"},{key:[78,111,116,69,108,101,109,101,110,116,59],value:"∉"},{key:[78,111,116,69,113,117,97,108,59],value:"≠"},{key:[78,111,116,69,113,117,97,108,84,105,108,100,101,59],value:"≂̸"},{key:[78,111,116,69,120,105,115,116,115,59],value:"∄"},{key:[78,111,116,71,114,101,97,116,101,114,59],value:"≯"},{key:[78,111,116,71,114,101,97,116,101,114,69,113,117,97,108,59],value:"≱"},{key:[78,111,116,71,114,101,97,116,101,114,70,117,108,108,69,113,117,97,108,59],value:"≧̸"},{key:[78,111,116,71,114,101,97,116,101,114,71,114,101,97,116,101,114,59],value:"≫̸"},{key:[78,111,116,71,114,101,97,116,101,114,76,101,115,115,59],value:"≹"},{key:[78,111,116,71,114,101,97,116,101,114,83,108,97,110,116,69,113,117,97,108,59],value:"⩾̸"},{key:[78,111,116,71,114,101,97,116,101,114,84,105,108,100,101,59],value:"≵"},{key:[78,111,116,72,117,109,112,68,111,119,110,72,117,109,112,59],value:"≎̸"},{key:[78,111,116,72,117,109,112,69,113,117,97,108,59],value:"≏̸"},{key:[78,111,116,76,101,102,116,84,114,105,97,110,103,108,101,59],value:"⋪"},{key:[78,111,116,76,101,102,116,84,114,105,97,110,103,108,101,66,97,114,59],value:"⧏̸"},{key:[78,111,116,76,101,102,116,84,114,105,97,110,103,108,101,69,113,117,97,108,59],value:"⋬"},{key:[78,111,116,76,101,115,115,59],value:"≮"},{key:[78,111,116,76,101,115,115,69,113,117,97,108,59],value:"≰"},{key:[78,111,116,76,101,115,115,71,114,101,97,116,101,114,59],value:"≸"},{key:[78,111,116,76,101,115,115,76,101,115,115,59],value:"≪̸"},{key:[78,111,116,76,101,115,115,83,108,97,110,116,69,113,117,97,108,59],value:"⩽̸"},{key:[78,111,116,76,101,115,115,84,105,108,100,101,59],value:"≴"},{key:[78,111,116,78,101,115,116,101,100,71,114,101,97,116,101,114,71,114,101,97,116,101,114,59],value:"⪢̸"},{key:[78,111,116,78,101,115,116,101,100,76,101,115,115,76,101,115,115,59],value:"⪡̸"},{key:[78,111,116,80,114,101,99,101,100,101,115,59],value:"⊀"},{key:[78,111,116,80,114,101,99,101,100,101,115,69,113,117,97,108,59],value:"⪯̸"},{key:[78,111,116,80,114,101,99,101,100,101,115,83,108,97,110,116,69,113,117,97,108,59],value:"⋠"},{key:[78,111,116,82,101,118,101,114,115,101,69,108,101,109,101,110,116,59],value:"∌"},{key:[78,111,116,82,105,103,104,116,84,114,105,97,110,103,108,101,59],value:"⋫"},{key:[78,111,116,82,105,103,104,116,84,114,105,97,110,103,108,101,66,97,114,59],value:"⧐̸"},{key:[78,111,116,82,105,103,104,116,84,114,105,97,110,103,108,101,69,113,117,97,108,59],value:"⋭"},{key:[78,111,116,83,113,117,97,114,101,83,117,98,115,101,116,59],value:"⊏̸"},{key:[78,111,116,83,113,117,97,114,101,83,117,98,115,101,116,69,113,117,97,108,59],value:"⋢"},{key:[78,111,116,83,113,117,97,114,101,83,117,112,101,114,115,101,116,59],value:"⊐̸"},{key:[78,111,116,83,113,117,97,114,101,83,117,112,101,114,115,101,116,69,113,117,97,108,59],value:"⋣"},{key:[78,111,116,83,117,98,115,101,116,59],value:"⊂⃒"},{key:[78,111,116,83,117,98,115,101,116,69,113,117,97,108,59],value:"⊈"},{key:[78,111,116,83,117,99,99,101,101,100,115,59],value:"⊁"},{key:[78,111,116,83,117,99,99,101,101,100,115,69,113,117,97,108,59],value:"⪰̸"},{key:[78,111,116,83,117,99,99,101,101,100,115,83,108,97,110,116,69,113,117,97,108,59],value:"⋡"},{key:[78,111,116,83,117,99,99,101,101,100,115,84,105,108,100,101,59],value:"≿̸"},{key:[78,111,116,83,117,112,101,114,115,101,116,59],value:"⊃⃒"},{key:[78,111,116,83,117,112,101,114,115,101,116,69,113,117,97,108,59],value:"⊉"},{key:[78,111,116,84,105,108,100,101,59],value:"≁"},{key:[78,111,116,84,105,108,100,101,69,113,117,97,108,59],value:"≄"},{key:[78,111,116,84,105,108,100,101,70,117,108,108,69,113,117,97,108,59],value:"≇"},{key:[78,111,116,84,105,108,100,101,84,105,108,100,101,59],value:"≉"},{key:[78,111,116,86,101,114,116,105,99,97,108,66,97,114,59],value:"∤"},{key:[78,115,99,114,59],value:"𝒩"},{key:[78,116,105,108,100,101,59],value:"Ñ"},{key:[78,117,59],value:"Ν"},{key:[79,69,108,105,103,59],value:"Œ"},{key:[79,97,99,117,116,101,59],value:"Ó"},{key:[79,99,105,114,99,59],value:"Ô"},{key:[79,99,121,59],value:"О"},{key:[79,100,98,108,97,99,59],value:"Ő"},{key:[79,102,114,59],value:"𝔒"},{key:[79,103,114,97,118,101,59],value:"Ò"},{key:[79,109,97,99,114,59],value:"Ō"},{key:[79,109,101,103,97,59],value:"Ω"},{key:[79,109,105,99,114,111,110,59],value:"Ο"},{key:[79,111,112,102,59],value:"𝕆"},{key:[79,112,101,110,67,117,114,108,121,68,111,117,98,108,101,81,117,111,116,101,59],value:"“"},{key:[79,112,101,110,67,117,114,108,121,81,117,111,116,101,59],value:"‘"},{key:[79,114,59],value:"⩔"},{key:[79,115,99,114,59],value:"𝒪"},{key:[79,115,108,97,115,104,59],value:"Ø"},{key:[79,116,105,108,100,101,59],value:"Õ"},{key:[79,116,105,109,101,115,59],value:"⨷"},{key:[79,117,109,108,59],value:"Ö"},{key:[79,118,101,114,66,97,114,59],value:"‾"},{key:[79,118,101,114,66,114,97,99,101,59],value:"⏞"},{key:[79,118,101,114,66,114,97,99,107,101,116,59],value:"⎴"},{key:[79,118,101,114,80,97,114,101,110,116,104,101,115,105,115,59],value:"⏜"},{key:[80,97,114,116,105,97,108,68,59],value:"∂"},{key:[80,99,121,59],value:"П"},{key:[80,102,114,59],value:"𝔓"},{key:[80,104,105,59],value:"Φ"},{key:[80,105,59],value:"Π"},{key:[80,108,117,115,77,105,110,117,115,59],value:"±"},{key:[80,111,105,110,99,97,114,101,112,108,97,110,101,59],value:"ℌ"},{key:[80,111,112,102,59],value:"ℙ"},{key:[80,114,59],value:"⪻"},{key:[80,114,101,99,101,100,101,115,59],value:"≺"},{key:[80,114,101,99,101,100,101,115,69,113,117,97,108,59],value:"⪯"},{key:[80,114,101,99,101,100,101,115,83,108,97,110,116,69,113,117,97,108,59],value:"≼"},{key:[80,114,101,99,101,100,101,115,84,105,108,100,101,59],value:"≾"},{key:[80,114,105,109,101,59],value:"″"},{key:[80,114,111,100,117,99,116,59],value:"∏"},{key:[80,114,111,112,111,114,116,105,111,110,59],value:"∷"},{key:[80,114,111,112,111,114,116,105,111,110,97,108,59],value:"∝"},{key:[80,115,99,114,59],value:"𝒫"},{key:[80,115,105,59],value:"Ψ"},{key:[81,85,79,84,59],value:'"'},{key:[81,102,114,59],value:"𝔔"},{key:[81,111,112,102,59],value:"ℚ"},{key:[81,115,99,114,59],value:"𝒬"},{key:[82,66,97,114,114,59],value:"⤐"},{key:[82,69,71,59],value:"®"},{key:[82,97,99,117,116,101,59],value:"Ŕ"},{key:[82,97,110,103,59],value:"⟫"},{key:[82,97,114,114,59],value:"↠"},{key:[82,97,114,114,116,108,59],value:"⤖"},{key:[82,99,97,114,111,110,59],value:"Ř"},{key:[82,99,101,100,105,108,59],value:"Ŗ"},{key:[82,99,121,59],value:"Р"},{key:[82,101,59],value:"ℜ"},{key:[82,101,118,101,114,115,101,69,108,101,109,101,110,116,59],value:"∋"},{key:[82,101,118,101,114,115,101,69,113,117,105,108,105,98,114,105,117,109,59],value:"⇋"},{key:[82,101,118,101,114,115,101,85,112,69,113,117,105,108,105,98,114,105,117,109,59],value:"⥯"},{key:[82,102,114,59],value:"ℜ"},{key:[82,104,111,59],value:"Ρ"},{key:[82,105,103,104,116,65,110,103,108,101,66,114,97,99,107,101,116,59],value:"⟩"},{key:[82,105,103,104,116,65,114,114,111,119,59],value:"→"},{key:[82,105,103,104,116,65,114,114,111,119,66,97,114,59],value:"⇥"},{key:[82,105,103,104,116,65,114,114,111,119,76,101,102,116,65,114,114,111,119,59],value:"⇄"},{key:[82,105,103,104,116,67,101,105,108,105,110,103,59],value:"⌉"},{key:[82,105,103,104,116,68,111,117,98,108,101,66,114,97,99,107,101,116,59],value:"⟧"},{key:[82,105,103,104,116,68,111,119,110,84,101,101,86,101,99,116,111,114,59],value:"⥝"},{key:[82,105,103,104,116,68,111,119,110,86,101,99,116,111,114,59],value:"⇂"},{key:[82,105,103,104,116,68,111,119,110,86,101,99,116,111,114,66,97,114,59],value:"⥕"},{key:[82,105,103,104,116,70,108,111,111,114,59],value:"⌋"},{key:[82,105,103,104,116,84,101,101,59],value:"⊢"},{key:[82,105,103,104,116,84,101,101,65,114,114,111,119,59],value:"↦"},{key:[82,105,103,104,116,84,101,101,86,101,99,116,111,114,59],value:"⥛"},{key:[82,105,103,104,116,84,114,105,97,110,103,108,101,59],value:"⊳"},{key:[82,105,103,104,116,84,114,105,97,110,103,108,101,66,97,114,59],value:"⧐"},{key:[82,105,103,104,116,84,114,105,97,110,103,108,101,69,113,117,97,108,59],value:"⊵"},{key:[82,105,103,104,116,85,112,68,111,119,110,86,101,99,116,111,114,59],value:"⥏"},{key:[82,105,103,104,116,85,112,84,101,101,86,101,99,116,111,114,59],value:"⥜"},{key:[82,105,103,104,116,85,112,86,101,99,116,111,114,59],value:"↾"},{key:[82,105,103,104,116,85,112,86,101,99,116,111,114,66,97,114,59],value:"⥔"},{key:[82,105,103,104,116,86,101,99,116,111,114,59],value:"⇀"},{key:[82,105,103,104,116,86,101,99,116,111,114,66,97,114,59],value:"⥓"},{key:[82,105,103,104,116,97,114,114,111,119,59],value:"⇒"},{key:[82,111,112,102,59],value:"ℝ"},{key:[82,111,117,110,100,73,109,112,108,105,101,115,59],value:"⥰"},{key:[82,114,105,103,104,116,97,114,114,111,119,59],value:"⇛"},{key:[82,115,99,114,59],value:"ℛ"},{key:[82,115,104,59],value:"↱"},{key:[82,117,108,101,68,101,108,97,121,101,100,59],value:"⧴"},{key:[83,72,67,72,99,121,59],value:"Щ"},{key:[83,72,99,121,59],value:"Ш"},{key:[83,79,70,84,99,121,59],value:"Ь"},{key:[83,97,99,117,116,101,59],value:"Ś"},{key:[83,99,59],value:"⪼"},{key:[83,99,97,114,111,110,59],value:"Š"},{key:[83,99,101,100,105,108,59],value:"Ş"},{key:[83,99,105,114,99,59],value:"Ŝ"},{key:[83,99,121,59],value:"С"},{key:[83,102,114,59],value:"𝔖"},{key:[83,104,111,114,116,68,111,119,110,65,114,114,111,119,59],value:"↓"},{key:[83,104,111,114,116,76,101,102,116,65,114,114,111,119,59],value:"←"},{key:[83,104,111,114,116,82,105,103,104,116,65,114,114,111,119,59],value:"→"},{key:[83,104,111,114,116,85,112,65,114,114,111,119,59],value:"↑"},{key:[83,105,103,109,97,59],value:"Σ"},{key:[83,109,97,108,108,67,105,114,99,108,101,59],value:"∘"},{key:[83,111,112,102,59],value:"𝕊"},{key:[83,113,114,116,59],value:"√"},{key:[83,113,117,97,114,101,59],value:"□"},{key:[83,113,117,97,114,101,73,110,116,101,114,115,101,99,116,105,111,110,59],value:"⊓"},{key:[83,113,117,97,114,101,83,117,98,115,101,116,59],value:"⊏"},{key:[83,113,117,97,114,101,83,117,98,115,101,116,69,113,117,97,108,59],value:"⊑"},{key:[83,113,117,97,114,101,83,117,112,101,114,115,101,116,59],value:"⊐"},{key:[83,113,117,97,114,101,83,117,112,101,114,115,101,116,69,113,117,97,108,59],value:"⊒"},{key:[83,113,117,97,114,101,85,110,105,111,110,59],value:"⊔"},{key:[83,115,99,114,59],value:"𝒮"},{key:[83,116,97,114,59],value:"⋆"},{key:[83,117,98,59],value:"⋐"},{key:[83,117,98,115,101,116,59],value:"⋐"},{key:[83,117,98,115,101,116,69,113,117,97,108,59],value:"⊆"},{key:[83,117,99,99,101,101,100,115,59],value:"≻"},{key:[83,117,99,99,101,101,100,115,69,113,117,97,108,59],value:"⪰"},{key:[83,117,99,99,101,101,100,115,83,108,97,110,116,69,113,117,97,108,59],value:"≽"},{key:[83,117,99,99,101,101,100,115,84,105,108,100,101,59],value:"≿"},{key:[83,117,99,104,84,104,97,116,59],value:"∋"},{key:[83,117,109,59],value:"∑"},{key:[83,117,112,59],value:"⋑"},{key:[83,117,112,101,114,115,101,116,59],value:"⊃"},{key:[83,117,112,101,114,115,101,116,69,113,117,97,108,59],value:"⊇"},{key:[83,117,112,115,101,116,59],value:"⋑"},{key:[84,72,79,82,78,59],value:"Þ"},{key:[84,82,65,68,69,59],value:"™"},{key:[84,83,72,99,121,59],value:"Ћ"},{key:[84,83,99,121,59],value:"Ц"},{key:[84,97,98,59],value:"\t"},{key:[84,97,117,59],value:"Τ"},{key:[84,99,97,114,111,110,59],value:"Ť"},{key:[84,99,101,100,105,108,59],value:"Ţ"},{key:[84,99,121,59],value:"Т"},{key:[84,102,114,59],value:"𝔗"},{key:[84,104,101,114,101,102,111,114,101,59],value:"∴"},{key:[84,104,101,116,97,59],value:"Θ"},{key:[84,104,105,99,107,83,112,97,99,101,59],value:"  "},{key:[84,104,105,110,83,112,97,99,101,59],value:" "},{key:[84,105,108,100,101,59],value:"∼"},{key:[84,105,108,100,101,69,113,117,97,108,59],value:"≃"},{key:[84,105,108,100,101,70,117,108,108,69,113,117,97,108,59],value:"≅"},{key:[84,105,108,100,101,84,105,108,100,101,59],value:"≈"},{key:[84,111,112,102,59],value:"𝕋"},{key:[84,114,105,112,108,101,68,111,116,59],value:"⃛"},{key:[84,115,99,114,59],value:"𝒯"},{key:[84,115,116,114,111,107,59],value:"Ŧ"},{key:[85,97,99,117,116,101,59],value:"Ú"},{key:[85,97,114,114,59],value:"↟"},{key:[85,97,114,114,111,99,105,114,59],value:"⥉"},{key:[85,98,114,99,121,59],value:"Ў"},{key:[85,98,114,101,118,101,59],value:"Ŭ"},{key:[85,99,105,114,99,59],value:"Û"},{key:[85,99,121,59],value:"У"},{key:[85,100,98,108,97,99,59],value:"Ű"},{key:[85,102,114,59],value:"𝔘"},{key:[85,103,114,97,118,101,59],value:"Ù"},{key:[85,109,97,99,114,59],value:"Ū"},{key:[85,110,100,101,114,66,97,114,59],value:"_"},{key:[85,110,100,101,114,66,114,97,99,101,59],value:"⏟"},{key:[85,110,100,101,114,66,114,97,99,107,101,116,59],value:"⎵"},{key:[85,110,100,101,114,80,97,114,101,110,116,104,101,115,105,115,59],value:"⏝"},{key:[85,110,105,111,110,59],value:"⋃"},{key:[85,110,105,111,110,80,108,117,115,59],value:"⊎"},{key:[85,111,103,111,110,59],value:"Ų"},{key:[85,111,112,102,59],value:"𝕌"},{key:[85,112,65,114,114,111,119,59],value:"↑"},{key:[85,112,65,114,114,111,119,66,97,114,59],value:"⤒"},{key:[85,112,65,114,114,111,119,68,111,119,110,65,114,114,111,119,59],value:"⇅"},{key:[85,112,68,111,119,110,65,114,114,111,119,59],value:"↕"},{key:[85,112,69,113,117,105,108,105,98,114,105,117,109,59],value:"⥮"},{key:[85,112,84,101,101,59],value:"⊥"},{key:[85,112,84,101,101,65,114,114,111,119,59],value:"↥"},{key:[85,112,97,114,114,111,119,59],value:"⇑"},{key:[85,112,100,111,119,110,97,114,114,111,119,59],value:"⇕"},{key:[85,112,112,101,114,76,101,102,116,65,114,114,111,119,59],value:"↖"},{key:[85,112,112,101,114,82,105,103,104,116,65,114,114,111,119,59],value:"↗"},{key:[85,112,115,105,59],value:"ϒ"},{key:[85,112,115,105,108,111,110,59],value:"Υ"},{key:[85,114,105,110,103,59],value:"Ů"},{key:[85,115,99,114,59],value:"𝒰"},{key:[85,116,105,108,100,101,59],value:"Ũ"},{key:[85,117,109,108,59],value:"Ü"},{key:[86,68,97,115,104,59],value:"⊫"},{key:[86,98,97,114,59],value:"⫫"},{key:[86,99,121,59],value:"В"},{key:[86,100,97,115,104,59],value:"⊩"},{key:[86,100,97,115,104,108,59],value:"⫦"},{key:[86,101,101,59],value:"⋁"},{key:[86,101,114,98,97,114,59],value:"‖"},{key:[86,101,114,116,59],value:"‖"},{key:[86,101,114,116,105,99,97,108,66,97,114,59],value:"∣"},{key:[86,101,114,116,105,99,97,108,76,105,110,101,59],value:"|"},{key:[86,101,114,116,105,99,97,108,83,101,112,97,114,97,116,111,114,59],value:"❘"},{key:[86,101,114,116,105,99,97,108,84,105,108,100,101,59],value:"≀"},{key:[86,101,114,121,84,104,105,110,83,112,97,99,101,59],value:" "},{key:[86,102,114,59],value:"𝔙"},{key:[86,111,112,102,59],value:"𝕍"},{key:[86,115,99,114,59],value:"𝒱"},{key:[86,118,100,97,115,104,59],value:"⊪"},{key:[87,99,105,114,99,59],value:"Ŵ"},{key:[87,101,100,103,101,59],value:"⋀"},{key:[87,102,114,59],value:"𝔚"},{key:[87,111,112,102,59],value:"𝕎"},{key:[87,115,99,114,59],value:"𝒲"},{key:[88,102,114,59],value:"𝔛"},{key:[88,105,59],value:"Ξ"},{key:[88,111,112,102,59],value:"𝕏"},{key:[88,115,99,114,59],value:"𝒳"},{key:[89,65,99,121,59],value:"Я"},{key:[89,73,99,121,59],value:"Ї"},{key:[89,85,99,121,59],value:"Ю"},{key:[89,97,99,117,116,101,59],value:"Ý"},{key:[89,99,105,114,99,59],value:"Ŷ"},{key:[89,99,121,59],value:"Ы"},{key:[89,102,114,59],value:"𝔜"},{key:[89,111,112,102,59],value:"𝕐"},{key:[89,115,99,114,59],value:"𝒴"},{key:[89,117,109,108,59],value:"Ÿ"},{key:[90,72,99,121,59],value:"Ж"},{key:[90,97,99,117,116,101,59],value:"Ź"},{key:[90,99,97,114,111,110,59],value:"Ž"},{key:[90,99,121,59],value:"З"},{key:[90,100,111,116,59],value:"Ż"},{key:[90,101,114,111,87,105,100,116,104,83,112,97,99,101,59],value:"​"},{key:[90,101,116,97,59],value:"Ζ"},{key:[90,102,114,59],value:"ℨ"},{key:[90,111,112,102,59],value:"ℤ"},{key:[90,115,99,114,59],value:"𝒵"},{key:[97,97,99,117,116,101,59],value:"á"},{key:[97,98,114,101,118,101,59],value:"ă"},{key:[97,99,59],value:"∾"},{key:[97,99,69,59],value:"∾̳"},{key:[97,99,100,59],value:"∿"},{key:[97,99,105,114,99,59],value:"â"},{key:[97,99,117,116,101,59],value:"´"},{key:[97,99,121,59],value:"а"},{key:[97,101,108,105,103,59],value:"æ"},{key:[97,102,59],value:"⁡"},{key:[97,102,114,59],value:"𝔞"},{key:[97,103,114,97,118,101,59],value:"à"},{key:[97,108,101,102,115,121,109,59],value:"ℵ"},{key:[97,108,101,112,104,59],value:"ℵ"},{key:[97,108,112,104,97,59],value:"α"},{key:[97,109,97,99,114,59],value:"ā"},{key:[97,109,97,108,103,59],value:"⨿"},{key:[97,109,112,59],value:"&"},{key:[97,110,100,59],value:"∧"},{key:[97,110,100,97,110,100,59],value:"⩕"},{key:[97,110,100,100,59],value:"⩜"},{key:[97,110,100,115,108,111,112,101,59],value:"⩘"},{key:[97,110,100,118,59],value:"⩚"},{key:[97,110,103,59],value:"∠"},{key:[97,110,103,101,59],value:"⦤"},{key:[97,110,103,108,101,59],value:"∠"},{key:[97,110,103,109,115,100,59],value:"∡"},{key:[97,110,103,109,115,100,97,97,59],value:"⦨"},{key:[97,110,103,109,115,100,97,98,59],value:"⦩"},{key:[97,110,103,109,115,100,97,99,59],value:"⦪"},{key:[97,110,103,109,115,100,97,100,59],value:"⦫"},{key:[97,110,103,109,115,100,97,101,59],value:"⦬"},{key:[97,110,103,109,115,100,97,102,59],value:"⦭"},{key:[97,110,103,109,115,100,97,103,59],value:"⦮"},{key:[97,110,103,109,115,100,97,104,59],value:"⦯"},{key:[97,110,103,114,116,59],value:"∟"},{key:[97,110,103,114,116,118,98,59],value:"⊾"},{key:[97,110,103,114,116,118,98,100,59],value:"⦝"},{key:[97,110,103,115,112,104,59],value:"∢"},{key:[97,110,103,115,116,59],value:"Å"},{key:[97,110,103,122,97,114,114,59],value:"⍼"},{key:[97,111,103,111,110,59],value:"ą"},{key:[97,111,112,102,59],value:"𝕒"},{key:[97,112,59],value:"≈"},{key:[97,112,69,59],value:"⩰"},{key:[97,112,97,99,105,114,59],value:"⩯"},{key:[97,112,101,59],value:"≊"},{key:[97,112,105,100,59],value:"≋"},{key:[97,112,111,115,59],value:"'"},{key:[97,112,112,114,111,120,59],value:"≈"},{key:[97,112,112,114,111,120,101,113,59],value:"≊"},{key:[97,114,105,110,103,59],value:"å"},{key:[97,115,99,114,59],value:"𝒶"},{key:[97,115,116,59],value:"*"},{key:[97,115,121,109,112,59],value:"≈"},{key:[97,115,121,109,112,101,113,59],value:"≍"},{key:[97,116,105,108,100,101,59],value:"ã"},{key:[97,117,109,108,59],value:"ä"},{key:[97,119,99,111,110,105,110,116,59],value:"∳"},{key:[97,119,105,110,116,59],value:"⨑"},{key:[98,78,111,116,59],value:"⫭"},{key:[98,97,99,107,99,111,110,103,59],value:"≌"},{key:[98,97,99,107,101,112,115,105,108,111,110,59],value:"϶"},{key:[98,97,99,107,112,114,105,109,101,59],value:"‵"},{key:[98,97,99,107,115,105,109,59],value:"∽"},{key:[98,97,99,107,115,105,109,101,113,59],value:"⋍"},{key:[98,97,114,118,101,101,59],value:"⊽"},{key:[98,97,114,119,101,100,59],value:"⌅"},{key:[98,97,114,119,101,100,103,101,59],value:"⌅"},{key:[98,98,114,107,59],value:"⎵"},{key:[98,98,114,107,116,98,114,107,59],value:"⎶"},{key:[98,99,111,110,103,59],value:"≌"},{key:[98,99,121,59],value:"б"},{key:[98,100,113,117,111,59],value:"„"},{key:[98,101,99,97,117,115,59],value:"∵"},{key:[98,101,99,97,117,115,101,59],value:"∵"},{key:[98,101,109,112,116,121,118,59],value:"⦰"},{key:[98,101,112,115,105,59],value:"϶"},{key:[98,101,114,110,111,117,59],value:"ℬ"},{key:[98,101,116,97,59],value:"β"},{key:[98,101,116,104,59],value:"ℶ"},{key:[98,101,116,119,101,101,110,59],value:"≬"},{key:[98,102,114,59],value:"𝔟"},{key:[98,105,103,99,97,112,59],value:"⋂"},{key:[98,105,103,99,105,114,99,59],value:"◯"},{key:[98,105,103,99,117,112,59],value:"⋃"},{key:[98,105,103,111,100,111,116,59],value:"⨀"},{key:[98,105,103,111,112,108,117,115,59],value:"⨁"},{key:[98,105,103,111,116,105,109,101,115,59],value:"⨂"},{key:[98,105,103,115,113,99,117,112,59],value:"⨆"},{key:[98,105,103,115,116,97,114,59],value:"★"},{key:[98,105,103,116,114,105,97,110,103,108,101,100,111,119,110,59],value:"▽"},{key:[98,105,103,116,114,105,97,110,103,108,101,117,112,59],value:"△"},{key:[98,105,103,117,112,108,117,115,59],value:"⨄"},{key:[98,105,103,118,101,101,59],value:"⋁"},{key:[98,105,103,119,101,100,103,101,59],value:"⋀"},{key:[98,107,97,114,111,119,59],value:"⤍"},{key:[98,108,97,99,107,108,111,122,101,110,103,101,59],value:"⧫"},{key:[98,108,97,99,107,115,113,117,97,114,101,59],value:"▪"},{key:[98,108,97,99,107,116,114,105,97,110,103,108,101,59],value:"▴"},{key:[98,108,97,99,107,116,114,105,97,110,103,108,101,100,111,119,110,59],value:"▾"},{key:[98,108,97,99,107,116,114,105,97,110,103,108,101,108,101,102,116,59],value:"◂"},{key:[98,108,97,99,107,116,114,105,97,110,103,108,101,114,105,103,104,116,59],value:"▸"},{key:[98,108,97,110,107,59],value:"␣"},{key:[98,108,107,49,50,59],value:"▒"},{key:[98,108,107,49,52,59],value:"░"},{key:[98,108,107,51,52,59],value:"▓"},{key:[98,108,111,99,107,59],value:"█"},{key:[98,110,101,59],value:"=⃥"},{key:[98,110,101,113,117,105,118,59],value:"≡⃥"},{key:[98,110,111,116,59],value:"⌐"},{key:[98,111,112,102,59],value:"𝕓"},{key:[98,111,116,59],value:"⊥"},{key:[98,111,116,116,111,109,59],value:"⊥"},{key:[98,111,119,116,105,101,59],value:"⋈"},{key:[98,111,120,68,76,59],value:"╗"},{key:[98,111,120,68,82,59],value:"╔"},{key:[98,111,120,68,108,59],value:"╖"},{key:[98,111,120,68,114,59],value:"╓"},{key:[98,111,120,72,59],value:"═"},{key:[98,111,120,72,68,59],value:"╦"},{key:[98,111,120,72,85,59],value:"╩"},{key:[98,111,120,72,100,59],value:"╤"},{key:[98,111,120,72,117,59],value:"╧"},{key:[98,111,120,85,76,59],value:"╝"},{key:[98,111,120,85,82,59],value:"╚"},{key:[98,111,120,85,108,59],value:"╜"},{key:[98,111,120,85,114,59],value:"╙"},{key:[98,111,120,86,59],value:"║"},{key:[98,111,120,86,72,59],value:"╬"},{key:[98,111,120,86,76,59],value:"╣"},{key:[98,111,120,86,82,59],value:"╠"},{key:[98,111,120,86,104,59],value:"╫"},{key:[98,111,120,86,108,59],value:"╢"},{key:[98,111,120,86,114,59],value:"╟"},{key:[98,111,120,98,111,120,59],value:"⧉"},{key:[98,111,120,100,76,59],value:"╕"},{key:[98,111,120,100,82,59],value:"╒"},{key:[98,111,120,100,108,59],value:"┐"},{key:[98,111,120,100,114,59],value:"┌"},{key:[98,111,120,104,59],value:"─"},{key:[98,111,120,104,68,59],value:"╥"},{key:[98,111,120,104,85,59],value:"╨"},{key:[98,111,120,104,100,59],value:"┬"},{key:[98,111,120,104,117,59],value:"┴"},{key:[98,111,120,109,105,110,117,115,59],value:"⊟"},{key:[98,111,120,112,108,117,115,59],value:"⊞"},{key:[98,111,120,116,105,109,101,115,59],value:"⊠"},{key:[98,111,120,117,76,59],value:"╛"},{key:[98,111,120,117,82,59],value:"╘"},{key:[98,111,120,117,108,59],value:"┘"},{key:[98,111,120,117,114,59],value:"└"},{key:[98,111,120,118,59],value:"│"},{key:[98,111,120,118,72,59],value:"╪"},{key:[98,111,120,118,76,59],value:"╡"},{key:[98,111,120,118,82,59],value:"╞"},{key:[98,111,120,118,104,59],value:"┼"},{key:[98,111,120,118,108,59],value:"┤"},{key:[98,111,120,118,114,59],value:"├"},{key:[98,112,114,105,109,101,59],value:"‵"},{key:[98,114,101,118,101,59],value:"˘"},{key:[98,114,118,98,97,114,59],value:"¦"},{key:[98,115,99,114,59],value:"𝒷"},{key:[98,115,101,109,105,59],value:"⁏"},{key:[98,115,105,109,59],value:"∽"},{key:[98,115,105,109,101,59],value:"⋍"},{key:[98,115,111,108,59],value:"\\"},{key:[98,115,111,108,98,59],value:"⧅"},{key:[98,115,111,108,104,115,117,98,59],value:"⟈"},{key:[98,117,108,108,59],value:"•"},{key:[98,117,108,108,101,116,59],value:"•"},{key:[98,117,109,112,59],value:"≎"},{key:[98,117,109,112,69,59],value:"⪮"},{key:[98,117,109,112,101,59],value:"≏"},{key:[98,117,109,112,101,113,59],value:"≏"},{key:[99,97,99,117,116,101,59],value:"ć"},{key:[99,97,112,59],value:"∩"},{key:[99,97,112,97,110,100,59],value:"⩄"},{key:[99,97,112,98,114,99,117,112,59],value:"⩉"},{key:[99,97,112,99,97,112,59],value:"⩋"},{key:[99,97,112,99,117,112,59],value:"⩇"},{key:[99,97,112,100,111,116,59],value:"⩀"},{key:[99,97,112,115,59],value:"∩︀"},{key:[99,97,114,101,116,59],value:"⁁"},{key:[99,97,114,111,110,59],value:"ˇ"},{key:[99,99,97,112,115,59],value:"⩍"},{key:[99,99,97,114,111,110,59],value:"č"},{key:[99,99,101,100,105,108,59],value:"ç"},{key:[99,99,105,114,99,59],value:"ĉ"},{key:[99,99,117,112,115,59],value:"⩌"},{key:[99,99,117,112,115,115,109,59],value:"⩐"},{key:[99,100,111,116,59],value:"ċ"},{key:[99,101,100,105,108,59],value:"¸"},{key:[99,101,109,112,116,121,118,59],value:"⦲"},{key:[99,101,110,116,59],value:"¢"},{key:[99,101,110,116,101,114,100,111,116,59],value:"·"},{key:[99,102,114,59],value:"𝔠"},{key:[99,104,99,121,59],value:"ч"},{key:[99,104,101,99,107,59],value:"✓"},{key:[99,104,101,99,107,109,97,114,107,59],value:"✓"},{key:[99,104,105,59],value:"χ"},{key:[99,105,114,59],value:"○"},{key:[99,105,114,69,59],value:"⧃"},{key:[99,105,114,99,59],value:"ˆ"},{key:[99,105,114,99,101,113,59],value:"≗"},{key:[99,105,114,99,108,101,97,114,114,111,119,108,101,102,116,59],value:"↺"},{key:[99,105,114,99,108,101,97,114,114,111,119,114,105,103,104,116,59],value:"↻"},{key:[99,105,114,99,108,101,100,82,59],value:"®"},{key:[99,105,114,99,108,101,100,83,59],value:"Ⓢ"},{key:[99,105,114,99,108,101,100,97,115,116,59],value:"⊛"},{key:[99,105,114,99,108,101,100,99,105,114,99,59],value:"⊚"},{key:[99,105,114,99,108,101,100,100,97,115,104,59],value:"⊝"},{key:[99,105,114,101,59],value:"≗"},{key:[99,105,114,102,110,105,110,116,59],value:"⨐"},{key:[99,105,114,109,105,100,59],value:"⫯"},{key:[99,105,114,115,99,105,114,59],value:"⧂"},{key:[99,108,117,98,115,59],value:"♣"},{key:[99,108,117,98,115,117,105,116,59],value:"♣"},{key:[99,111,108,111,110,59],value:":"},{key:[99,111,108,111,110,101,59],value:"≔"},{key:[99,111,108,111,110,101,113,59],value:"≔"},{key:[99,111,109,109,97,59],value:","},{key:[99,111,109,109,97,116,59],value:"@"},{key:[99,111,109,112,59],value:"∁"},{key:[99,111,109,112,102,110,59],value:"∘"},{key:[99,111,109,112,108,101,109,101,110,116,59],value:"∁"},{key:[99,111,109,112,108,101,120,101,115,59],value:"ℂ"},{key:[99,111,110,103,59],value:"≅"},{key:[99,111,110,103,100,111,116,59],value:"⩭"},{key:[99,111,110,105,110,116,59],value:"∮"},{key:[99,111,112,102,59],value:"𝕔"},{key:[99,111,112,114,111,100,59],value:"∐"},{key:[99,111,112,121,59],value:"©"},{key:[99,111,112,121,115,114,59],value:"℗"},{key:[99,114,97,114,114,59],value:"↵"},{key:[99,114,111,115,115,59],value:"✗"},{key:[99,115,99,114,59],value:"𝒸"},{key:[99,115,117,98,59],value:"⫏"},{key:[99,115,117,98,101,59],value:"⫑"},{key:[99,115,117,112,59],value:"⫐"},{key:[99,115,117,112,101,59],value:"⫒"},{key:[99,116,100,111,116,59],value:"⋯"},{key:[99,117,100,97,114,114,108,59],value:"⤸"},{key:[99,117,100,97,114,114,114,59],value:"⤵"},{key:[99,117,101,112,114,59],value:"⋞"},{key:[99,117,101,115,99,59],value:"⋟"},{key:[99,117,108,97,114,114,59],value:"↶"},{key:[99,117,108,97,114,114,112,59],value:"⤽"},{key:[99,117,112,59],value:"∪"},{key:[99,117,112,98,114,99,97,112,59],value:"⩈"},{key:[99,117,112,99,97,112,59],value:"⩆"},{key:[99,117,112,99,117,112,59],value:"⩊"},{key:[99,117,112,100,111,116,59],value:"⊍"},{key:[99,117,112,111,114,59],value:"⩅"},{key:[99,117,112,115,59],value:"∪︀"},{key:[99,117,114,97,114,114,59],value:"↷"},{key:[99,117,114,97,114,114,109,59],value:"⤼"},{key:[99,117,114,108,121,101,113,112,114,101,99,59],value:"⋞"},{key:[99,117,114,108,121,101,113,115,117,99,99,59],value:"⋟"},{key:[99,117,114,108,121,118,101,101,59],value:"⋎"},{key:[99,117,114,108,121,119,101,100,103,101,59],value:"⋏"},{key:[99,117,114,114,101,110,59],value:"¤"},{key:[99,117,114,118,101,97,114,114,111,119,108,101,102,116,59],value:"↶"},{key:[99,117,114,118,101,97,114,114,111,119,114,105,103,104,116,59],value:"↷"},{key:[99,117,118,101,101,59],value:"⋎"},{key:[99,117,119,101,100,59],value:"⋏"},{key:[99,119,99,111,110,105,110,116,59],value:"∲"},{key:[99,119,105,110,116,59],value:"∱"},{key:[99,121,108,99,116,121,59],value:"⌭"},{key:[100,65,114,114,59],value:"⇓"},{key:[100,72,97,114,59],value:"⥥"},{key:[100,97,103,103,101,114,59],value:"†"},{key:[100,97,108,101,116,104,59],value:"ℸ"},{key:[100,97,114,114,59],value:"↓"},{key:[100,97,115,104,59],value:"‐"},{key:[100,97,115,104,118,59],value:"⊣"},{key:[100,98,107,97,114,111,119,59],value:"⤏"},{key:[100,98,108,97,99,59],value:"˝"},{key:[100,99,97,114,111,110,59],value:"ď"},{key:[100,99,121,59],value:"д"},{key:[100,100,59],value:"ⅆ"},{key:[100,100,97,103,103,101,114,59],value:"‡"},{key:[100,100,97,114,114,59],value:"⇊"},{key:[100,100,111,116,115,101,113,59],value:"⩷"},{key:[100,101,103,59],value:"°"},{key:[100,101,108,116,97,59],value:"δ"},{key:[100,101,109,112,116,121,118,59],value:"⦱"},{key:[100,102,105,115,104,116,59],value:"⥿"},{key:[100,102,114,59],value:"𝔡"},{key:[100,104,97,114,108,59],value:"⇃"},{key:[100,104,97,114,114,59],value:"⇂"},{key:[100,105,97,109,59],value:"⋄"},{key:[100,105,97,109,111,110,100,59],value:"⋄"},{key:[100,105,97,109,111,110,100,115,117,105,116,59],value:"♦"},{key:[100,105,97,109,115,59],value:"♦"},{key:[100,105,101,59],value:"¨"},{key:[100,105,103,97,109,109,97,59],value:"ϝ"},{key:[100,105,115,105,110,59],value:"⋲"},{key:[100,105,118,59],value:"÷"},{key:[100,105,118,105,100,101,59],value:"÷"},{key:[100,105,118,105,100,101,111,110,116,105,109,101,115,59],value:"⋇"},{key:[100,105,118,111,110,120,59],value:"⋇"},{key:[100,106,99,121,59],value:"ђ"},{key:[100,108,99,111,114,110,59],value:"⌞"},{key:[100,108,99,114,111,112,59],value:"⌍"},{key:[100,111,108,108,97,114,59],value:"$"},{key:[100,111,112,102,59],value:"𝕕"},{key:[100,111,116,59],value:"˙"},{key:[100,111,116,101,113,59],value:"≐"},{key:[100,111,116,101,113,100,111,116,59],value:"≑"},{key:[100,111,116,109,105,110,117,115,59],value:"∸"},{key:[100,111,116,112,108,117,115,59],value:"∔"},{key:[100,111,116,115,113,117,97,114,101,59],value:"⊡"},{key:[100,111,117,98,108,101,98,97,114,119,101,100,103,101,59],value:"⌆"},{key:[100,111,119,110,97,114,114,111,119,59],value:"↓"},{key:[100,111,119,110,100,111,119,110,97,114,114,111,119,115,59],value:"⇊"},{key:[100,111,119,110,104,97,114,112,111,111,110,108,101,102,116,59],value:"⇃"},{key:[100,111,119,110,104,97,114,112,111,111,110,114,105,103,104,116,59],value:"⇂"},{key:[100,114,98,107,97,114,111,119,59],value:"⤐"},{key:[100,114,99,111,114,110,59],value:"⌟"},{key:[100,114,99,114,111,112,59],value:"⌌"},{key:[100,115,99,114,59],value:"𝒹"},{key:[100,115,99,121,59],value:"ѕ"},{key:[100,115,111,108,59],value:"⧶"},{key:[100,115,116,114,111,107,59],value:"đ"},{key:[100,116,100,111,116,59],value:"⋱"},{key:[100,116,114,105,59],value:"▿"},{key:[100,116,114,105,102,59],value:"▾"},{key:[100,117,97,114,114,59],value:"⇵"},{key:[100,117,104,97,114,59],value:"⥯"},{key:[100,119,97,110,103,108,101,59],value:"⦦"},{key:[100,122,99,121,59],value:"џ"},{key:[100,122,105,103,114,97,114,114,59],value:"⟿"},{key:[101,68,68,111,116,59],value:"⩷"},{key:[101,68,111,116,59],value:"≑"},{key:[101,97,99,117,116,101,59],value:"é"},{key:[101,97,115,116,101,114,59],value:"⩮"},{key:[101,99,97,114,111,110,59],value:"ě"},{key:[101,99,105,114,59],value:"≖"},{key:[101,99,105,114,99,59],value:"ê"},{key:[101,99,111,108,111,110,59],value:"≕"},{key:[101,99,121,59],value:"э"},{key:[101,100,111,116,59],value:"ė"},{key:[101,101,59],value:"ⅇ"},{key:[101,102,68,111,116,59],value:"≒"},{key:[101,102,114,59],value:"𝔢"},{key:[101,103,59],value:"⪚"},{key:[101,103,114,97,118,101,59],value:"è"},{key:[101,103,115,59],value:"⪖"},{key:[101,103,115,100,111,116,59],value:"⪘"},{key:[101,108,59],value:"⪙"},{key:[101,108,105,110,116,101,114,115,59],value:"⏧"},{key:[101,108,108,59],value:"ℓ"},{key:[101,108,115,59],value:"⪕"},{key:[101,108,115,100,111,116,59],value:"⪗"},{key:[101,109,97,99,114,59],value:"ē"},{key:[101,109,112,116,121,59],value:"∅"},{key:[101,109,112,116,121,115,101,116,59],value:"∅"},{key:[101,109,112,116,121,118,59],value:"∅"},{key:[101,109,115,112,49,51,59],value:" "},{key:[101,109,115,112,49,52,59],value:" "},{key:[101,109,115,112,59],value:" "},{key:[101,110,103,59],value:"ŋ"},{key:[101,110,115,112,59],value:" "},{key:[101,111,103,111,110,59],value:"ę"},{key:[101,111,112,102,59],value:"𝕖"},{key:[101,112,97,114,59],value:"⋕"},{key:[101,112,97,114,115,108,59],value:"⧣"},{key:[101,112,108,117,115,59],value:"⩱"},{key:[101,112,115,105,59],value:"ε"},{key:[101,112,115,105,108,111,110,59],value:"ε"},{key:[101,112,115,105,118,59],value:"ϵ"},{key:[101,113,99,105,114,99,59],value:"≖"},{key:[101,113,99,111,108,111,110,59],value:"≕"},{key:[101,113,115,105,109,59],value:"≂"},{key:[101,113,115,108,97,110,116,103,116,114,59],value:"⪖"},{key:[101,113,115,108,97,110,116,108,101,115,115,59],value:"⪕"},{key:[101,113,117,97,108,115,59],value:"="},{key:[101,113,117,101,115,116,59],value:"≟"},{key:[101,113,117,105,118,59],value:"≡"},{key:[101,113,117,105,118,68,68,59],value:"⩸"},{key:[101,113,118,112,97,114,115,108,59],value:"⧥"},{key:[101,114,68,111,116,59],value:"≓"},{key:[101,114,97,114,114,59],value:"⥱"},{key:[101,115,99,114,59],value:"ℯ"},{key:[101,115,100,111,116,59],value:"≐"},{key:[101,115,105,109,59],value:"≂"},{key:[101,116,97,59],value:"η"},{key:[101,116,104,59],value:"ð"},{key:[101,117,109,108,59],value:"ë"},{key:[101,117,114,111,59],value:"€"},{key:[101,120,99,108,59],value:"!"},{key:[101,120,105,115,116,59],value:"∃"},{key:[101,120,112,101,99,116,97,116,105,111,110,59],value:"ℰ"},{key:[101,120,112,111,110,101,110,116,105,97,108,101,59],value:"ⅇ"},{key:[102,97,108,108,105,110,103,100,111,116,115,101,113,59],value:"≒"},{key:[102,99,121,59],value:"ф"},{key:[102,101,109,97,108,101,59],value:"♀"},{key:[102,102,105,108,105,103,59],value:"ﬃ"},{key:[102,102,108,105,103,59],value:"ﬀ"},{key:[102,102,108,108,105,103,59],value:"ﬄ"},{key:[102,102,114,59],value:"𝔣"},{key:[102,105,108,105,103,59],value:"ﬁ"},{key:[102,106,108,105,103,59],value:"fj"},{key:[102,108,97,116,59],value:"♭"},{key:[102,108,108,105,103,59],value:"ﬂ"},{key:[102,108,116,110,115,59],value:"▱"},{key:[102,110,111,102,59],value:"ƒ"},{key:[102,111,112,102,59],value:"𝕗"},{key:[102,111,114,97,108,108,59],value:"∀"},{key:[102,111,114,107,59],value:"⋔"},{key:[102,111,114,107,118,59],value:"⫙"},{key:[102,112,97,114,116,105,110,116,59],value:"⨍"},{key:[102,114,97,99,49,50,59],value:"½"},{key:[102,114,97,99,49,51,59],value:"⅓"},{key:[102,114,97,99,49,52,59],value:"¼"},{key:[102,114,97,99,49,53,59],value:"⅕"},{key:[102,114,97,99,49,54,59],value:"⅙"},{key:[102,114,97,99,49,56,59],value:"⅛"},{key:[102,114,97,99,50,51,59],value:"⅔"},{key:[102,114,97,99,50,53,59],value:"⅖"},{key:[102,114,97,99,51,52,59],value:"¾"},{key:[102,114,97,99,51,53,59],value:"⅗"},{key:[102,114,97,99,51,56,59],value:"⅜"},{key:[102,114,97,99,52,53,59],value:"⅘"},{key:[102,114,97,99,53,54,59],value:"⅚"},{key:[102,114,97,99,53,56,59],value:"⅝"},{key:[102,114,97,99,55,56,59],value:"⅞"},{key:[102,114,97,115,108,59],value:"⁄"},{key:[102,114,111,119,110,59],value:"⌢"},{key:[102,115,99,114,59],value:"𝒻"},{key:[103,69,59],value:"≧"},{key:[103,69,108,59],value:"⪌"},{key:[103,97,99,117,116,101,59],value:"ǵ"},{key:[103,97,109,109,97,59],value:"γ"},{key:[103,97,109,109,97,100,59],value:"ϝ"},{key:[103,97,112,59],value:"⪆"},{key:[103,98,114,101,118,101,59],value:"ğ"},{key:[103,99,105,114,99,59],value:"ĝ"},{key:[103,99,121,59],value:"г"},{key:[103,100,111,116,59],value:"ġ"},{key:[103,101,59],value:"≥"},{key:[103,101,108,59],value:"⋛"},{key:[103,101,113,59],value:"≥"},{key:[103,101,113,113,59],value:"≧"},{key:[103,101,113,115,108,97,110,116,59],value:"⩾"},{key:[103,101,115,59],value:"⩾"},{key:[103,101,115,99,99,59],value:"⪩"},{key:[103,101,115,100,111,116,59],value:"⪀"},{key:[103,101,115,100,111,116,111,59],value:"⪂"},{key:[103,101,115,100,111,116,111,108,59],value:"⪄"},{key:[103,101,115,108,59],value:"⋛︀"},{key:[103,101,115,108,101,115,59],value:"⪔"},{key:[103,102,114,59],value:"𝔤"},{key:[103,103,59],value:"≫"},{key:[103,103,103,59],value:"⋙"},{key:[103,105,109,101,108,59],value:"ℷ"},{key:[103,106,99,121,59],value:"ѓ"},{key:[103,108,59],value:"≷"},{key:[103,108,69,59],value:"⪒"},{key:[103,108,97,59],value:"⪥"},{key:[103,108,106,59],value:"⪤"},{key:[103,110,69,59],value:"≩"},{key:[103,110,97,112,59],value:"⪊"},{key:[103,110,97,112,112,114,111,120,59],value:"⪊"},{key:[103,110,101,59],value:"⪈"},{key:[103,110,101,113,59],value:"⪈"},{key:[103,110,101,113,113,59],value:"≩"},{key:[103,110,115,105,109,59],value:"⋧"},{key:[103,111,112,102,59],value:"𝕘"},{key:[103,114,97,118,101,59],value:"`"},{key:[103,115,99,114,59],value:"ℊ"},{key:[103,115,105,109,59],value:"≳"},{key:[103,115,105,109,101,59],value:"⪎"},{key:[103,115,105,109,108,59],value:"⪐"},{key:[103,116,59],value:">"},{key:[103,116,99,99,59],value:"⪧"},{key:[103,116,99,105,114,59],value:"⩺"},{key:[103,116,100,111,116,59],value:"⋗"},{key:[103,116,108,80,97,114,59],value:"⦕"},{key:[103,116,113,117,101,115,116,59],value:"⩼"},{key:[103,116,114,97,112,112,114,111,120,59],value:"⪆"},{key:[103,116,114,97,114,114,59],value:"⥸"},{key:[103,116,114,100,111,116,59],value:"⋗"},{key:[103,116,114,101,113,108,101,115,115,59],value:"⋛"},{key:[103,116,114,101,113,113,108,101,115,115,59],value:"⪌"},{key:[103,116,114,108,101,115,115,59],value:"≷"},{key:[103,116,114,115,105,109,59],value:"≳"},{key:[103,118,101,114,116,110,101,113,113,59],value:"≩︀"},{key:[103,118,110,69,59],value:"≩︀"},{key:[104,65,114,114,59],value:"⇔"},{key:[104,97,105,114,115,112,59],value:" "},{key:[104,97,108,102,59],value:"½"},{key:[104,97,109,105,108,116,59],value:"ℋ"},{key:[104,97,114,100,99,121,59],value:"ъ"},{key:[104,97,114,114,59],value:"↔"},{key:[104,97,114,114,99,105,114,59],value:"⥈"},{key:[104,97,114,114,119,59],value:"↭"},{key:[104,98,97,114,59],value:"ℏ"},{key:[104,99,105,114,99,59],value:"ĥ"},{key:[104,101,97,114,116,115,59],value:"♥"},{key:[104,101,97,114,116,115,117,105,116,59],value:"♥"},{key:[104,101,108,108,105,112,59],value:"…"},{key:[104,101,114,99,111,110,59],value:"⊹"},{key:[104,102,114,59],value:"𝔥"},{key:[104,107,115,101,97,114,111,119,59],value:"⤥"},{key:[104,107,115,119,97,114,111,119,59],value:"⤦"},{key:[104,111,97,114,114,59],value:"⇿"},{key:[104,111,109,116,104,116,59],value:"∻"},{key:[104,111,111,107,108,101,102,116,97,114,114,111,119,59],value:"↩"},{key:[104,111,111,107,114,105,103,104,116,97,114,114,111,119,59],value:"↪"},{key:[104,111,112,102,59],value:"𝕙"},{key:[104,111,114,98,97,114,59],value:"―"},{key:[104,115,99,114,59],value:"𝒽"},{key:[104,115,108,97,115,104,59],value:"ℏ"},{key:[104,115,116,114,111,107,59],value:"ħ"},{key:[104,121,98,117,108,108,59],value:"⁃"},{key:[104,121,112,104,101,110,59],value:"‐"},{key:[105,97,99,117,116,101,59],value:"í"},{key:[105,99,59],value:"⁣"},{key:[105,99,105,114,99,59],value:"î"},{key:[105,99,121,59],value:"и"},{key:[105,101,99,121,59],value:"е"},{key:[105,101,120,99,108,59],value:"¡"},{key:[105,102,102,59],value:"⇔"},{key:[105,102,114,59],value:"𝔦"},{key:[105,103,114,97,118,101,59],value:"ì"},{key:[105,105,59],value:"ⅈ"},{key:[105,105,105,105,110,116,59],value:"⨌"},{key:[105,105,105,110,116,59],value:"∭"},{key:[105,105,110,102,105,110,59],value:"⧜"},{key:[105,105,111,116,97,59],value:"℩"},{key:[105,106,108,105,103,59],value:"ĳ"},{key:[105,109,97,99,114,59],value:"ī"},{key:[105,109,97,103,101,59],value:"ℑ"},{key:[105,109,97,103,108,105,110,101,59],value:"ℐ"},{key:[105,109,97,103,112,97,114,116,59],value:"ℑ"},{key:[105,109,97,116,104,59],value:"ı"},{key:[105,109,111,102,59],value:"⊷"},{key:[105,109,112,101,100,59],value:"Ƶ"},{key:[105,110,59],value:"∈"},{key:[105,110,99,97,114,101,59],value:"℅"},{key:[105,110,102,105,110,59],value:"∞"},{key:[105,110,102,105,110,116,105,101,59],value:"⧝"},{key:[105,110,111,100,111,116,59],value:"ı"},{key:[105,110,116,59],value:"∫"},{key:[105,110,116,99,97,108,59],value:"⊺"},{key:[105,110,116,101,103,101,114,115,59],value:"ℤ"},{key:[105,110,116,101,114,99,97,108,59],value:"⊺"},{key:[105,110,116,108,97,114,104,107,59],value:"⨗"},{key:[105,110,116,112,114,111,100,59],value:"⨼"},{key:[105,111,99,121,59],value:"ё"},{key:[105,111,103,111,110,59],value:"į"},{key:[105,111,112,102,59],value:"𝕚"},{key:[105,111,116,97,59],value:"ι"},{key:[105,112,114,111,100,59],value:"⨼"},{key:[105,113,117,101,115,116,59],value:"¿"},{key:[105,115,99,114,59],value:"𝒾"},{key:[105,115,105,110,59],value:"∈"},{key:[105,115,105,110,69,59],value:"⋹"},{key:[105,115,105,110,100,111,116,59],value:"⋵"},{key:[105,115,105,110,115,59],value:"⋴"},{key:[105,115,105,110,115,118,59],value:"⋳"},{key:[105,115,105,110,118,59],value:"∈"},{key:[105,116,59],value:"⁢"},{key:[105,116,105,108,100,101,59],value:"ĩ"},{key:[105,117,107,99,121,59],value:"і"},{key:[105,117,109,108,59],value:"ï"},{key:[106,99,105,114,99,59],value:"ĵ"},{key:[106,99,121,59],value:"й"},{key:[106,102,114,59],value:"𝔧"},{key:[106,109,97,116,104,59],value:"ȷ"},{key:[106,111,112,102,59],value:"𝕛"},{key:[106,115,99,114,59],value:"𝒿"},{key:[106,115,101,114,99,121,59],value:"ј"},{key:[106,117,107,99,121,59],value:"є"},{key:[107,97,112,112,97,59],value:"κ"},{key:[107,97,112,112,97,118,59],value:"ϰ"},{key:[107,99,101,100,105,108,59],value:"ķ"},{key:[107,99,121,59],value:"к"},{key:[107,102,114,59],value:"𝔨"},{key:[107,103,114,101,101,110,59],value:"ĸ"},{key:[107,104,99,121,59],value:"х"},{key:[107,106,99,121,59],value:"ќ"},{key:[107,111,112,102,59],value:"𝕜"},{key:[107,115,99,114,59],value:"𝓀"},{key:[108,65,97,114,114,59],value:"⇚"},{key:[108,65,114,114,59],value:"⇐"},{key:[108,65,116,97,105,108,59],value:"⤛"},{key:[108,66,97,114,114,59],value:"⤎"},{key:[108,69,59],value:"≦"},{key:[108,69,103,59],value:"⪋"},{key:[108,72,97,114,59],value:"⥢"},{key:[108,97,99,117,116,101,59],value:"ĺ"},{key:[108,97,101,109,112,116,121,118,59],value:"⦴"},{key:[108,97,103,114,97,110,59],value:"ℒ"},{key:[108,97,109,98,100,97,59],value:"λ"},{key:[108,97,110,103,59],value:"⟨"},{key:[108,97,110,103,100,59],value:"⦑"},{key:[108,97,110,103,108,101,59],value:"⟨"},{key:[108,97,112,59],value:"⪅"},{key:[108,97,113,117,111,59],value:"«"},{key:[108,97,114,114,59],value:"←"},{key:[108,97,114,114,98,59],value:"⇤"},{key:[108,97,114,114,98,102,115,59],value:"⤟"},{key:[108,97,114,114,102,115,59],value:"⤝"},{key:[108,97,114,114,104,107,59],value:"↩"},{key:[108,97,114,114,108,112,59],value:"↫"},{key:[108,97,114,114,112,108,59],value:"⤹"},{key:[108,97,114,114,115,105,109,59],value:"⥳"},{key:[108,97,114,114,116,108,59],value:"↢"},{key:[108,97,116,59],value:"⪫"},{key:[108,97,116,97,105,108,59],value:"⤙"},{key:[108,97,116,101,59],value:"⪭"},{key:[108,97,116,101,115,59],value:"⪭︀"},{key:[108,98,97,114,114,59],value:"⤌"},{key:[108,98,98,114,107,59],value:"❲"},{key:[108,98,114,97,99,101,59],value:"{ "},{key:[108,98,114,97,99,107,59],value:"["},{key:[108,98,114,107,101,59],value:"⦋"},{key:[108,98,114,107,115,108,100,59],value:"⦏"},{key:[108,98,114,107,115,108,117,59],value:"⦍"},{key:[108,99,97,114,111,110,59],value:"ľ"},{key:[108,99,101,100,105,108,59],value:"ļ"},{key:[108,99,101,105,108,59],value:"⌈"},{key:[108,99,117,98,59],value:"{ "},{key:[108,99,121,59],value:"л"},{key:[108,100,99,97,59],value:"⤶"},{key:[108,100,113,117,111,59],value:"“"},{key:[108,100,113,117,111,114,59],value:"„"},{key:[108,100,114,100,104,97,114,59],value:"⥧"},{key:[108,100,114,117,115,104,97,114,59],value:"⥋"},{key:[108,100,115,104,59],value:"↲"},{key:[108,101,59],value:"≤"},{key:[108,101,102,116,97,114,114,111,119,59],value:"←"},{key:[108,101,102,116,97,114,114,111,119,116,97,105,108,59],value:"↢"},{key:[108,101,102,116,104,97,114,112,111,111,110,100,111,119,110,59],value:"↽"},{key:[108,101,102,116,104,97,114,112,111,111,110,117,112,59],value:"↼"},{key:[108,101,102,116,108,101,102,116,97,114,114,111,119,115,59],value:"⇇"},{key:[108,101,102,116,114,105,103,104,116,97,114,114,111,119,59],value:"↔"},{key:[108,101,102,116,114,105,103,104,116,97,114,114,111,119,115,59],value:"⇆"},{key:[108,101,102,116,114,105,103,104,116,104,97,114,112,111,111,110,115,59],value:"⇋"},{key:[108,101,102,116,114,105,103,104,116,115,113,117,105,103,97,114,114,111,119,59],value:"↭"},{key:[108,101,102,116,116,104,114,101,101,116,105,109,101,115,59],value:"⋋"},{key:[108,101,103,59],value:"⋚"},{key:[108,101,113,59],value:"≤"},{key:[108,101,113,113,59],value:"≦"},{key:[108,101,113,115,108,97,110,116,59],value:"⩽"},{key:[108,101,115,59],value:"⩽"},{key:[108,101,115,99,99,59],value:"⪨"},{key:[108,101,115,100,111,116,59],value:"⩿"},{key:[108,101,115,100,111,116,111,59],value:"⪁"},{key:[108,101,115,100,111,116,111,114,59],value:"⪃"},{key:[108,101,115,103,59],value:"⋚︀"},{key:[108,101,115,103,101,115,59],value:"⪓"},{key:[108,101,115,115,97,112,112,114,111,120,59],value:"⪅"},{key:[108,101,115,115,100,111,116,59],value:"⋖"},{key:[108,101,115,115,101,113,103,116,114,59],value:"⋚"},{key:[108,101,115,115,101,113,113,103,116,114,59],value:"⪋"},{key:[108,101,115,115,103,116,114,59],value:"≶"},{key:[108,101,115,115,115,105,109,59],value:"≲"},{key:[108,102,105,115,104,116,59],value:"⥼"},{key:[108,102,108,111,111,114,59],value:"⌊"},{key:[108,102,114,59],value:"𝔩"},{key:[108,103,59],value:"≶"},{key:[108,103,69,59],value:"⪑"},{key:[108,104,97,114,100,59],value:"↽"},{key:[108,104,97,114,117,59],value:"↼"},{key:[108,104,97,114,117,108,59],value:"⥪"},{key:[108,104,98,108,107,59],value:"▄"},{key:[108,106,99,121,59],value:"љ"},{key:[108,108,59],value:"≪"},{key:[108,108,97,114,114,59],value:"⇇"},{key:[108,108,99,111,114,110,101,114,59],value:"⌞"},{key:[108,108,104,97,114,100,59],value:"⥫"},{key:[108,108,116,114,105,59],value:"◺"},{key:[108,109,105,100,111,116,59],value:"ŀ"},{key:[108,109,111,117,115,116,59],value:"⎰"},{key:[108,109,111,117,115,116,97,99,104,101,59],value:"⎰"},{key:[108,110,69,59],value:"≨"},{key:[108,110,97,112,59],value:"⪉"},{key:[108,110,97,112,112,114,111,120,59],value:"⪉"},{key:[108,110,101,59],value:"⪇"},{key:[108,110,101,113,59],value:"⪇"},{key:[108,110,101,113,113,59],value:"≨"},{key:[108,110,115,105,109,59],value:"⋦"},{key:[108,111,97,110,103,59],value:"⟬"},{key:[108,111,97,114,114,59],value:"⇽"},{key:[108,111,98,114,107,59],value:"⟦"},{key:[108,111,110,103,108,101,102,116,97,114,114,111,119,59],value:"⟵"},{key:[108,111,110,103,108,101,102,116,114,105,103,104,116,97,114,114,111,119,59],value:"⟷"},{key:[108,111,110,103,109,97,112,115,116,111,59],value:"⟼"},{key:[108,111,110,103,114,105,103,104,116,97,114,114,111,119,59],value:"⟶"},{key:[108,111,111,112,97,114,114,111,119,108,101,102,116,59],value:"↫"},{key:[108,111,111,112,97,114,114,111,119,114,105,103,104,116,59],value:"↬"},{key:[108,111,112,97,114,59],value:"⦅"},{key:[108,111,112,102,59],value:"𝕝"},{key:[108,111,112,108,117,115,59],value:"⨭"},{key:[108,111,116,105,109,101,115,59],value:"⨴"},{key:[108,111,119,97,115,116,59],value:"∗"},{key:[108,111,119,98,97,114,59],value:"_"},{key:[108,111,122,59],value:"◊"},{key:[108,111,122,101,110,103,101,59],value:"◊"},{key:[108,111,122,102,59],value:"⧫"},{key:[108,112,97,114,59],value:"("},{key:[108,112,97,114,108,116,59],value:"⦓"},{key:[108,114,97,114,114,59],value:"⇆"},{key:[108,114,99,111,114,110,101,114,59],value:"⌟"},{key:[108,114,104,97,114,59],value:"⇋"},{key:[108,114,104,97,114,100,59],value:"⥭"},{key:[108,114,109,59],value:"‎"},{key:[108,114,116,114,105,59],value:"⊿"},{key:[108,115,97,113,117,111,59],value:"‹"},{key:[108,115,99,114,59],value:"𝓁"},{key:[108,115,104,59],value:"↰"},{key:[108,115,105,109,59],value:"≲"},{key:[108,115,105,109,101,59],value:"⪍"},{key:[108,115,105,109,103,59],value:"⪏"},{key:[108,115,113,98,59],value:"["},{key:[108,115,113,117,111,59],value:"‘"},{key:[108,115,113,117,111,114,59],value:"‚"},{key:[108,115,116,114,111,107,59],value:"ł"},{key:[108,116,59],value:"<"},{key:[108,116,99,99,59],value:"⪦"},{key:[108,116,99,105,114,59],value:"⩹"},{key:[108,116,100,111,116,59],value:"⋖"},{key:[108,116,104,114,101,101,59],value:"⋋"},{key:[108,116,105,109,101,115,59],value:"⋉"},{key:[108,116,108,97,114,114,59],value:"⥶"},{key:[108,116,113,117,101,115,116,59],value:"⩻"},{key:[108,116,114,80,97,114,59],value:"⦖"},{key:[108,116,114,105,59],value:"◃"},{key:[108,116,114,105,101,59],value:"⊴"},{key:[108,116,114,105,102,59],value:"◂"},{key:[108,117,114,100,115,104,97,114,59],value:"⥊"},{key:[108,117,114,117,104,97,114,59],value:"⥦"},{key:[108,118,101,114,116,110,101,113,113,59],value:"≨︀"},{key:[108,118,110,69,59],value:"≨︀"},{key:[109,68,68,111,116,59],value:"∺"},{key:[109,97,99,114,59],value:"¯"},{key:[109,97,108,101,59],value:"♂"},{key:[109,97,108,116,59],value:"✠"},{key:[109,97,108,116,101,115,101,59],value:"✠"},{key:[109,97,112,59],value:"↦"},{key:[109,97,112,115,116,111,59],value:"↦"},{key:[109,97,112,115,116,111,100,111,119,110,59],value:"↧"},{key:[109,97,112,115,116,111,108,101,102,116,59],value:"↤"},{key:[109,97,112,115,116,111,117,112,59],value:"↥"},{key:[109,97,114,107,101,114,59],value:"▮"},{key:[109,99,111,109,109,97,59],value:"⨩"},{key:[109,99,121,59],value:"м"},{key:[109,100,97,115,104,59],value:"—"},{key:[109,101,97,115,117,114,101,100,97,110,103,108,101,59],value:"∡"},{key:[109,102,114,59],value:"𝔪"},{key:[109,104,111,59],value:"℧"},{key:[109,105,99,114,111,59],value:"µ"},{key:[109,105,100,59],value:"∣"},{key:[109,105,100,97,115,116,59],value:"*"},{key:[109,105,100,99,105,114,59],value:"⫰"},{key:[109,105,100,100,111,116,59],value:"·"},{key:[109,105,110,117,115,59],value:"−"},{key:[109,105,110,117,115,98,59],value:"⊟"},{key:[109,105,110,117,115,100,59],value:"∸"},{key:[109,105,110,117,115,100,117,59],value:"⨪"},{key:[109,108,99,112,59],value:"⫛"},{key:[109,108,100,114,59],value:"…"},{key:[109,110,112,108,117,115,59],value:"∓"},{key:[109,111,100,101,108,115,59],value:"⊧"},{key:[109,111,112,102,59],value:"𝕞"},{key:[109,112,59],value:"∓"},{key:[109,115,99,114,59],value:"𝓂"},{key:[109,115,116,112,111,115,59],value:"∾"},{key:[109,117,59],value:"μ"},{key:[109,117,108,116,105,109,97,112,59],value:"⊸"},{key:[109,117,109,97,112,59],value:"⊸"},{key:[110,71,103,59],value:"⋙̸"},{key:[110,71,116,59],value:"≫⃒"},{key:[110,71,116,118,59],value:"≫̸"},{key:[110,76,101,102,116,97,114,114,111,119,59],value:"⇍"},{key:[110,76,101,102,116,114,105,103,104,116,97,114,114,111,119,59],value:"⇎"},{key:[110,76,108,59],value:"⋘̸"},{key:[110,76,116,59],value:"≪⃒"},{key:[110,76,116,118,59],value:"≪̸"},{key:[110,82,105,103,104,116,97,114,114,111,119,59],value:"⇏"},{key:[110,86,68,97,115,104,59],value:"⊯"},{key:[110,86,100,97,115,104,59],value:"⊮"},{key:[110,97,98,108,97,59],value:"∇"},{key:[110,97,99,117,116,101,59],value:"ń"},{key:[110,97,110,103,59],value:"∠⃒"},{key:[110,97,112,59],value:"≉"},{key:[110,97,112,69,59],value:"⩰̸"},{key:[110,97,112,105,100,59],value:"≋̸"},{key:[110,97,112,111,115,59],value:"ŉ"},{key:[110,97,112,112,114,111,120,59],value:"≉"},{key:[110,97,116,117,114,59],value:"♮"},{key:[110,97,116,117,114,97,108,59],value:"♮"},{key:[110,97,116,117,114,97,108,115,59],value:"ℕ"},{key:[110,98,115,112,59],value:" "},{key:[110,98,117,109,112,59],value:"≎̸"},{key:[110,98,117,109,112,101,59],value:"≏̸"},{key:[110,99,97,112,59],value:"⩃"},{key:[110,99,97,114,111,110,59],value:"ň"},{key:[110,99,101,100,105,108,59],value:"ņ"},{key:[110,99,111,110,103,59],value:"≇"},{key:[110,99,111,110,103,100,111,116,59],value:"⩭̸"},{key:[110,99,117,112,59],value:"⩂"},{key:[110,99,121,59],value:"н"},{key:[110,100,97,115,104,59],value:"–"},{key:[110,101,59],value:"≠"},{key:[110,101,65,114,114,59],value:"⇗"},{key:[110,101,97,114,104,107,59],value:"⤤"},{key:[110,101,97,114,114,59],value:"↗"},{key:[110,101,97,114,114,111,119,59],value:"↗"},{key:[110,101,100,111,116,59],value:"≐̸"},{key:[110,101,113,117,105,118,59],value:"≢"},{key:[110,101,115,101,97,114,59],value:"⤨"},{key:[110,101,115,105,109,59],value:"≂̸"},{key:[110,101,120,105,115,116,59],value:"∄"},{key:[110,101,120,105,115,116,115,59],value:"∄"},{key:[110,102,114,59],value:"𝔫"},{key:[110,103,69,59],value:"≧̸"},{key:[110,103,101,59],value:"≱"},{key:[110,103,101,113,59],value:"≱"},{key:[110,103,101,113,113,59],value:"≧̸"},{key:[110,103,101,113,115,108,97,110,116,59],value:"⩾̸"},{key:[110,103,101,115,59],value:"⩾̸"},{key:[110,103,115,105,109,59],value:"≵"},{key:[110,103,116,59],value:"≯"},{key:[110,103,116,114,59],value:"≯"},{key:[110,104,65,114,114,59],value:"⇎"},{key:[110,104,97,114,114,59],value:"↮"},{key:[110,104,112,97,114,59],value:"⫲"},{key:[110,105,59],value:"∋"},{key:[110,105,115,59],value:"⋼"},{key:[110,105,115,100,59],value:"⋺"},{key:[110,105,118,59],value:"∋"},{key:[110,106,99,121,59],value:"њ"},{key:[110,108,65,114,114,59],value:"⇍"},{key:[110,108,69,59],value:"≦̸"},{key:[110,108,97,114,114,59],value:"↚"},{key:[110,108,100,114,59],value:"‥"},{key:[110,108,101,59],value:"≰"},{key:[110,108,101,102,116,97,114,114,111,119,59],value:"↚"},{key:[110,108,101,102,116,114,105,103,104,116,97,114,114,111,119,59],value:"↮"},{key:[110,108,101,113,59],value:"≰"},{key:[110,108,101,113,113,59],value:"≦̸"},{key:[110,108,101,113,115,108,97,110,116,59],value:"⩽̸"},{key:[110,108,101,115,59],value:"⩽̸"},{key:[110,108,101,115,115,59],value:"≮"},{key:[110,108,115,105,109,59],value:"≴"},{key:[110,108,116,59],value:"≮"},{key:[110,108,116,114,105,59],value:"⋪"},{key:[110,108,116,114,105,101,59],value:"⋬"},{key:[110,109,105,100,59],value:"∤"},{key:[110,111,112,102,59],value:"𝕟"},{key:[110,111,116,59],value:"¬"},{key:[110,111,116,105,110,59],value:"∉"},{key:[110,111,116,105,110,69,59],value:"⋹̸"},{key:[110,111,116,105,110,100,111,116,59],value:"⋵̸"},{key:[110,111,116,105,110,118,97,59],value:"∉"},{key:[110,111,116,105,110,118,98,59],value:"⋷"},{key:[110,111,116,105,110,118,99,59],value:"⋶"},{key:[110,111,116,110,105,59],value:"∌"},{key:[110,111,116,110,105,118,97,59],value:"∌"},{key:[110,111,116,110,105,118,98,59],value:"⋾"},{key:[110,111,116,110,105,118,99,59],value:"⋽"},{key:[110,112,97,114,59],value:"∦"},{key:[110,112,97,114,97,108,108,101,108,59],value:"∦"},{key:[110,112,97,114,115,108,59],value:"⫽⃥"},{key:[110,112,97,114,116,59],value:"∂̸"},{key:[110,112,111,108,105,110,116,59],value:"⨔"},{key:[110,112,114,59],value:"⊀"},{key:[110,112,114,99,117,101,59],value:"⋠"},{key:[110,112,114,101,59],value:"⪯̸"},{key:[110,112,114,101,99,59],value:"⊀"},{key:[110,112,114,101,99,101,113,59],value:"⪯̸"},{key:[110,114,65,114,114,59],value:"⇏"},{key:[110,114,97,114,114,59],value:"↛"},{key:[110,114,97,114,114,99,59],value:"⤳̸"},{key:[110,114,97,114,114,119,59],value:"↝̸"},{key:[110,114,105,103,104,116,97,114,114,111,119,59],value:"↛"},{key:[110,114,116,114,105,59],value:"⋫"},{key:[110,114,116,114,105,101,59],value:"⋭"},{key:[110,115,99,59],value:"⊁"},{key:[110,115,99,99,117,101,59],value:"⋡"},{key:[110,115,99,101,59],value:"⪰̸"},{key:[110,115,99,114,59],value:"𝓃"},{key:[110,115,104,111,114,116,109,105,100,59],value:"∤"},{key:[110,115,104,111,114,116,112,97,114,97,108,108,101,108,59],value:"∦"},{key:[110,115,105,109,59],value:"≁"},{key:[110,115,105,109,101,59],value:"≄"},{key:[110,115,105,109,101,113,59],value:"≄"},{key:[110,115,109,105,100,59],value:"∤"},{key:[110,115,112,97,114,59],value:"∦"},{key:[110,115,113,115,117,98,101,59],value:"⋢"},{key:[110,115,113,115,117,112,101,59],value:"⋣"},{key:[110,115,117,98,59],value:"⊄"},{key:[110,115,117,98,69,59],value:"⫅̸"},{key:[110,115,117,98,101,59],value:"⊈"},{key:[110,115,117,98,115,101,116,59],value:"⊂⃒"},{key:[110,115,117,98,115,101,116,101,113,59],value:"⊈"},{key:[110,115,117,98,115,101,116,101,113,113,59],value:"⫅̸"},{key:[110,115,117,99,99,59],value:"⊁"},{key:[110,115,117,99,99,101,113,59],value:"⪰̸"},{key:[110,115,117,112,59],value:"⊅"},{key:[110,115,117,112,69,59],value:"⫆̸"},{key:[110,115,117,112,101,59],value:"⊉"},{key:[110,115,117,112,115,101,116,59],value:"⊃⃒"},{key:[110,115,117,112,115,101,116,101,113,59],value:"⊉"},{key:[110,115,117,112,115,101,116,101,113,113,59],value:"⫆̸"},{key:[110,116,103,108,59],value:"≹"},{key:[110,116,105,108,100,101,59],value:"ñ"},{key:[110,116,108,103,59],value:"≸"},{key:[110,116,114,105,97,110,103,108,101,108,101,102,116,59],value:"⋪"},{key:[110,116,114,105,97,110,103,108,101,108,101,102,116,101,113,59],value:"⋬"},{key:[110,116,114,105,97,110,103,108,101,114,105,103,104,116,59],value:"⋫"},{key:[110,116,114,105,97,110,103,108,101,114,105,103,104,116,101,113,59],value:"⋭"},{key:[110,117,59],value:"ν"},{key:[110,117,109,59],value:"#"},{key:[110,117,109,101,114,111,59],value:"№"},{key:[110,117,109,115,112,59],value:" "},{key:[110,118,68,97,115,104,59],value:"⊭"},{key:[110,118,72,97,114,114,59],value:"⤄"},{key:[110,118,97,112,59],value:"≍⃒"},{key:[110,118,100,97,115,104,59],value:"⊬"},{key:[110,118,103,101,59],value:"≥⃒"},{key:[110,118,103,116,59],value:">⃒"},{key:[110,118,105,110,102,105,110,59],value:"⧞"},{key:[110,118,108,65,114,114,59],value:"⤂"},{key:[110,118,108,101,59],value:"≤⃒"},{key:[110,118,108,116,59],value:"<⃒"},{key:[110,118,108,116,114,105,101,59],value:"⊴⃒"},{key:[110,118,114,65,114,114,59],value:"⤃"},{key:[110,118,114,116,114,105,101,59],value:"⊵⃒"},{key:[110,118,115,105,109,59],value:"∼⃒"},{key:[110,119,65,114,114,59],value:"⇖"},{key:[110,119,97,114,104,107,59],value:"⤣"},{key:[110,119,97,114,114,59],value:"↖"},{key:[110,119,97,114,114,111,119,59],value:"↖"},{key:[110,119,110,101,97,114,59],value:"⤧"},{key:[111,83,59],value:"Ⓢ"},{key:[111,97,99,117,116,101,59],value:"ó"},{key:[111,97,115,116,59],value:"⊛"},{key:[111,99,105,114,59],value:"⊚"},{key:[111,99,105,114,99,59],value:"ô"},{key:[111,99,121,59],value:"о"},{key:[111,100,97,115,104,59],value:"⊝"},{key:[111,100,98,108,97,99,59],value:"ő"},{key:[111,100,105,118,59],value:"⨸"},{key:[111,100,111,116,59],value:"⊙"},{key:[111,100,115,111,108,100,59],value:"⦼"},{key:[111,101,108,105,103,59],value:"œ"},{key:[111,102,99,105,114,59],value:"⦿"},{key:[111,102,114,59],value:"𝔬"},{key:[111,103,111,110,59],value:"˛"},{key:[111,103,114,97,118,101,59],value:"ò"},{key:[111,103,116,59],value:"⧁"},{key:[111,104,98,97,114,59],value:"⦵"},{key:[111,104,109,59],value:"Ω"},{key:[111,105,110,116,59],value:"∮"},{key:[111,108,97,114,114,59],value:"↺"},{key:[111,108,99,105,114,59],value:"⦾"},{key:[111,108,99,114,111,115,115,59],value:"⦻"},{key:[111,108,105,110,101,59],value:"‾"},{key:[111,108,116,59],value:"⧀"},{key:[111,109,97,99,114,59],value:"ō"},{key:[111,109,101,103,97,59],value:"ω"},{key:[111,109,105,99,114,111,110,59],value:"ο"},{key:[111,109,105,100,59],value:"⦶"},{key:[111,109,105,110,117,115,59],value:"⊖"},{key:[111,111,112,102,59],value:"𝕠"},{key:[111,112,97,114,59],value:"⦷"},{key:[111,112,101,114,112,59],value:"⦹"},{key:[111,112,108,117,115,59],value:"⊕"},{key:[111,114,59],value:"∨"},{key:[111,114,97,114,114,59],value:"↻"},{key:[111,114,100,59],value:"⩝"},{key:[111,114,100,101,114,59],value:"ℴ"},{key:[111,114,100,101,114,111,102,59],value:"ℴ"},{key:[111,114,100,102,59],value:"ª"},{key:[111,114,100,109,59],value:"º"},{key:[111,114,105,103,111,102,59],value:"⊶"},{key:[111,114,111,114,59],value:"⩖"},{key:[111,114,115,108,111,112,101,59],value:"⩗"},{key:[111,114,118,59],value:"⩛"},{key:[111,115,99,114,59],value:"ℴ"},{key:[111,115,108,97,115,104,59],value:"ø"},{key:[111,115,111,108,59],value:"⊘"},{key:[111,116,105,108,100,101,59],value:"õ"},{key:[111,116,105,109,101,115,59],value:"⊗"},{key:[111,116,105,109,101,115,97,115,59],value:"⨶"},{key:[111,117,109,108,59],value:"ö"},{key:[111,118,98,97,114,59],value:"⌽"},{key:[112,97,114,59],value:"∥"},{key:[112,97,114,97,59],value:"¶"},{key:[112,97,114,97,108,108,101,108,59],value:"∥"},{key:[112,97,114,115,105,109,59],value:"⫳"},{key:[112,97,114,115,108,59],value:"⫽"},{key:[112,97,114,116,59],value:"∂"},{key:[112,99,121,59],value:"п"},{key:[112,101,114,99,110,116,59],value:"%"},{key:[112,101,114,105,111,100,59],value:"."},{key:[112,101,114,109,105,108,59],value:"‰"},{key:[112,101,114,112,59],value:"⊥"},{key:[112,101,114,116,101,110,107,59],value:"‱"},{key:[112,102,114,59],value:"𝔭"},{key:[112,104,105,59],value:"φ"},{key:[112,104,105,118,59],value:"ϕ"},{key:[112,104,109,109,97,116,59],value:"ℳ"},{key:[112,104,111,110,101,59],value:"☎"},{key:[112,105,59],value:"π"},{key:[112,105,116,99,104,102,111,114,107,59],value:"⋔"},{key:[112,105,118,59],value:"ϖ"},{key:[112,108,97,110,99,107,59],value:"ℏ"},{key:[112,108,97,110,99,107,104,59],value:"ℎ"},{key:[112,108,97,110,107,118,59],value:"ℏ"},{key:[112,108,117,115,59],value:"+"},{key:[112,108,117,115,97,99,105,114,59],value:"⨣"},{key:[112,108,117,115,98,59],value:"⊞"},{key:[112,108,117,115,99,105,114,59],value:"⨢"},{key:[112,108,117,115,100,111,59],value:"∔"},{key:[112,108,117,115,100,117,59],value:"⨥"},{key:[112,108,117,115,101,59],value:"⩲"},{key:[112,108,117,115,109,110,59],value:"±"},{key:[112,108,117,115,115,105,109,59],value:"⨦"},{key:[112,108,117,115,116,119,111,59],value:"⨧"},{key:[112,109,59],value:"±"},{key:[112,111,105,110,116,105,110,116,59],value:"⨕"},{key:[112,111,112,102,59],value:"𝕡"},{key:[112,111,117,110,100,59],value:"£"},{key:[112,114,59],value:"≺"},{key:[112,114,69,59],value:"⪳"},{key:[112,114,97,112,59],value:"⪷"},{key:[112,114,99,117,101,59],value:"≼"},{key:[112,114,101,59],value:"⪯"},{key:[112,114,101,99,59],value:"≺"},{key:[112,114,101,99,97,112,112,114,111,120,59],value:"⪷"},{key:[112,114,101,99,99,117,114,108,121,101,113,59],value:"≼"},{key:[112,114,101,99,101,113,59],value:"⪯"},{key:[112,114,101,99,110,97,112,112,114,111,120,59],value:"⪹"},{key:[112,114,101,99,110,101,113,113,59],value:"⪵"},{key:[112,114,101,99,110,115,105,109,59],value:"⋨"},{key:[112,114,101,99,115,105,109,59],value:"≾"},{key:[112,114,105,109,101,59],value:"′"},{key:[112,114,105,109,101,115,59],value:"ℙ"},{key:[112,114,110,69,59],value:"⪵"},{key:[112,114,110,97,112,59],value:"⪹"},{key:[112,114,110,115,105,109,59],value:"⋨"},{key:[112,114,111,100,59],value:"∏"},{key:[112,114,111,102,97,108,97,114,59],value:"⌮"},{key:[112,114,111,102,108,105,110,101,59],value:"⌒"},{key:[112,114,111,102,115,117,114,102,59],value:"⌓"},{key:[112,114,111,112,59],value:"∝"},{key:[112,114,111,112,116,111,59],value:"∝"},{key:[112,114,115,105,109,59],value:"≾"},{key:[112,114,117,114,101,108,59],value:"⊰"},{key:[112,115,99,114,59],value:"𝓅"},{key:[112,115,105,59],value:"ψ"},{key:[112,117,110,99,115,112,59],value:" "},{key:[113,102,114,59],value:"𝔮"},{key:[113,105,110,116,59],value:"⨌"},{key:[113,111,112,102,59],value:"𝕢"},{key:[113,112,114,105,109,101,59],value:"⁗"},{key:[113,115,99,114,59],value:"𝓆"},{key:[113,117,97,116,101,114,110,105,111,110,115,59],value:"ℍ"},{key:[113,117,97,116,105,110,116,59],value:"⨖"},{key:[113,117,101,115,116,59],value:"?"},{key:[113,117,101,115,116,101,113,59],value:"≟"},{key:[113,117,111,116,59],value:'"'},{key:[114,65,97,114,114,59],value:"⇛"},{key:[114,65,114,114,59],value:"⇒"},{key:[114,65,116,97,105,108,59],value:"⤜"},{key:[114,66,97,114,114,59],value:"⤏"},{key:[114,72,97,114,59],value:"⥤"},{key:[114,97,99,101,59],value:"∽̱"},{key:[114,97,99,117,116,101,59],value:"ŕ"},{key:[114,97,100,105,99,59],value:"√"},{key:[114,97,101,109,112,116,121,118,59],value:"⦳"},{key:[114,97,110,103,59],value:"⟩"},{key:[114,97,110,103,100,59],value:"⦒"},{key:[114,97,110,103,101,59],value:"⦥"},{key:[114,97,110,103,108,101,59],value:"⟩"},{key:[114,97,113,117,111,59],value:"»"},{key:[114,97,114,114,59],value:"→"},{key:[114,97,114,114,97,112,59],value:"⥵"},{key:[114,97,114,114,98,59],value:"⇥"},{key:[114,97,114,114,98,102,115,59],value:"⤠"},{key:[114,97,114,114,99,59],value:"⤳"},{key:[114,97,114,114,102,115,59],value:"⤞"},{key:[114,97,114,114,104,107,59],value:"↪"},{key:[114,97,114,114,108,112,59],value:"↬"},{key:[114,97,114,114,112,108,59],value:"⥅"},{key:[114,97,114,114,115,105,109,59],value:"⥴"},{key:[114,97,114,114,116,108,59],value:"↣"},{key:[114,97,114,114,119,59],value:"↝"},{key:[114,97,116,97,105,108,59],value:"⤚"},{key:[114,97,116,105,111,59],value:"∶"},{key:[114,97,116,105,111,110,97,108,115,59],value:"ℚ"},{key:[114,98,97,114,114,59],value:"⤍"},{key:[114,98,98,114,107,59],value:"❳"},{key:[114,98,114,97,99,101,59],value:" }"},{key:[114,98,114,97,99,107,59],value:"]"},{key:[114,98,114,107,101,59],value:"⦌"},{key:[114,98,114,107,115,108,100,59],value:"⦎"},{key:[114,98,114,107,115,108,117,59],value:"⦐"},{key:[114,99,97,114,111,110,59],value:"ř"},{key:[114,99,101,100,105,108,59],value:"ŗ"},{key:[114,99,101,105,108,59],value:"⌉"},{key:[114,99,117,98,59],value:" }"},{key:[114,99,121,59],value:"р"},{key:[114,100,99,97,59],value:"⤷"},{key:[114,100,108,100,104,97,114,59],value:"⥩"},{key:[114,100,113,117,111,59],value:"”"},{key:[114,100,113,117,111,114,59],value:"”"},{key:[114,100,115,104,59],value:"↳"},{key:[114,101,97,108,59],value:"ℜ"},{key:[114,101,97,108,105,110,101,59],value:"ℛ"},{key:[114,101,97,108,112,97,114,116,59],value:"ℜ"},{key:[114,101,97,108,115,59],value:"ℝ"},{key:[114,101,99,116,59],value:"▭"},{key:[114,101,103,59],value:"®"},{key:[114,102,105,115,104,116,59],value:"⥽"},{key:[114,102,108,111,111,114,59],value:"⌋"},{key:[114,102,114,59],value:"𝔯"},{key:[114,104,97,114,100,59],value:"⇁"},{key:[114,104,97,114,117,59],value:"⇀"},{key:[114,104,97,114,117,108,59],value:"⥬"},{key:[114,104,111,59],value:"ρ"},{key:[114,104,111,118,59],value:"ϱ"},{key:[114,105,103,104,116,97,114,114,111,119,59],value:"→"},{key:[114,105,103,104,116,97,114,114,111,119,116,97,105,108,59],value:"↣"},{key:[114,105,103,104,116,104,97,114,112,111,111,110,100,111,119,110,59],value:"⇁"},{key:[114,105,103,104,116,104,97,114,112,111,111,110,117,112,59],value:"⇀"},{key:[114,105,103,104,116,108,101,102,116,97,114,114,111,119,115,59],value:"⇄"},{key:[114,105,103,104,116,108,101,102,116,104,97,114,112,111,111,110,115,59],value:"⇌"},{key:[114,105,103,104,116,114,105,103,104,116,97,114,114,111,119,115,59],value:"⇉"},{key:[114,105,103,104,116,115,113,117,105,103,97,114,114,111,119,59],value:"↝"},{key:[114,105,103,104,116,116,104,114,101,101,116,105,109,101,115,59],value:"⋌"},{key:[114,105,110,103,59],value:"˚"},{key:[114,105,115,105,110,103,100,111,116,115,101,113,59],value:"≓"},{key:[114,108,97,114,114,59],value:"⇄"},{key:[114,108,104,97,114,59],value:"⇌"},{key:[114,108,109,59],value:"‏"},{key:[114,109,111,117,115,116,59],value:"⎱"},{key:[114,109,111,117,115,116,97,99,104,101,59],value:"⎱"},{key:[114,110,109,105,100,59],value:"⫮"},{key:[114,111,97,110,103,59],value:"⟭"},{key:[114,111,97,114,114,59],value:"⇾"},{key:[114,111,98,114,107,59],value:"⟧"},{key:[114,111,112,97,114,59],value:"⦆"},{key:[114,111,112,102,59],value:"𝕣"},{key:[114,111,112,108,117,115,59],value:"⨮"},{key:[114,111,116,105,109,101,115,59],value:"⨵"},{key:[114,112,97,114,59],value:")"},{key:[114,112,97,114,103,116,59],value:"⦔"},{key:[114,112,112,111,108,105,110,116,59],value:"⨒"},{key:[114,114,97,114,114,59],value:"⇉"},{key:[114,115,97,113,117,111,59],value:"›"},{key:[114,115,99,114,59],value:"𝓇"},{key:[114,115,104,59],value:"↱"},{key:[114,115,113,98,59],value:"]"},{key:[114,115,113,117,111,59],value:"’"},{key:[114,115,113,117,111,114,59],value:"’"},{key:[114,116,104,114,101,101,59],value:"⋌"},{key:[114,116,105,109,101,115,59],value:"⋊"},{key:[114,116,114,105,59],value:"▹"},{key:[114,116,114,105,101,59],value:"⊵"},{key:[114,116,114,105,102,59],value:"▸"},{key:[114,116,114,105,108,116,114,105,59],value:"⧎"},{key:[114,117,108,117,104,97,114,59],value:"⥨"},{key:[114,120,59],value:"℞"},{key:[115,97,99,117,116,101,59],value:"ś"},{key:[115,98,113,117,111,59],value:"‚"},{key:[115,99,59],value:"≻"},{key:[115,99,69,59],value:"⪴"},{key:[115,99,97,112,59],value:"⪸"},{key:[115,99,97,114,111,110,59],value:"š"},{key:[115,99,99,117,101,59],value:"≽"},{key:[115,99,101,59],value:"⪰"},{key:[115,99,101,100,105,108,59],value:"ş"},{key:[115,99,105,114,99,59],value:"ŝ"},{key:[115,99,110,69,59],value:"⪶"},{key:[115,99,110,97,112,59],value:"⪺"},{key:[115,99,110,115,105,109,59],value:"⋩"},{key:[115,99,112,111,108,105,110,116,59],value:"⨓"},{key:[115,99,115,105,109,59],value:"≿"},{key:[115,99,121,59],value:"с"},{key:[115,100,111,116,59],value:"⋅"},{key:[115,100,111,116,98,59],value:"⊡"},{key:[115,100,111,116,101,59],value:"⩦"},{key:[115,101,65,114,114,59],value:"⇘"},{key:[115,101,97,114,104,107,59],value:"⤥"},{key:[115,101,97,114,114,59],value:"↘"},{key:[115,101,97,114,114,111,119,59],value:"↘"},{key:[115,101,99,116,59],value:"§"},{key:[115,101,109,105,59],value:";"},{key:[115,101,115,119,97,114,59],value:"⤩"},{key:[115,101,116,109,105,110,117,115,59],value:"∖"},{key:[115,101,116,109,110,59],value:"∖"},{key:[115,101,120,116,59],value:"✶"},{key:[115,102,114,59],value:"𝔰"},{key:[115,102,114,111,119,110,59],value:"⌢"},{key:[115,104,97,114,112,59],value:"♯"},{key:[115,104,99,104,99,121,59],value:"щ"},{key:[115,104,99,121,59],value:"ш"},{key:[115,104,111,114,116,109,105,100,59],value:"∣"},{key:[115,104,111,114,116,112,97,114,97,108,108,101,108,59],value:"∥"},{key:[115,104,121,59],value:"­"},{key:[115,105,103,109,97,59],value:"σ"},{key:[115,105,103,109,97,102,59],value:"ς"},{key:[115,105,103,109,97,118,59],value:"ς"},{key:[115,105,109,59],value:"∼"},{key:[115,105,109,100,111,116,59],value:"⩪"},{key:[115,105,109,101,59],value:"≃"},{key:[115,105,109,101,113,59],value:"≃"},{key:[115,105,109,103,59],value:"⪞"},{key:[115,105,109,103,69,59],value:"⪠"},{key:[115,105,109,108,59],value:"⪝"},{key:[115,105,109,108,69,59],value:"⪟"},{key:[115,105,109,110,101,59],value:"≆"},{key:[115,105,109,112,108,117,115,59],value:"⨤"},{key:[115,105,109,114,97,114,114,59],value:"⥲"},{key:[115,108,97,114,114,59],value:"←"},{key:[115,109,97,108,108,115,101,116,109,105,110,117,115,59],value:"∖"},{key:[115,109,97,115,104,112,59],value:"⨳"},{key:[115,109,101,112,97,114,115,108,59],value:"⧤"},{key:[115,109,105,100,59],value:"∣"},{key:[115,109,105,108,101,59],value:"⌣"},{key:[115,109,116,59],value:"⪪"},{key:[115,109,116,101,59],value:"⪬"},{key:[115,109,116,101,115,59],value:"⪬︀"},{key:[115,111,102,116,99,121,59],value:"ь"},{key:[115,111,108,59],value:"/"},{key:[115,111,108,98,59],value:"⧄"},{key:[115,111,108,98,97,114,59],value:"⌿"},{key:[115,111,112,102,59],value:"𝕤"},{key:[115,112,97,100,101,115,59],value:"♠"},{key:[115,112,97,100,101,115,117,105,116,59],value:"♠"},{key:[115,112,97,114,59],value:"∥"},{key:[115,113,99,97,112,59],value:"⊓"},{key:[115,113,99,97,112,115,59],value:"⊓︀"},{key:[115,113,99,117,112,59],value:"⊔"},{key:[115,113,99,117,112,115,59],value:"⊔︀"},{key:[115,113,115,117,98,59],value:"⊏"},{key:[115,113,115,117,98,101,59],value:"⊑"},{key:[115,113,115,117,98,115,101,116,59],value:"⊏"},{key:[115,113,115,117,98,115,101,116,101,113,59],value:"⊑"},{key:[115,113,115,117,112,59],value:"⊐"},{key:[115,113,115,117,112,101,59],value:"⊒"},{key:[115,113,115,117,112,115,101,116,59],value:"⊐"},{key:[115,113,115,117,112,115,101,116,101,113,59],value:"⊒"},{key:[115,113,117,59],value:"□"},{key:[115,113,117,97,114,101,59],value:"□"},{key:[115,113,117,97,114,102,59],value:"▪"},{key:[115,113,117,102,59],value:"▪"},{key:[115,114,97,114,114,59],value:"→"},{key:[115,115,99,114,59],value:"𝓈"},{key:[115,115,101,116,109,110,59],value:"∖"},{key:[115,115,109,105,108,101,59],value:"⌣"},{key:[115,115,116,97,114,102,59],value:"⋆"},{key:[115,116,97,114,59],value:"☆"},{key:[115,116,97,114,102,59],value:"★"},{key:[115,116,114,97,105,103,104,116,101,112,115,105,108,111,110,59],value:"ϵ"},{key:[115,116,114,97,105,103,104,116,112,104,105,59],value:"ϕ"},{key:[115,116,114,110,115,59],value:"¯"},{key:[115,117,98,59],value:"⊂"},{key:[115,117,98,69,59],value:"⫅"},{key:[115,117,98,100,111,116,59],value:"⪽"},{key:[115,117,98,101,59],value:"⊆"},{key:[115,117,98,101,100,111,116,59],value:"⫃"},{key:[115,117,98,109,117,108,116,59],value:"⫁"},{key:[115,117,98,110,69,59],value:"⫋"},{key:[115,117,98,110,101,59],value:"⊊"},{key:[115,117,98,112,108,117,115,59],value:"⪿"},{key:[115,117,98,114,97,114,114,59],value:"⥹"},{key:[115,117,98,115,101,116,59],value:"⊂"},{key:[115,117,98,115,101,116,101,113,59],value:"⊆"},{key:[115,117,98,115,101,116,101,113,113,59],value:"⫅"},{key:[115,117,98,115,101,116,110,101,113,59],value:"⊊"},{key:[115,117,98,115,101,116,110,101,113,113,59],value:"⫋"},{key:[115,117,98,115,105,109,59],value:"⫇"},{key:[115,117,98,115,117,98,59],value:"⫕"},{key:[115,117,98,115,117,112,59],value:"⫓"},{key:[115,117,99,99,59],value:"≻"},{key:[115,117,99,99,97,112,112,114,111,120,59],value:"⪸"},{key:[115,117,99,99,99,117,114,108,121,101,113,59],value:"≽"},{key:[115,117,99,99,101,113,59],value:"⪰"},{key:[115,117,99,99,110,97,112,112,114,111,120,59],value:"⪺"},{key:[115,117,99,99,110,101,113,113,59],value:"⪶"},{key:[115,117,99,99,110,115,105,109,59],value:"⋩"},{key:[115,117,99,99,115,105,109,59],value:"≿"},{key:[115,117,109,59],value:"∑"},{key:[115,117,110,103,59],value:"♪"},{key:[115,117,112,49,59],value:"¹"},{key:[115,117,112,50,59],value:"²"},{key:[115,117,112,51,59],value:"³"},{key:[115,117,112,59],value:"⊃"},{key:[115,117,112,69,59],value:"⫆"},{key:[115,117,112,100,111,116,59],value:"⪾"},{key:[115,117,112,100,115,117,98,59],value:"⫘"},{key:[115,117,112,101,59],value:"⊇"},{key:[115,117,112,101,100,111,116,59],value:"⫄"},{key:[115,117,112,104,115,111,108,59],value:"⟉"},{key:[115,117,112,104,115,117,98,59],value:"⫗"},{key:[115,117,112,108,97,114,114,59],value:"⥻"},{key:[115,117,112,109,117,108,116,59],value:"⫂"},{key:[115,117,112,110,69,59],value:"⫌"},{key:[115,117,112,110,101,59],value:"⊋"},{key:[115,117,112,112,108,117,115,59],value:"⫀"},{key:[115,117,112,115,101,116,59],value:"⊃"},{key:[115,117,112,115,101,116,101,113,59],value:"⊇"},{key:[115,117,112,115,101,116,101,113,113,59],value:"⫆"},{key:[115,117,112,115,101,116,110,101,113,59],value:"⊋"},{key:[115,117,112,115,101,116,110,101,113,113,59],value:"⫌"},{key:[115,117,112,115,105,109,59],value:"⫈"},{key:[115,117,112,115,117,98,59],value:"⫔"},{key:[115,117,112,115,117,112,59],value:"⫖"},{key:[115,119,65,114,114,59],value:"⇙"},{key:[115,119,97,114,104,107,59],value:"⤦"},{key:[115,119,97,114,114,59],value:"↙"},{key:[115,119,97,114,114,111,119,59],value:"↙"},{key:[115,119,110,119,97,114,59],value:"⤪"},{key:[115,122,108,105,103,59],value:"ß"},{key:[116,97,114,103,101,116,59],value:"⌖"},{key:[116,97,117,59],value:"τ"},{key:[116,98,114,107,59],value:"⎴"},{key:[116,99,97,114,111,110,59],value:"ť"},{key:[116,99,101,100,105,108,59],value:"ţ"},{key:[116,99,121,59],value:"т"},{key:[116,100,111,116,59],value:"⃛"},{key:[116,101,108,114,101,99,59],value:"⌕"},{key:[116,102,114,59],value:"𝔱"},{key:[116,104,101,114,101,52,59],value:"∴"},{key:[116,104,101,114,101,102,111,114,101,59],value:"∴"},{key:[116,104,101,116,97,59],value:"θ"},{key:[116,104,101,116,97,115,121,109,59],value:"ϑ"},{key:[116,104,101,116,97,118,59],value:"ϑ"},{key:[116,104,105,99,107,97,112,112,114,111,120,59],value:"≈"},{key:[116,104,105,99,107,115,105,109,59],value:"∼"},{key:[116,104,105,110,115,112,59],value:" "},{key:[116,104,107,97,112,59],value:"≈"},{key:[116,104,107,115,105,109,59],value:"∼"},{key:[116,104,111,114,110,59],value:"þ"},{key:[116,105,108,100,101,59],value:"˜"},{key:[116,105,109,101,115,59],value:"×"},{key:[116,105,109,101,115,98,59],value:"⊠"},{key:[116,105,109,101,115,98,97,114,59],value:"⨱"},{key:[116,105,109,101,115,100,59],value:"⨰"},{key:[116,105,110,116,59],value:"∭"},{key:[116,111,101,97,59],value:"⤨"},{key:[116,111,112,59],value:"⊤"},{key:[116,111,112,98,111,116,59],value:"⌶"},{key:[116,111,112,99,105,114,59],value:"⫱"},{key:[116,111,112,102,59],value:"𝕥"},{key:[116,111,112,102,111,114,107,59],value:"⫚"},{key:[116,111,115,97,59],value:"⤩"},{key:[116,112,114,105,109,101,59],value:"‴"},{key:[116,114,97,100,101,59],value:"™"},{key:[116,114,105,97,110,103,108,101,59],value:"▵"},{key:[116,114,105,97,110,103,108,101,100,111,119,110,59],value:"▿"},{key:[116,114,105,97,110,103,108,101,108,101,102,116,59],value:"◃"},{key:[116,114,105,97,110,103,108,101,108,101,102,116,101,113,59],value:"⊴"},{key:[116,114,105,97,110,103,108,101,113,59],value:"≜"},{key:[116,114,105,97,110,103,108,101,114,105,103,104,116,59],value:"▹"},{key:[116,114,105,97,110,103,108,101,114,105,103,104,116,101,113,59],value:"⊵"},{key:[116,114,105,100,111,116,59],value:"◬"},{key:[116,114,105,101,59],value:"≜"},{key:[116,114,105,109,105,110,117,115,59],value:"⨺"},{key:[116,114,105,112,108,117,115,59],value:"⨹"},{key:[116,114,105,115,98,59],value:"⧍"},{key:[116,114,105,116,105,109,101,59],value:"⨻"},{key:[116,114,112,101,122,105,117,109,59],value:"⏢"},{key:[116,115,99,114,59],value:"𝓉"},{key:[116,115,99,121,59],value:"ц"},{key:[116,115,104,99,121,59],value:"ћ"},{key:[116,115,116,114,111,107,59],value:"ŧ"},{key:[116,119,105,120,116,59],value:"≬"},{key:[116,119,111,104,101,97,100,108,101,102,116,97,114,114,111,119,59],value:"↞"},{key:[116,119,111,104,101,97,100,114,105,103,104,116,97,114,114,111,119,59],value:"↠"},{key:[117,65,114,114,59],value:"⇑"},{key:[117,72,97,114,59],value:"⥣"},{key:[117,97,99,117,116,101,59],value:"ú"},{key:[117,97,114,114,59],value:"↑"},{key:[117,98,114,99,121,59],value:"ў"},{key:[117,98,114,101,118,101,59],value:"ŭ"},{key:[117,99,105,114,99,59],value:"û"},{key:[117,99,121,59],value:"у"},{key:[117,100,97,114,114,59],value:"⇅"},{key:[117,100,98,108,97,99,59],value:"ű"},{key:[117,100,104,97,114,59],value:"⥮"},{key:[117,102,105,115,104,116,59],value:"⥾"},{key:[117,102,114,59],value:"𝔲"},{key:[117,103,114,97,118,101,59],value:"ù"},{key:[117,104,97,114,108,59],value:"↿"},{key:[117,104,97,114,114,59],value:"↾"},{key:[117,104,98,108,107,59],value:"▀"},{key:[117,108,99,111,114,110,59],value:"⌜"},{key:[117,108,99,111,114,110,101,114,59],value:"⌜"},{key:[117,108,99,114,111,112,59],value:"⌏"},{key:[117,108,116,114,105,59],value:"◸"},{key:[117,109,97,99,114,59],value:"ū"},{key:[117,109,108,59],value:"¨"},{key:[117,111,103,111,110,59],value:"ų"},{key:[117,111,112,102,59],value:"𝕦"},{key:[117,112,97,114,114,111,119,59],value:"↑"},{key:[117,112,100,111,119,110,97,114,114,111,119,59],value:"↕"},{key:[117,112,104,97,114,112,111,111,110,108,101,102,116,59],value:"↿"},{key:[117,112,104,97,114,112,111,111,110,114,105,103,104,116,59],value:"↾"},{key:[117,112,108,117,115,59],value:"⊎"},{key:[117,112,115,105,59],value:"υ"},{key:[117,112,115,105,104,59],value:"ϒ"},{key:[117,112,115,105,108,111,110,59],value:"υ"},{key:[117,112,117,112,97,114,114,111,119,115,59],value:"⇈"},{key:[117,114,99,111,114,110,59],value:"⌝"},{key:[117,114,99,111,114,110,101,114,59],value:"⌝"},{key:[117,114,99,114,111,112,59],value:"⌎"},{key:[117,114,105,110,103,59],value:"ů"},{key:[117,114,116,114,105,59],value:"◹"},{key:[117,115,99,114,59],value:"𝓊"},{key:[117,116,100,111,116,59],value:"⋰"},{key:[117,116,105,108,100,101,59],value:"ũ"},{key:[117,116,114,105,59],value:"▵"},{key:[117,116,114,105,102,59],value:"▴"},{key:[117,117,97,114,114,59],value:"⇈"},{key:[117,117,109,108,59],value:"ü"},{key:[117,119,97,110,103,108,101,59],value:"⦧"},{key:[118,65,114,114,59],value:"⇕"},{key:[118,66,97,114,59],value:"⫨"},{key:[118,66,97,114,118,59],value:"⫩"},{key:[118,68,97,115,104,59],value:"⊨"},{key:[118,97,110,103,114,116,59],value:"⦜"},{key:[118,97,114,101,112,115,105,108,111,110,59],value:"ϵ"},{key:[118,97,114,107,97,112,112,97,59],value:"ϰ"},{key:[118,97,114,110,111,116,104,105,110,103,59],value:"∅"},{key:[118,97,114,112,104,105,59],value:"ϕ"},{key:[118,97,114,112,105,59],value:"ϖ"},{key:[118,97,114,112,114,111,112,116,111,59],value:"∝"},{key:[118,97,114,114,59],value:"↕"},{key:[118,97,114,114,104,111,59],value:"ϱ"},{key:[118,97,114,115,105,103,109,97,59],value:"ς"},{key:[118,97,114,115,117,98,115,101,116,110,101,113,59],value:"⊊︀"},{key:[118,97,114,115,117,98,115,101,116,110,101,113,113,59],value:"⫋︀"},{key:[118,97,114,115,117,112,115,101,116,110,101,113,59],value:"⊋︀"},{key:[118,97,114,115,117,112,115,101,116,110,101,113,113,59],value:"⫌︀"},{key:[118,97,114,116,104,101,116,97,59],value:"ϑ"},{key:[118,97,114,116,114,105,97,110,103,108,101,108,101,102,116,59],value:"⊲"},{key:[118,97,114,116,114,105,97,110,103,108,101,114,105,103,104,116,59],value:"⊳"},{key:[118,99,121,59],value:"в"},{key:[118,100,97,115,104,59],value:"⊢"},{key:[118,101,101,59],value:"∨"},{key:[118,101,101,98,97,114,59],value:"⊻"},{key:[118,101,101,101,113,59],value:"≚"},{key:[118,101,108,108,105,112,59],value:"⋮"},{key:[118,101,114,98,97,114,59],value:"|"},{key:[118,101,114,116,59],value:"|"},{key:[118,102,114,59],value:"𝔳"},{key:[118,108,116,114,105,59],value:"⊲"},{key:[118,110,115,117,98,59],value:"⊂⃒"},{key:[118,110,115,117,112,59],value:"⊃⃒"},{key:[118,111,112,102,59],value:"𝕧"},{key:[118,112,114,111,112,59],value:"∝"},{key:[118,114,116,114,105,59],value:"⊳"},{key:[118,115,99,114,59],value:"𝓋"},{key:[118,115,117,98,110,69,59],value:"⫋︀"},{key:[118,115,117,98,110,101,59],value:"⊊︀"},{key:[118,115,117,112,110,69,59],value:"⫌︀"},{key:[118,115,117,112,110,101,59],value:"⊋︀"},{key:[118,122,105,103,122,97,103,59],value:"⦚"},{key:[119,99,105,114,99,59],value:"ŵ"},{key:[119,101,100,98,97,114,59],value:"⩟"},{key:[119,101,100,103,101,59],value:"∧"},{key:[119,101,100,103,101,113,59],value:"≙"},{key:[119,101,105,101,114,112,59],value:"℘"},{key:[119,102,114,59],value:"𝔴"},{key:[119,111,112,102,59],value:"𝕨"},{key:[119,112,59],value:"℘"},{key:[119,114,59],value:"≀"},{key:[119,114,101,97,116,104,59],value:"≀"},{key:[119,115,99,114,59],value:"𝓌"},{key:[120,99,97,112,59],value:"⋂"},{key:[120,99,105,114,99,59],value:"◯"},{key:[120,99,117,112,59],value:"⋃"},{key:[120,100,116,114,105,59],value:"▽"},{key:[120,102,114,59],value:"𝔵"},{key:[120,104,65,114,114,59],value:"⟺"},{key:[120,104,97,114,114,59],value:"⟷"},{key:[120,105,59],value:"ξ"},{key:[120,108,65,114,114,59],value:"⟸"},{key:[120,108,97,114,114,59],value:"⟵"},{key:[120,109,97,112,59],value:"⟼"},{key:[120,110,105,115,59],value:"⋻"},{key:[120,111,100,111,116,59],value:"⨀"},{key:[120,111,112,102,59],value:"𝕩"},{key:[120,111,112,108,117,115,59],value:"⨁"},{key:[120,111,116,105,109,101,59],value:"⨂"},{key:[120,114,65,114,114,59],value:"⟹"},{key:[120,114,97,114,114,59],value:"⟶"},{key:[120,115,99,114,59],value:"𝓍"},{key:[120,115,113,99,117,112,59],value:"⨆"},{key:[120,117,112,108,117,115,59],value:"⨄"},{key:[120,117,116,114,105,59],value:"△"},{key:[120,118,101,101,59],value:"⋁"},{key:[120,119,101,100,103,101,59],value:"⋀"},{key:[121,97,99,117,116,101,59],value:"ý"},{key:[121,97,99,121,59],value:"я"},{key:[121,99,105,114,99,59],value:"ŷ"},{key:[121,99,121,59],value:"ы"},{key:[121,101,110,59],value:"¥"},{key:[121,102,114,59],value:"𝔶"},{key:[121,105,99,121,59],value:"ї"},{key:[121,111,112,102,59],value:"𝕪"},{key:[121,115,99,114,59],value:"𝓎"},{key:[121,117,99,121,59],value:"ю"},{key:[121,117,109,108,59],value:"ÿ"},{key:[122,97,99,117,116,101,59],value:"ź"},{key:[122,99,97,114,111,110,59],value:"ž"},{key:[122,99,121,59],value:"з"},{key:[122,100,111,116,59],value:"ż"},{key:[122,101,101,116,114,102,59],value:"ℨ"},{key:[122,101,116,97,59],value:"ζ"},{key:[122,102,114,59],value:"𝔷"},{key:[122,104,99,121,59],value:"ж"},{key:[122,105,103,114,97,114,114,59],value:"⇝"},{key:[122,111,112,102,59],value:"𝕫"},{key:[122,115,99,114,59],value:"𝓏"},{key:[122,119,106,59],value:"‍"},{key:[122,119,110,106,59],value:"‌"}];var UnicodePcCodePoint,UnicodePdCodePoint,UnicodePeCodePoint,UnicodePfCodePoint,UnicodePiCodePoint,UnicodePoCodePoint,UnicodePsCodePoint,UnicodeZsCodePoint,VirtualCodePoint;function createCodePointSearcher(e){const n=[...new Set(e)].sort(((e,n)=>e-n)),t=n.length;if(t<8)return[e=>{for(let t=0;t<n.length;++t)if(e===n[t])return!0;return!1},[...n]];const i=[];for(let e,o=0;o<t;o+=e){const a=n[o];for(e=1;o+e<t&&!(n[o+e]>a+e);++e);i.push(a,a+e)}if(1.5*i.length<t){const e=i.length;return e<8?[n=>{for(let t=0;t<e;t+=2){const e=i[t],o=i[t+1];if(e<=n&&n<o)return!0}return!1},n]:[n=>{let t=0,o=e;for(;t<o;){const e=t+o>>>1;n<i[e]?o=e:t=e+1}return Boolean(1&o)},n]}return[e=>{let i=0,o=t;for(;i<o;){const t=i+o>>>1;e<n[t]?o=t:i=t+1}return!(o<=0)&&n[o-1]===e},[...n]]}function collectCodePointsFromEnum(e){return Object.values(e).filter((e=>"number"==typeof e))}!function(e){e[e.LOW_LINE=95]="LOW_LINE",e[e.UNDERTIE=8255]="UNDERTIE",e[e.CHARACTER_TIE=8256]="CHARACTER_TIE",e[e.INVERTED_UNDERTIE=8276]="INVERTED_UNDERTIE",e[e.PRESENTATION_FORM_FOR_VERTICAL_LOW_LINE=65075]="PRESENTATION_FORM_FOR_VERTICAL_LOW_LINE",e[e.PRESENTATION_FORM_FOR_VERTICAL_WAVY_LOW_LINE=65076]="PRESENTATION_FORM_FOR_VERTICAL_WAVY_LOW_LINE",e[e.DASHED_LOW_LINE=65101]="DASHED_LOW_LINE",e[e.CENTRELINE_LOW_LINE=65102]="CENTRELINE_LOW_LINE",e[e.WAVY_LOW_LINE=65103]="WAVY_LOW_LINE",e[e.FULLWIDTH_LOW_LINE=65343]="FULLWIDTH_LOW_LINE"}(UnicodePcCodePoint||(UnicodePcCodePoint={})),function(e){e[e.HYPHEN_MINUS=45]="HYPHEN_MINUS",e[e.ARMENIAN_HYPHEN=1418]="ARMENIAN_HYPHEN",e[e.HEBREW_PUNCTUATION_MAQAF=1470]="HEBREW_PUNCTUATION_MAQAF",e[e.CANADIAN_SYLLABICS_HYPHEN=5120]="CANADIAN_SYLLABICS_HYPHEN",e[e.MONGOLIAN_TODO_SOFT_HYPHEN=6150]="MONGOLIAN_TODO_SOFT_HYPHEN",e[e.HYPHEN=8208]="HYPHEN",e[e.NON_BREAKING_HYPHEN=8209]="NON_BREAKING_HYPHEN",e[e.FIGURE_DASH=8210]="FIGURE_DASH",e[e.EN_DASH=8211]="EN_DASH",e[e.EM_DASH=8212]="EM_DASH",e[e.HORIZONTAL_BAR=8213]="HORIZONTAL_BAR",e[e.DOUBLE_OBLIQUE_HYPHEN=11799]="DOUBLE_OBLIQUE_HYPHEN",e[e.HYPHEN_WITH_DIAERESIS=11802]="HYPHEN_WITH_DIAERESIS",e[e.TWO_EM_DASH=11834]="TWO_EM_DASH",e[e.THREE_EM_DASH=11835]="THREE_EM_DASH",e[e.DOUBLE_HYPHEN=11840]="DOUBLE_HYPHEN",e[e.WAVE_DASH=12316]="WAVE_DASH",e[e.WAVY_DASH=12336]="WAVY_DASH",e[e.KATAKANA_HIRAGANA_DOUBLE_HYPHEN=12448]="KATAKANA_HIRAGANA_DOUBLE_HYPHEN",e[e.PRESENTATION_FORM_FOR_VERTICAL_EM_DASH=65073]="PRESENTATION_FORM_FOR_VERTICAL_EM_DASH",e[e.PRESENTATION_FORM_FOR_VERTICAL_EN_DASH=65074]="PRESENTATION_FORM_FOR_VERTICAL_EN_DASH",e[e.SMALL_EM_DASH=65112]="SMALL_EM_DASH",e[e.SMALL_HYPHEN_MINUS=65123]="SMALL_HYPHEN_MINUS",e[e.FULLWIDTH_HYPHEN_MINUS=65293]="FULLWIDTH_HYPHEN_MINUS",e[e.YEZIDI_HYPHENATION_MARK=69293]="YEZIDI_HYPHENATION_MARK"}(UnicodePdCodePoint||(UnicodePdCodePoint={})),function(e){e[e.RIGHT_PARENTHESIS=41]="RIGHT_PARENTHESIS",e[e.RIGHT_SQUARE_BRACKET=93]="RIGHT_SQUARE_BRACKET",e[e.RIGHT_CURLY_BRACKET=125]="RIGHT_CURLY_BRACKET",e[e.TIBETAN_MARK_GUG_RTAGS_GYAS=3899]="TIBETAN_MARK_GUG_RTAGS_GYAS",e[e.TIBETAN_MARK_ANG_KHANG_GYAS=3901]="TIBETAN_MARK_ANG_KHANG_GYAS",e[e.OGHAM_REVERSED_FEATHER_MARK=5788]="OGHAM_REVERSED_FEATHER_MARK",e[e.RIGHT_SQUARE_BRACKET_WITH_QUILL=8262]="RIGHT_SQUARE_BRACKET_WITH_QUILL",e[e.SUPERSCRIPT_RIGHT_PARENTHESIS=8318]="SUPERSCRIPT_RIGHT_PARENTHESIS",e[e.SUBSCRIPT_RIGHT_PARENTHESIS=8334]="SUBSCRIPT_RIGHT_PARENTHESIS",e[e.RIGHT_CEILING=8969]="RIGHT_CEILING",e[e.RIGHT_FLOOR=8971]="RIGHT_FLOOR",e[e.RIGHT_POINTING_ANGLE_BRACKET=9002]="RIGHT_POINTING_ANGLE_BRACKET",e[e.MEDIUM_RIGHT_PARENTHESIS_ORNAMENT=10089]="MEDIUM_RIGHT_PARENTHESIS_ORNAMENT",e[e.MEDIUM_FLATTENED_RIGHT_PARENTHESIS_ORNAMENT=10091]="MEDIUM_FLATTENED_RIGHT_PARENTHESIS_ORNAMENT",e[e.MEDIUM_RIGHT_POINTING_ANGLE_BRACKET_ORNAMENT=10093]="MEDIUM_RIGHT_POINTING_ANGLE_BRACKET_ORNAMENT",e[e.HEAVY_RIGHT_POINTING_ANGLE_QUOTATION_MARK_ORNAMENT=10095]="HEAVY_RIGHT_POINTING_ANGLE_QUOTATION_MARK_ORNAMENT",e[e.HEAVY_RIGHT_POINTING_ANGLE_BRACKET_ORNAMENT=10097]="HEAVY_RIGHT_POINTING_ANGLE_BRACKET_ORNAMENT",e[e.LIGHT_RIGHT_TORTOISE_SHELL_BRACKET_ORNAMENT=10099]="LIGHT_RIGHT_TORTOISE_SHELL_BRACKET_ORNAMENT",e[e.MEDIUM_RIGHT_CURLY_BRACKET_ORNAMENT=10101]="MEDIUM_RIGHT_CURLY_BRACKET_ORNAMENT",e[e.RIGHT_S_SHAPED_BAG_DELIMITER=10182]="RIGHT_S_SHAPED_BAG_DELIMITER",e[e.MATHEMATICAL_RIGHT_WHITE_SQUARE_BRACKET=10215]="MATHEMATICAL_RIGHT_WHITE_SQUARE_BRACKET",e[e.MATHEMATICAL_RIGHT_ANGLE_BRACKET=10217]="MATHEMATICAL_RIGHT_ANGLE_BRACKET",e[e.MATHEMATICAL_RIGHT_DOUBLE_ANGLE_BRACKET=10219]="MATHEMATICAL_RIGHT_DOUBLE_ANGLE_BRACKET",e[e.MATHEMATICAL_RIGHT_WHITE_TORTOISE_SHELL_BRACKET=10221]="MATHEMATICAL_RIGHT_WHITE_TORTOISE_SHELL_BRACKET",e[e.MATHEMATICAL_RIGHT_FLATTENED_PARENTHESIS=10223]="MATHEMATICAL_RIGHT_FLATTENED_PARENTHESIS",e[e.RIGHT_WHITE_CURLY_BRACKET=10628]="RIGHT_WHITE_CURLY_BRACKET",e[e.RIGHT_WHITE_PARENTHESIS=10630]="RIGHT_WHITE_PARENTHESIS",e[e.Z_NOTATION_RIGHT_IMAGE_BRACKET=10632]="Z_NOTATION_RIGHT_IMAGE_BRACKET",e[e.Z_NOTATION_RIGHT_BINDING_BRACKET=10634]="Z_NOTATION_RIGHT_BINDING_BRACKET",e[e.RIGHT_SQUARE_BRACKET_WITH_UNDERBAR=10636]="RIGHT_SQUARE_BRACKET_WITH_UNDERBAR",e[e.RIGHT_SQUARE_BRACKET_WITH_TICK_IN_BOTTOM_CORNER=10638]="RIGHT_SQUARE_BRACKET_WITH_TICK_IN_BOTTOM_CORNER",e[e.RIGHT_SQUARE_BRACKET_WITH_TICK_IN_TOP_CORNER=10640]="RIGHT_SQUARE_BRACKET_WITH_TICK_IN_TOP_CORNER",e[e.RIGHT_ANGLE_BRACKET_WITH_DOT=10642]="RIGHT_ANGLE_BRACKET_WITH_DOT",e[e.RIGHT_ARC_GREATER_THAN_BRACKET=10644]="RIGHT_ARC_GREATER_THAN_BRACKET",e[e.DOUBLE_RIGHT_ARC_LESS_THAN_BRACKET=10646]="DOUBLE_RIGHT_ARC_LESS_THAN_BRACKET",e[e.RIGHT_BLACK_TORTOISE_SHELL_BRACKET=10648]="RIGHT_BLACK_TORTOISE_SHELL_BRACKET",e[e.RIGHT_WIGGLY_FENCE=10713]="RIGHT_WIGGLY_FENCE",e[e.RIGHT_DOUBLE_WIGGLY_FENCE=10715]="RIGHT_DOUBLE_WIGGLY_FENCE",e[e.RIGHT_POINTING_CURVED_ANGLE_BRACKET=10749]="RIGHT_POINTING_CURVED_ANGLE_BRACKET",e[e.TOP_RIGHT_HALF_BRACKET=11811]="TOP_RIGHT_HALF_BRACKET",e[e.BOTTOM_RIGHT_HALF_BRACKET=11813]="BOTTOM_RIGHT_HALF_BRACKET",e[e.RIGHT_SIDEWAYS_U_BRACKET=11815]="RIGHT_SIDEWAYS_U_BRACKET",e[e.RIGHT_DOUBLE_PARENTHESIS=11817]="RIGHT_DOUBLE_PARENTHESIS",e[e.RIGHT_ANGLE_BRACKET=12297]="RIGHT_ANGLE_BRACKET",e[e.RIGHT_DOUBLE_ANGLE_BRACKET=12299]="RIGHT_DOUBLE_ANGLE_BRACKET",e[e.RIGHT_CORNER_BRACKET=12301]="RIGHT_CORNER_BRACKET",e[e.RIGHT_WHITE_CORNER_BRACKET=12303]="RIGHT_WHITE_CORNER_BRACKET",e[e.RIGHT_BLACK_LENTICULAR_BRACKET=12305]="RIGHT_BLACK_LENTICULAR_BRACKET",e[e.RIGHT_TORTOISE_SHELL_BRACKET=12309]="RIGHT_TORTOISE_SHELL_BRACKET",e[e.RIGHT_WHITE_LENTICULAR_BRACKET=12311]="RIGHT_WHITE_LENTICULAR_BRACKET",e[e.RIGHT_WHITE_TORTOISE_SHELL_BRACKET=12313]="RIGHT_WHITE_TORTOISE_SHELL_BRACKET",e[e.RIGHT_WHITE_SQUARE_BRACKET=12315]="RIGHT_WHITE_SQUARE_BRACKET",e[e.DOUBLE_PRIME_QUOTATION_MARK=12318]="DOUBLE_PRIME_QUOTATION_MARK",e[e.LOW_DOUBLE_PRIME_QUOTATION_MARK=12319]="LOW_DOUBLE_PRIME_QUOTATION_MARK",e[e.ORNATE_LEFT_PARENTHESIS=64830]="ORNATE_LEFT_PARENTHESIS",e[e.PRESENTATION_FORM_FOR_VERTICAL_RIGHT_WHITE_LENTICULAR_BRAKCET=65048]="PRESENTATION_FORM_FOR_VERTICAL_RIGHT_WHITE_LENTICULAR_BRAKCET",e[e.PRESENTATION_FORM_FOR_VERTICAL_RIGHT_PARENTHESIS=65078]="PRESENTATION_FORM_FOR_VERTICAL_RIGHT_PARENTHESIS",e[e.PRESENTATION_FORM_FOR_VERTICAL_RIGHT_CURLY_BRACKET=65080]="PRESENTATION_FORM_FOR_VERTICAL_RIGHT_CURLY_BRACKET",e[e.PRESENTATION_FORM_FOR_VERTICAL_RIGHT_TORTOISE_SHELL_BRACKET=65082]="PRESENTATION_FORM_FOR_VERTICAL_RIGHT_TORTOISE_SHELL_BRACKET",e[e.PRESENTATION_FORM_FOR_VERTICAL_RIGHT_BLACK_LENTICULAR_BRACKET=65084]="PRESENTATION_FORM_FOR_VERTICAL_RIGHT_BLACK_LENTICULAR_BRACKET",e[e.PRESENTATION_FORM_FOR_VERTICAL_RIGHT_DOUBLE_ANGLE_BRACKET=65086]="PRESENTATION_FORM_FOR_VERTICAL_RIGHT_DOUBLE_ANGLE_BRACKET",e[e.PRESENTATION_FORM_FOR_VERTICAL_RIGHT_ANGLE_BRACKET=65088]="PRESENTATION_FORM_FOR_VERTICAL_RIGHT_ANGLE_BRACKET",e[e.PRESENTATION_FORM_FOR_VERTICAL_RIGHT_CORNER_BRACKET=65090]="PRESENTATION_FORM_FOR_VERTICAL_RIGHT_CORNER_BRACKET",e[e.PRESENTATION_FORM_FOR_VERTICAL_RIGHT_WHITE_CORNER_BRACKET=65092]="PRESENTATION_FORM_FOR_VERTICAL_RIGHT_WHITE_CORNER_BRACKET",e[e.PRESENTATION_FORM_FOR_VERTICAL_RIGHT_SQUARE_BRACKET=65096]="PRESENTATION_FORM_FOR_VERTICAL_RIGHT_SQUARE_BRACKET",e[e.SMALL_RIGHT_PARENTHESIS=65114]="SMALL_RIGHT_PARENTHESIS",e[e.SMALL_RIGHT_CURLY_BRACKET=65116]="SMALL_RIGHT_CURLY_BRACKET",e[e.SMALL_RIGHT_TORTOISE_SHELL_BRACKET=65118]="SMALL_RIGHT_TORTOISE_SHELL_BRACKET",e[e.FULLWIDTH_RIGHT_PARENTHESIS=65289]="FULLWIDTH_RIGHT_PARENTHESIS",e[e.FULLWIDTH_RIGHT_SQUARE_BRACKET=65341]="FULLWIDTH_RIGHT_SQUARE_BRACKET",e[e.FULLWIDTH_RIGHT_CURLY_BRACKET=65373]="FULLWIDTH_RIGHT_CURLY_BRACKET",e[e.FULLWIDTH_RIGHT_WHITE_PARENTHESIS=65376]="FULLWIDTH_RIGHT_WHITE_PARENTHESIS",e[e.HALFWIDTH_RIGHT_CORNER_BRACKET=65379]="HALFWIDTH_RIGHT_CORNER_BRACKET"}(UnicodePeCodePoint||(UnicodePeCodePoint={})),function(e){e[e.RIGHT_POINTING_DOUBLE_ANGLE_QUOTATION_MARK=187]="RIGHT_POINTING_DOUBLE_ANGLE_QUOTATION_MARK",e[e.RIGHT_SINGLE_QUOTATION_MARK=8217]="RIGHT_SINGLE_QUOTATION_MARK",e[e.RIGHT_DOUBLE_QUOTATION_MARK=8221]="RIGHT_DOUBLE_QUOTATION_MARK",e[e.SINGLE_RIGHT_POINTING_ANGLE_QUOTATION_MARK=8250]="SINGLE_RIGHT_POINTING_ANGLE_QUOTATION_MARK",e[e.RIGHT_SUBSTITUTION_BRACKET=11779]="RIGHT_SUBSTITUTION_BRACKET",e[e.RIGHT_DOTTED_SUBSTITUTION_BRACKET=11781]="RIGHT_DOTTED_SUBSTITUTION_BRACKET",e[e.RIGHT_TRANSPOSITION_BRACKET=11786]="RIGHT_TRANSPOSITION_BRACKET",e[e.RIGHT_RAISED_OMISSION_BRACKET=11789]="RIGHT_RAISED_OMISSION_BRACKET",e[e.RIGHT_LOW_PARAPHRASE_BRACKET=11805]="RIGHT_LOW_PARAPHRASE_BRACKET",e[e.RIGHT_VERTICAL_BAR_WITH_QUILL=11809]="RIGHT_VERTICAL_BAR_WITH_QUILL"}(UnicodePfCodePoint||(UnicodePfCodePoint={})),function(e){e[e.LEFT_POINTING_DOUBLE_ANGLE_QUOTATION_MARK=171]="LEFT_POINTING_DOUBLE_ANGLE_QUOTATION_MARK",e[e.LEFT_SINGLE_QUOTATION_MARK=8216]="LEFT_SINGLE_QUOTATION_MARK",e[e.SINGLE_HIGH_REVERSED_9_QUOTATION_MARK=8219]="SINGLE_HIGH_REVERSED_9_QUOTATION_MARK",e[e.LEFT_DOUBLE_QUOTATION_MARK=8220]="LEFT_DOUBLE_QUOTATION_MARK",e[e.DOUBLE_HIGH_REVERSED_9_QUOTATION_MARK=8223]="DOUBLE_HIGH_REVERSED_9_QUOTATION_MARK",e[e.SINGLE_LEFT_POINTING_ANGLE_QUOTATION_MARK=8249]="SINGLE_LEFT_POINTING_ANGLE_QUOTATION_MARK",e[e.LEFT_SUBSTITUTION_BRACKET=11778]="LEFT_SUBSTITUTION_BRACKET",e[e.LEFT_DOTTED_SUBSTITUTION_BRACKET=11780]="LEFT_DOTTED_SUBSTITUTION_BRACKET",e[e.LEFT_TRANSPOSITION_BRACKET=11785]="LEFT_TRANSPOSITION_BRACKET",e[e.LEFT_RAISED_OMISSION_BRACKET=11788]="LEFT_RAISED_OMISSION_BRACKET",e[e.LEFT_LOW_PARAPHRASE_BRACKET=11804]="LEFT_LOW_PARAPHRASE_BRACKET",e[e.LEFT_VERTICAL_BAR_WITH_QUILL=11808]="LEFT_VERTICAL_BAR_WITH_QUILL"}(UnicodePiCodePoint||(UnicodePiCodePoint={})),function(e){e[e.EXCLAMATION_MARK=33]="EXCLAMATION_MARK",e[e.QUOTATION_MARK=34]="QUOTATION_MARK",e[e.NUMBER_SIGN=35]="NUMBER_SIGN",e[e.PERCENT_SIGN=37]="PERCENT_SIGN",e[e.AMPERSAND=38]="AMPERSAND",e[e.APOSTROPHE=39]="APOSTROPHE",e[e.ASTERISK=42]="ASTERISK",e[e.COMMA=44]="COMMA",e[e.FULL_STOP=46]="FULL_STOP",e[e.SOLIDUS=47]="SOLIDUS",e[e.COLON=58]="COLON",e[e.SEMICOLON=59]="SEMICOLON",e[e.QUESTION_MARK=63]="QUESTION_MARK",e[e.COMMERCIAL_AT=64]="COMMERCIAL_AT",e[e.REVERSE_SOLIDUS=92]="REVERSE_SOLIDUS",e[e.INVERTED_EXCLAMATION_MARK=161]="INVERTED_EXCLAMATION_MARK",e[e.SECTION_SIGN=167]="SECTION_SIGN",e[e.PILCROW_SIGN=182]="PILCROW_SIGN",e[e.MIDDLE_DOT=183]="MIDDLE_DOT",e[e.INVERTED_QUESTION_MARK=191]="INVERTED_QUESTION_MARK",e[e.GREEK_QUESTION_MARK=894]="GREEK_QUESTION_MARK",e[e.GREEK_ANO_TELEIA=903]="GREEK_ANO_TELEIA",e[e.ARMENIAN_APOSTROPHE=1370]="ARMENIAN_APOSTROPHE",e[e.ARMENIAN_EMPHASIS_MARK=1371]="ARMENIAN_EMPHASIS_MARK",e[e.ARMENIAN_EXCLAMATION_MARK=1372]="ARMENIAN_EXCLAMATION_MARK",e[e.ARMENIAN_COMMA=1373]="ARMENIAN_COMMA",e[e.ARMENIAN_QUESTION_MARK=1374]="ARMENIAN_QUESTION_MARK",e[e.ARMENIAN_ABBREVIATION_MARK=1375]="ARMENIAN_ABBREVIATION_MARK",e[e.ARMENIAN_FULL_STOP=1417]="ARMENIAN_FULL_STOP",e[e.HEBREW_PUNCTUATION_PASEQ=1472]="HEBREW_PUNCTUATION_PASEQ",e[e.HEBREW_PUNCTUATION_SOF_PASUQ=1475]="HEBREW_PUNCTUATION_SOF_PASUQ",e[e.HEBREW_PUNCTUATION_NUN_HAFUKHA=1478]="HEBREW_PUNCTUATION_NUN_HAFUKHA",e[e.HEBREW_PUNCTUATION_GERESH=1523]="HEBREW_PUNCTUATION_GERESH",e[e.HEBREW_PUNCTUATION_GERSHAYIM=1524]="HEBREW_PUNCTUATION_GERSHAYIM",e[e.ARABIC_INDIC_PER_MILLE_SIGN=1545]="ARABIC_INDIC_PER_MILLE_SIGN",e[e.ARABIC_INDIC_PER_TEN_THOUSAND_SIGN=1546]="ARABIC_INDIC_PER_TEN_THOUSAND_SIGN",e[e.ARABIC_COMMA=1548]="ARABIC_COMMA",e[e.ARABIC_DATE_SEPARATOR=1549]="ARABIC_DATE_SEPARATOR",e[e.ARABIC_SEMICOLON=1563]="ARABIC_SEMICOLON",e[e.ARABIC_TRIPLE_DOT_PUNCTUATION_MARK=1566]="ARABIC_TRIPLE_DOT_PUNCTUATION_MARK",e[e.ARABIC_QUESTION_MARK=1567]="ARABIC_QUESTION_MARK",e[e.ARABIC_PERCENT_SIGN=1642]="ARABIC_PERCENT_SIGN",e[e.ARABIC_DECIMAL_SEPARATOR=1643]="ARABIC_DECIMAL_SEPARATOR",e[e.ARABIC_THOUSANDS_SEPARATOR=1644]="ARABIC_THOUSANDS_SEPARATOR",e[e.ARABIC_FIVE_POINTED_STAR=1645]="ARABIC_FIVE_POINTED_STAR",e[e.ARABIC_FULL_STOP=1748]="ARABIC_FULL_STOP",e[e.SYRIAC_END_OF_PARAGRAPH=1792]="SYRIAC_END_OF_PARAGRAPH",e[e.SYRIAC_SUPRALINEAR_FULL_STOP=1793]="SYRIAC_SUPRALINEAR_FULL_STOP",e[e.SYRIAC_SUBLINEAR_FULL_STOP=1794]="SYRIAC_SUBLINEAR_FULL_STOP",e[e.SYRIAC_SUPRALINEAR_COLON=1795]="SYRIAC_SUPRALINEAR_COLON",e[e.SYRIAC_SUBLINEAR_COLON=1796]="SYRIAC_SUBLINEAR_COLON",e[e.SYRIAC_HORIZONTAL_COLON=1797]="SYRIAC_HORIZONTAL_COLON",e[e.SYRIAC_COLON_SKEWED_LEFT=1798]="SYRIAC_COLON_SKEWED_LEFT",e[e.SYRIAC_COLON_SKEWED_RIGHT=1799]="SYRIAC_COLON_SKEWED_RIGHT",e[e.SYRIAC_SUPRALINEAR_COLON_SKEWED_LEFT=1800]="SYRIAC_SUPRALINEAR_COLON_SKEWED_LEFT",e[e.SYRIAC_SUBLINEAR_COLON_SKEWED_RIGHT=1801]="SYRIAC_SUBLINEAR_COLON_SKEWED_RIGHT",e[e.SYRIAC_CONTRACTION=1802]="SYRIAC_CONTRACTION",e[e.SYRIAC_HARKLEAN_OBELUS=1803]="SYRIAC_HARKLEAN_OBELUS",e[e.SYRIAC_HARKLEAN_METOBELUS=1804]="SYRIAC_HARKLEAN_METOBELUS",e[e.SYRIAC_HARKLEAN_ASTERISCUS=1805]="SYRIAC_HARKLEAN_ASTERISCUS",e[e.NKO_SYMBOL_GBAKURUNEN=2039]="NKO_SYMBOL_GBAKURUNEN",e[e.NKO_COMMA=2040]="NKO_COMMA",e[e.NKO_EXCLAMATION_MARK=2041]="NKO_EXCLAMATION_MARK",e[e.SAMARITAN_PUNCTUATION_NEQUDAA=2096]="SAMARITAN_PUNCTUATION_NEQUDAA",e[e.SAMARITAN_PUNCTUATION_AFSAAQ=2097]="SAMARITAN_PUNCTUATION_AFSAAQ",e[e.SAMARITAN_PUNCTUATION_ANGED=2098]="SAMARITAN_PUNCTUATION_ANGED",e[e.SAMARITAN_PUNCTUATION_BAU=2099]="SAMARITAN_PUNCTUATION_BAU",e[e.SAMARITAN_PUNCTUATION_ATMAAU=2100]="SAMARITAN_PUNCTUATION_ATMAAU",e[e.SAMARITAN_PUNCTUATION_SHIYYAALAA=2101]="SAMARITAN_PUNCTUATION_SHIYYAALAA",e[e.SAMARITAN_ABBREVIATION_MARK=2102]="SAMARITAN_ABBREVIATION_MARK",e[e.SAMARITAN_PUNCTUATION_MELODIC_QITSA=2103]="SAMARITAN_PUNCTUATION_MELODIC_QITSA",e[e.SAMARITAN_PUNCTUATION_ZIQAA=2104]="SAMARITAN_PUNCTUATION_ZIQAA",e[e.SAMARITAN_PUNCTUATION_QITSA=2105]="SAMARITAN_PUNCTUATION_QITSA",e[e.SAMARITAN_PUNCTUATION_ZAEF=2106]="SAMARITAN_PUNCTUATION_ZAEF",e[e.SAMARITAN_PUNCTUATION_TURU=2107]="SAMARITAN_PUNCTUATION_TURU",e[e.SAMARITAN_PUNCTUATION_ARKAANU=2108]="SAMARITAN_PUNCTUATION_ARKAANU",e[e.SAMARITAN_PUNCTUATION_SOF_MASHFAAT=2109]="SAMARITAN_PUNCTUATION_SOF_MASHFAAT",e[e.SAMARITAN_PUNCTUATION_ANNAAU=2110]="SAMARITAN_PUNCTUATION_ANNAAU",e[e.MANDAIC_PUNCTUATION=2142]="MANDAIC_PUNCTUATION",e[e.DEVANAGARI_DANDA=2404]="DEVANAGARI_DANDA",e[e.DEVANAGARI_DOUBLE_DANDA=2405]="DEVANAGARI_DOUBLE_DANDA",e[e.DEVANAGARI_ABBREVIATION_SIGN=2416]="DEVANAGARI_ABBREVIATION_SIGN",e[e.BENGALI_ABBREVIATION_SIGN=2557]="BENGALI_ABBREVIATION_SIGN",e[e.GURMUKHI_ABBREVIATION_SIGN=2678]="GURMUKHI_ABBREVIATION_SIGN",e[e.GUJARATI_ABBREVIATION_SIGN=2800]="GUJARATI_ABBREVIATION_SIGN",e[e.TELUGU_SIGN_SIDDHAM=3191]="TELUGU_SIGN_SIDDHAM",e[e.KANNADA_SIGN_SIDDHAM=3204]="KANNADA_SIGN_SIDDHAM",e[e.SINHALA_PUNCTUATION_KUNDDALIYA=3572]="SINHALA_PUNCTUATION_KUNDDALIYA",e[e.THAI_CHARACTER_FONGMAN=3663]="THAI_CHARACTER_FONGMAN",e[e.THAI_CHARACTER_ANGKHANKHU=3674]="THAI_CHARACTER_ANGKHANKHU",e[e.THAI_CHARACTER_KHOMUT=3675]="THAI_CHARACTER_KHOMUT",e[e.TIBETAN_MARK_INITIAL_YIG_MGO_MDUN_MA=3844]="TIBETAN_MARK_INITIAL_YIG_MGO_MDUN_MA",e[e.TIBETAN_MARK_CLOSING_YIG_MGO_SGAB_MA=3845]="TIBETAN_MARK_CLOSING_YIG_MGO_SGAB_MA",e[e.TIBETAN_MARK_CARET_YIG_MGO_PHUR_SHAD_MA=3846]="TIBETAN_MARK_CARET_YIG_MGO_PHUR_SHAD_MA",e[e.TIBETAN_MARK_YIG_MGO_TSHEG_SHAD_MA=3847]="TIBETAN_MARK_YIG_MGO_TSHEG_SHAD_MA",e[e.TIBETAN_MARK_SBRUL_SHAD=3848]="TIBETAN_MARK_SBRUL_SHAD",e[e.TIBETAN_MARK_BSKUR_YIG_MGO=3849]="TIBETAN_MARK_BSKUR_YIG_MGO",e[e.TIBETAN_MARK_BKA__SHOG_YIG_MGO=3850]="TIBETAN_MARK_BKA__SHOG_YIG_MGO",e[e.TIBETAN_MARK_INTERSYLLABIC_TSHEG=3851]="TIBETAN_MARK_INTERSYLLABIC_TSHEG",e[e.TIBETAN_MARK_DELIMITER_TSHEG_BSTAR=3852]="TIBETAN_MARK_DELIMITER_TSHEG_BSTAR",e[e.TIBETAN_MARK_SHAD=3853]="TIBETAN_MARK_SHAD",e[e.TIBETAN_MARK_NYIS_SHAD=3854]="TIBETAN_MARK_NYIS_SHAD",e[e.TIBETAN_MARK_TSHEG_SHAD=3855]="TIBETAN_MARK_TSHEG_SHAD",e[e.TIBETAN_MARK_NYIS_TSHEG_SHAD=3856]="TIBETAN_MARK_NYIS_TSHEG_SHAD",e[e.TIBETAN_MARK_RIN_CHEN_SPUNGS_SHAD=3857]="TIBETAN_MARK_RIN_CHEN_SPUNGS_SHAD",e[e.TIBETAN_MARK_RGYA_GRAM_SHAD=3858]="TIBETAN_MARK_RGYA_GRAM_SHAD",e[e.TIBETAN_MARK_GTER_TSHEG=3860]="TIBETAN_MARK_GTER_TSHEG",e[e.TIBETAN_MARK_PALUTA=3973]="TIBETAN_MARK_PALUTA",e[e.TIBETAN_MARK_BSKA__SHOG_GI_MGO_RGYAN=4048]="TIBETAN_MARK_BSKA__SHOG_GI_MGO_RGYAN",e[e.TIBETAN_MARK_MNYAM_YIG_GI_MGO_RGYAN=4049]="TIBETAN_MARK_MNYAM_YIG_GI_MGO_RGYAN",e[e.TIBETAN_MARK_NYIS_TSHEG=4050]="TIBETAN_MARK_NYIS_TSHEG",e[e.TIBETAN_MARK_INITIAL_BRDA_RNYING_YIG_MGO_MDUN_MA=4051]="TIBETAN_MARK_INITIAL_BRDA_RNYING_YIG_MGO_MDUN_MA",e[e.TIBETAN_MARK_CLOSING_BRDA_RNYING_YIG_MGO_SGAB_MA=4052]="TIBETAN_MARK_CLOSING_BRDA_RNYING_YIG_MGO_SGAB_MA",e[e.TIBETAN_MARK_LEADING_MCHAN_RTAGS=4057]="TIBETAN_MARK_LEADING_MCHAN_RTAGS",e[e.TIBETAN_MARK_TRAILING_MCHAN_RTAGS=4058]="TIBETAN_MARK_TRAILING_MCHAN_RTAGS",e[e.MYANMAR_SIGN_LITTLE_SECTION=4170]="MYANMAR_SIGN_LITTLE_SECTION",e[e.MYANMAR_SIGN_SECTION=4171]="MYANMAR_SIGN_SECTION",e[e.MYANMAR_SYMBOL_LOCATIVE=4172]="MYANMAR_SYMBOL_LOCATIVE",e[e.MYANMAR_SYMBOL_COMPLETED=4173]="MYANMAR_SYMBOL_COMPLETED",e[e.MYANMAR_SYMBOL_AFOREMENTIONED=4174]="MYANMAR_SYMBOL_AFOREMENTIONED",e[e.MYANMAR_SYMBOL_GENITIVE=4175]="MYANMAR_SYMBOL_GENITIVE",e[e.GEORGIAN_PARAGRAPH_SEPARATOR=4347]="GEORGIAN_PARAGRAPH_SEPARATOR",e[e.ETHIOPIC_SECTION_MARK=4960]="ETHIOPIC_SECTION_MARK",e[e.ETHIOPIC_WORDSPACE=4961]="ETHIOPIC_WORDSPACE",e[e.ETHIOPIC_FULL_STOP=4962]="ETHIOPIC_FULL_STOP",e[e.ETHIOPIC_COMMA=4963]="ETHIOPIC_COMMA",e[e.ETHIOPIC_SEMICOLON=4964]="ETHIOPIC_SEMICOLON",e[e.ETHIOPIC_COLON=4965]="ETHIOPIC_COLON",e[e.ETHIOPIC_PREFACE_COLON=4966]="ETHIOPIC_PREFACE_COLON",e[e.ETHIOPIC_QUESTION_MARK=4967]="ETHIOPIC_QUESTION_MARK",e[e.ETHIOPIC_PARAGRAPH_SEPARATOR=4968]="ETHIOPIC_PARAGRAPH_SEPARATOR",e[e.CANADIAN_SYLLABICS_FULL_STOP=5742]="CANADIAN_SYLLABICS_FULL_STOP",e[e.RUNIC_SINGLE_PUNCTUATION=5867]="RUNIC_SINGLE_PUNCTUATION",e[e.RUNIC_MULTIPLE_PUNCTUATION=5868]="RUNIC_MULTIPLE_PUNCTUATION",e[e.RUNIC_CROSS_PUNCTUATION=5869]="RUNIC_CROSS_PUNCTUATION",e[e.PHILIPPINE_SINGLE_PUNCTUATION=5941]="PHILIPPINE_SINGLE_PUNCTUATION",e[e.PHILIPPINE_DOUBLE_PUNCTUATION=5942]="PHILIPPINE_DOUBLE_PUNCTUATION",e[e.KHMER_SIGN_KHAN=6100]="KHMER_SIGN_KHAN",e[e.KHMER_SIGN_BARIYOOSAN=6101]="KHMER_SIGN_BARIYOOSAN",e[e.KHMER_SIGN_CAMNUC_PII_KUUH=6102]="KHMER_SIGN_CAMNUC_PII_KUUH",e[e.KHMER_SIGN_BEYYAL=6104]="KHMER_SIGN_BEYYAL",e[e.KHMER_SIGN_PHNAEK_MUAN=6105]="KHMER_SIGN_PHNAEK_MUAN",e[e.KHMER_SIGN_KOOMUUT=6106]="KHMER_SIGN_KOOMUUT",e[e.MONGOLIAN_BIRGA=6144]="MONGOLIAN_BIRGA",e[e.MONGOLIAN_ELLIPSIS=6145]="MONGOLIAN_ELLIPSIS",e[e.MONGOLIAN_COMMA=6146]="MONGOLIAN_COMMA",e[e.MONGOLIAN_FULL_STOP=6147]="MONGOLIAN_FULL_STOP",e[e.MONGOLIAN_COLON=6148]="MONGOLIAN_COLON",e[e.MONGOLIAN_FOUR_DOTS=6149]="MONGOLIAN_FOUR_DOTS",e[e.MONGOLIAN_SIBE_SYLLABLE_BOUNDARY_MARKER=6151]="MONGOLIAN_SIBE_SYLLABLE_BOUNDARY_MARKER",e[e.MONGOLIAN_MANCHU_COMMA=6152]="MONGOLIAN_MANCHU_COMMA",e[e.MONGOLIAN_MANCHU_FULL_STOP=6153]="MONGOLIAN_MANCHU_FULL_STOP",e[e.MONGOLIAN_NIRUGU=6154]="MONGOLIAN_NIRUGU",e[e.LIMBU_EXCLAMATION_MARK=6468]="LIMBU_EXCLAMATION_MARK",e[e.LIMBU_QUESTION_MARK=6469]="LIMBU_QUESTION_MARK",e[e.BUGINESE_PALLAWA=6686]="BUGINESE_PALLAWA",e[e.BUGINESE_END_OF_SECTION=6687]="BUGINESE_END_OF_SECTION",e[e.TAI_THAM_SIGN_WIANG=6816]="TAI_THAM_SIGN_WIANG",e[e.TAI_THAM_SIGN_WIANGWAAK=6817]="TAI_THAM_SIGN_WIANGWAAK",e[e.TAI_THAM_SIGN_SAWAN=6818]="TAI_THAM_SIGN_SAWAN",e[e.TAI_THAM_SIGN_KEOW=6819]="TAI_THAM_SIGN_KEOW",e[e.TAI_THAM_SIGN_HOY=6820]="TAI_THAM_SIGN_HOY",e[e.TAI_THAM_SIGN_DOKMAI=6821]="TAI_THAM_SIGN_DOKMAI",e[e.TAI_THAM_SIGN_REVERSED_ROTATED_RANA=6822]="TAI_THAM_SIGN_REVERSED_ROTATED_RANA",e[e.TAI_THAM_SIGN_KAAN=6824]="TAI_THAM_SIGN_KAAN",e[e.TAI_THAM_SIGN_KAANKUU=6825]="TAI_THAM_SIGN_KAANKUU",e[e.TAI_THAM_SIGN_SATKAAN=6826]="TAI_THAM_SIGN_SATKAAN",e[e.TAI_THAM_SIGN_SATKAANKUU=6827]="TAI_THAM_SIGN_SATKAANKUU",e[e.TAI_THAM_SIGN_HANG=6828]="TAI_THAM_SIGN_HANG",e[e.TAI_THAM_SIGN_CAANG=6829]="TAI_THAM_SIGN_CAANG",e[e.BALINESE_PANTI=7002]="BALINESE_PANTI",e[e.BALINESE_PAMADA=7003]="BALINESE_PAMADA",e[e.BALINESE_WINDU=7004]="BALINESE_WINDU",e[e.BALINESE_CARIK_PAMUNGKAH=7005]="BALINESE_CARIK_PAMUNGKAH",e[e.BALINESE_CARIK_SIKI=7006]="BALINESE_CARIK_SIKI",e[e.BALINESE_CARIK_PAREREN=7007]="BALINESE_CARIK_PAREREN",e[e.BALINESE_PAMENENG=7008]="BALINESE_PAMENENG",e[e.BATAK_SYMBOL_BINDU_NA_METEK=7164]="BATAK_SYMBOL_BINDU_NA_METEK",e[e.BATAK_SYMBOL_BINDU_PINARBORAS=7165]="BATAK_SYMBOL_BINDU_PINARBORAS",e[e.BATAK_SYMBOL_BINDU_JUDUL=7166]="BATAK_SYMBOL_BINDU_JUDUL",e[e.BATAK_SYMBOL_BINDU_PANGOLAT=7167]="BATAK_SYMBOL_BINDU_PANGOLAT",e[e.LEPCHA_PUNCTUATION_TA_ROL=7227]="LEPCHA_PUNCTUATION_TA_ROL",e[e.LEPCHA_PUNCTUATION_NYET_THYOOM_TA_ROL=7228]="LEPCHA_PUNCTUATION_NYET_THYOOM_TA_ROL",e[e.LEPCHA_PUNCTUATION_CER_WA=7229]="LEPCHA_PUNCTUATION_CER_WA",e[e.LEPCHA_PUNCTUATION_TSHOOK_CER_WA=7230]="LEPCHA_PUNCTUATION_TSHOOK_CER_WA",e[e.LEPCHA_PUNCTUATION_TSHOOK=7231]="LEPCHA_PUNCTUATION_TSHOOK",e[e.OL_CHIKI_PUNCTUATION_MUCAAD=7294]="OL_CHIKI_PUNCTUATION_MUCAAD",e[e.OL_CHIKI_PUNCTUATION_DOUBLE_MUCAAD=7295]="OL_CHIKI_PUNCTUATION_DOUBLE_MUCAAD",e[e.SUNDANESE_PUNCTUATION_BINDU_SURYA=7360]="SUNDANESE_PUNCTUATION_BINDU_SURYA",e[e.SUNDANESE_PUNCTUATION_BINDU_PANGLONG=7361]="SUNDANESE_PUNCTUATION_BINDU_PANGLONG",e[e.SUNDANESE_PUNCTUATION_BINDU_PURNAMA=7362]="SUNDANESE_PUNCTUATION_BINDU_PURNAMA",e[e.SUNDANESE_PUNCTUATION_BINDU_CAKRA=7363]="SUNDANESE_PUNCTUATION_BINDU_CAKRA",e[e.SUNDANESE_PUNCTUATION_BINDU_LEU_SATANGA=7364]="SUNDANESE_PUNCTUATION_BINDU_LEU_SATANGA",e[e.SUNDANESE_PUNCTUATION_BINDU_KA_SATANGA=7365]="SUNDANESE_PUNCTUATION_BINDU_KA_SATANGA",e[e.SUNDANESE_PUNCTUATION_BINDU_DA_SATANGA=7366]="SUNDANESE_PUNCTUATION_BINDU_DA_SATANGA",e[e.SUNDANESE_PUNCTUATION_BINDU_BA_SATANGA=7367]="SUNDANESE_PUNCTUATION_BINDU_BA_SATANGA",e[e.VEDIC_SIGN_NIHSHVASA=7379]="VEDIC_SIGN_NIHSHVASA",e[e.DOUBLE_VERTICAL_LINE=8214]="DOUBLE_VERTICAL_LINE",e[e.DOUBLE_LOW_LINE=8215]="DOUBLE_LOW_LINE",e[e.DAGGER=8224]="DAGGER",e[e.DOUBLE_DAGGER=8225]="DOUBLE_DAGGER",e[e.BULLET=8226]="BULLET",e[e.TRIANGULAR_BULLET=8227]="TRIANGULAR_BULLET",e[e.ONE_DOT_LEADER=8228]="ONE_DOT_LEADER",e[e.TWO_DOT_LEADER=8229]="TWO_DOT_LEADER",e[e.HORIZONTAL_ELLIPSIS=8230]="HORIZONTAL_ELLIPSIS",e[e.HYPHENATION_POINT=8231]="HYPHENATION_POINT",e[e.PER_MILLE_SIGN=8240]="PER_MILLE_SIGN",e[e.PER_TEN_THOUSAND_SIGN=8241]="PER_TEN_THOUSAND_SIGN",e[e.PRIME=8242]="PRIME",e[e.DOUBLE_PRIME=8243]="DOUBLE_PRIME",e[e.TRIPLE_PRIME=8244]="TRIPLE_PRIME",e[e.REVERSED_PRIME=8245]="REVERSED_PRIME",e[e.REVERSED_DOUBLE_PRIME=8246]="REVERSED_DOUBLE_PRIME",e[e.REVERSED_TRIPLE_PRIME=8247]="REVERSED_TRIPLE_PRIME",e[e.CARET=8248]="CARET",e[e.REFERENCE_MARK=8251]="REFERENCE_MARK",e[e.DOUBLE_EXCLAMATION_MARK=8252]="DOUBLE_EXCLAMATION_MARK",e[e.INTERROBANG=8253]="INTERROBANG",e[e.OVERLINE=8254]="OVERLINE",e[e.CARET_INSERTION_POINT=8257]="CARET_INSERTION_POINT",e[e.ASTERISM=8258]="ASTERISM",e[e.HYPHEN_BULLET=8259]="HYPHEN_BULLET",e[e.DOUBLE_QUESTION_MARK=8263]="DOUBLE_QUESTION_MARK",e[e.QUESTION_EXCLAMATION_MARK=8264]="QUESTION_EXCLAMATION_MARK",e[e.EXCLAMATION_QUESTION_MARK=8265]="EXCLAMATION_QUESTION_MARK",e[e.TIRONIAN_SIGN_ET=8266]="TIRONIAN_SIGN_ET",e[e.REVERSED_PILCROW_SIGN=8267]="REVERSED_PILCROW_SIGN",e[e.BLACK_LEFTWARDS_BULLET=8268]="BLACK_LEFTWARDS_BULLET",e[e.BLACK_RIGHTWARDS_BULLET=8269]="BLACK_RIGHTWARDS_BULLET",e[e.LOW_ASTERISK=8270]="LOW_ASTERISK",e[e.REVERSED_SEMICOLON=8271]="REVERSED_SEMICOLON",e[e.CLOSE_UP=8272]="CLOSE_UP",e[e.TWO_ASTERISKS_ALIGNED_VERTICALLY=8273]="TWO_ASTERISKS_ALIGNED_VERTICALLY",e[e.SWUNG_DASH=8275]="SWUNG_DASH",e[e.FLOWER_PUNCTUATION_MARK=8277]="FLOWER_PUNCTUATION_MARK",e[e.THREE_DOT_PUNCTUATION=8278]="THREE_DOT_PUNCTUATION",e[e.QUADRUPLE_PRIME=8279]="QUADRUPLE_PRIME",e[e.FOUR_DOT_PUNCTUATION=8280]="FOUR_DOT_PUNCTUATION",e[e.FIVE_DOT_PUNCTUATION=8281]="FIVE_DOT_PUNCTUATION",e[e.TWO_DOT_PUNCTUATION=8282]="TWO_DOT_PUNCTUATION",e[e.FOUR_DOT_MARK=8283]="FOUR_DOT_MARK",e[e.DOTTED_CROSS=8284]="DOTTED_CROSS",e[e.TRICOLON=8285]="TRICOLON",e[e.VERTICAL_FOUR_DOTS=8286]="VERTICAL_FOUR_DOTS",e[e.COPTIC_OLD_NUBIAN_FULL_STOP=11513]="COPTIC_OLD_NUBIAN_FULL_STOP",e[e.COPTIC_OLD_NUBIAN_DIRECT_QUESTION_MARK=11514]="COPTIC_OLD_NUBIAN_DIRECT_QUESTION_MARK",e[e.COPTIC_OLD_NUBIAN_INDIRECT_QUESTION_MARK=11515]="COPTIC_OLD_NUBIAN_INDIRECT_QUESTION_MARK",e[e.COPTIC_OLD_NUBIAN_VERSE_DIVIDER=11516]="COPTIC_OLD_NUBIAN_VERSE_DIVIDER",e[e.COPTIC_FULL_STOP=11518]="COPTIC_FULL_STOP",e[e.COPTIC_MORPHOLOGICAL_DIVIDER=11519]="COPTIC_MORPHOLOGICAL_DIVIDER",e[e.TIFINAGH_SEPARATOR_MARK=11632]="TIFINAGH_SEPARATOR_MARK",e[e.RIGHT_ANGLE_SUBSTITUTION_MARKER=11776]="RIGHT_ANGLE_SUBSTITUTION_MARKER",e[e.RIGHT_ANGLE_DOTTED_SUBSTITUTION_MARKER=11777]="RIGHT_ANGLE_DOTTED_SUBSTITUTION_MARKER",e[e.RAISED_INTERPOLATION_MARKER=11782]="RAISED_INTERPOLATION_MARKER",e[e.RAISED_DOTTED_INTERPOLATION_MARKER=11783]="RAISED_DOTTED_INTERPOLATION_MARKER",e[e.DOTTED_TRANSPOSITION_MARKER=11784]="DOTTED_TRANSPOSITION_MARKER",e[e.RAISED_SQUARE=11787]="RAISED_SQUARE",e[e.EDITORIAL_CORONIS=11790]="EDITORIAL_CORONIS",e[e.PARAGRAPHOS=11791]="PARAGRAPHOS",e[e.FORKED_PARAGRAPHOS=11792]="FORKED_PARAGRAPHOS",e[e.REVERSED_FORKED_PARAGRAPHOS=11793]="REVERSED_FORKED_PARAGRAPHOS",e[e.HYPODIASTOLE=11794]="HYPODIASTOLE",e[e.DOTTED_OBELOS=11795]="DOTTED_OBELOS",e[e.DOWNWARDS_ANCORA=11796]="DOWNWARDS_ANCORA",e[e.UPWARDS_ANCORA=11797]="UPWARDS_ANCORA",e[e.DOTTED_RIGHT_POINTING_ANGLE=11798]="DOTTED_RIGHT_POINTING_ANGLE",e[e.INVERTED_INTERROBANG=11800]="INVERTED_INTERROBANG",e[e.PALM_BRANCH=11801]="PALM_BRANCH",e[e.TILDE_WITH_RING_ABOVE=11803]="TILDE_WITH_RING_ABOVE",e[e.TILDE_WITH_DOT_ABOVE=11806]="TILDE_WITH_DOT_ABOVE",e[e.TILDE_WITH_DOT_BELOW=11807]="TILDE_WITH_DOT_BELOW",e[e.TWO_DOTS_OVER_ONE_DOT_PUNCTUATION=11818]="TWO_DOTS_OVER_ONE_DOT_PUNCTUATION",e[e.ONE_DOT_OVER_TWO_DOTS_PUNCTUATION=11819]="ONE_DOT_OVER_TWO_DOTS_PUNCTUATION",e[e.SQUARED_FOUR_DOT_PUNCTUATION=11820]="SQUARED_FOUR_DOT_PUNCTUATION",e[e.FIVE_DOT_MARK=11821]="FIVE_DOT_MARK",e[e.REVERSED_QUESTION_MARK=11822]="REVERSED_QUESTION_MARK",e[e.RING_POINT=11824]="RING_POINT",e[e.WORD_SEPARATOR_MIDDLE_DOT=11825]="WORD_SEPARATOR_MIDDLE_DOT",e[e.TURNED_COMMA=11826]="TURNED_COMMA",e[e.RAISED_DOT=11827]="RAISED_DOT",e[e.RAISED_COMMA=11828]="RAISED_COMMA",e[e.TURNED_SEMICOLON=11829]="TURNED_SEMICOLON",e[e.DAGGER_WITH_LEFT_GUARD=11830]="DAGGER_WITH_LEFT_GUARD",e[e.DAGGER_WITH_RIGHT_GUARD=11831]="DAGGER_WITH_RIGHT_GUARD",e[e.TURNED_DAGGER=11832]="TURNED_DAGGER",e[e.TOP_HALF_SECTION_SIGN=11833]="TOP_HALF_SECTION_SIGN",e[e.STENOGRAPHIC_FULL_STOP=11836]="STENOGRAPHIC_FULL_STOP",e[e.VERTICAL_SIX_DOTS=11837]="VERTICAL_SIX_DOTS",e[e.WIGGLY_VERTICAL_LINE=11838]="WIGGLY_VERTICAL_LINE",e[e.CAPITULUM=11839]="CAPITULUM",e[e.REVERSED_COMMA=11841]="REVERSED_COMMA",e[e.DASH_WITH_LEFT_UPTURN=11843]="DASH_WITH_LEFT_UPTURN",e[e.DOUBLE_SUSPENSION_MARK=11844]="DOUBLE_SUSPENSION_MARK",e[e.INVERTED_LOW_KAVYKA=11845]="INVERTED_LOW_KAVYKA",e[e.INVERTED_LOW_KAVYKA_WITH_KAVYKA_ABOVE=11846]="INVERTED_LOW_KAVYKA_WITH_KAVYKA_ABOVE",e[e.LOW_KAVYKA=11847]="LOW_KAVYKA",e[e.LOW_KAVYKA_WITH_DOT=11848]="LOW_KAVYKA_WITH_DOT",e[e.DOUBLE_STACKED_COMMA=11849]="DOUBLE_STACKED_COMMA",e[e.DOTTED_SOLIDUS=11850]="DOTTED_SOLIDUS",e[e.TRIPLE_DAGGER=11851]="TRIPLE_DAGGER",e[e.MEDIEVAL_COMMA=11852]="MEDIEVAL_COMMA",e[e.PARAGRAPHUS_MARK=11853]="PARAGRAPHUS_MARK",e[e.PUNCTUS_ELEVATUS_MARK=11854]="PUNCTUS_ELEVATUS_MARK",e[e.CORNISH_VERSE_DIVIDER=11855]="CORNISH_VERSE_DIVIDER",e[e.TIRONIAN_SIGN_CAPITAL_ET=11858]="TIRONIAN_SIGN_CAPITAL_ET",e[e.IDEOGRAPHIC_COMMA=12289]="IDEOGRAPHIC_COMMA",e[e.IDEOGRAPHIC_FULL_STOP=12290]="IDEOGRAPHIC_FULL_STOP",e[e.DITTO_MARK=12291]="DITTO_MARK",e[e.PART_ALTERNATION_MARK=12349]="PART_ALTERNATION_MARK",e[e.KATAKANA_MIDDLE_DOT=12539]="KATAKANA_MIDDLE_DOT",e[e.LISU_PUNCTUATION_COMMA=42238]="LISU_PUNCTUATION_COMMA",e[e.LISU_PUNCTUATION_FULL_STOP=42239]="LISU_PUNCTUATION_FULL_STOP",e[e.VAI_COMMA=42509]="VAI_COMMA",e[e.VAI_FULL_STOP=42510]="VAI_FULL_STOP",e[e.VAI_QUESTION_MARK=42511]="VAI_QUESTION_MARK",e[e.SLAVONIC_ASTERISK=42611]="SLAVONIC_ASTERISK",e[e.CYRILLIC_KAVYKA=42622]="CYRILLIC_KAVYKA",e[e.BAMUM_NJAEMLI=42738]="BAMUM_NJAEMLI",e[e.BAMUM_FULL_STOP=42739]="BAMUM_FULL_STOP",e[e.BAMUM_COLON=42740]="BAMUM_COLON",e[e.BAMUM_COMMA=42741]="BAMUM_COMMA",e[e.BAMUM_SEMICOLON=42742]="BAMUM_SEMICOLON",e[e.BAMUM_QUESTION_MARK=42743]="BAMUM_QUESTION_MARK",e[e.PHAGS_PA_SINGLE_HEAD_MARK=43124]="PHAGS_PA_SINGLE_HEAD_MARK",e[e.PHAGS_PA_DOUBLE_HEAD_MARK=43125]="PHAGS_PA_DOUBLE_HEAD_MARK",e[e.PHAGS_PA_MARK_SHAD=43126]="PHAGS_PA_MARK_SHAD",e[e.PHAGS_PA_MARK_DOUBLE_SHAD=43127]="PHAGS_PA_MARK_DOUBLE_SHAD",e[e.SAURASHTRA_DANDA=43214]="SAURASHTRA_DANDA",e[e.SAURASHTRA_DOUBLE_DANDA=43215]="SAURASHTRA_DOUBLE_DANDA",e[e.DEVANAGARI_SIGN_PUSHPIKA=43256]="DEVANAGARI_SIGN_PUSHPIKA",e[e.DEVANAGARI_GAP_FILLER=43257]="DEVANAGARI_GAP_FILLER",e[e.DEVANAGARI_CARET=43258]="DEVANAGARI_CARET",e[e.DEVANAGARI_SIGN_SIDDHAM=43260]="DEVANAGARI_SIGN_SIDDHAM",e[e.KAYAH_LI_SIGN_CWI=43310]="KAYAH_LI_SIGN_CWI",e[e.KAYAH_LI_SIGN_SHYA=43311]="KAYAH_LI_SIGN_SHYA",e[e.REJANG_SECTION_MARK=43359]="REJANG_SECTION_MARK",e[e.JAVANESE_LEFT_RERENGGAN=43457]="JAVANESE_LEFT_RERENGGAN",e[e.JAVANESE_RIGHT_RERENGGAN=43458]="JAVANESE_RIGHT_RERENGGAN",e[e.JAVANESE_PADA_ANDAP=43459]="JAVANESE_PADA_ANDAP",e[e.JAVANESE_PADA_MADYA=43460]="JAVANESE_PADA_MADYA",e[e.JAVANESE_PADA_LUHUR=43461]="JAVANESE_PADA_LUHUR",e[e.JAVANESE_PADA_WINDU=43462]="JAVANESE_PADA_WINDU",e[e.JAVANESE_PADA_PANGKAT=43463]="JAVANESE_PADA_PANGKAT",e[e.JAVANESE_PADA_LINGSA=43464]="JAVANESE_PADA_LINGSA",e[e.JAVANESE_PADA_LUNGSI=43465]="JAVANESE_PADA_LUNGSI",e[e.JAVANESE_PADA_ADEG=43466]="JAVANESE_PADA_ADEG",e[e.JAVANESE_PADA_ADEG_ADEG=43467]="JAVANESE_PADA_ADEG_ADEG",e[e.JAVANESE_PADA_PISELEH=43468]="JAVANESE_PADA_PISELEH",e[e.JAVANESE_TURNED_PADA_PISELEH=43469]="JAVANESE_TURNED_PADA_PISELEH",e[e.JAVANESE_PADA_TIRTA_TUMETES=43486]="JAVANESE_PADA_TIRTA_TUMETES",e[e.JAVANESE_PADA_ISEN_ISEN=43487]="JAVANESE_PADA_ISEN_ISEN",e[e.CHAM_PUNCTUATION_SPIRAL=43612]="CHAM_PUNCTUATION_SPIRAL",e[e.CHAM_PUNCTUATION_DANDA=43613]="CHAM_PUNCTUATION_DANDA",e[e.CHAM_PUNCTUATION_DOUBLE_DANDA=43614]="CHAM_PUNCTUATION_DOUBLE_DANDA",e[e.CHAM_PUNCTUATION_TRIPLE_DANDA=43615]="CHAM_PUNCTUATION_TRIPLE_DANDA",e[e.TAI_VIET_SYMBOL_HO_HOI=43742]="TAI_VIET_SYMBOL_HO_HOI",e[e.TAI_VIET_SYMBOL_KOI_KOI=43743]="TAI_VIET_SYMBOL_KOI_KOI",e[e.MEETEI_MAYEK_CHEIKHAN=43760]="MEETEI_MAYEK_CHEIKHAN",e[e.MEETEI_MAYEK_AHANG_KHUDAM=43761]="MEETEI_MAYEK_AHANG_KHUDAM",e[e.MEETEI_MAYEK_CHEIKHEI=44011]="MEETEI_MAYEK_CHEIKHEI",e[e.PRESENTATION_FORM_FOR_VERTICAL_COMMA=65040]="PRESENTATION_FORM_FOR_VERTICAL_COMMA",e[e.PRESENTATION_FORM_FOR_VERTICAL_IDEOGRAPHIC_COMMA=65041]="PRESENTATION_FORM_FOR_VERTICAL_IDEOGRAPHIC_COMMA",e[e.PRESENTATION_FORM_FOR_VERTICAL_IDEOGRAPHIC_FULL_STOP=65042]="PRESENTATION_FORM_FOR_VERTICAL_IDEOGRAPHIC_FULL_STOP",e[e.PRESENTATION_FORM_FOR_VERTICAL_COLON=65043]="PRESENTATION_FORM_FOR_VERTICAL_COLON",e[e.PRESENTATION_FORM_FOR_VERTICAL_SEMICOLON=65044]="PRESENTATION_FORM_FOR_VERTICAL_SEMICOLON",e[e.PRESENTATION_FORM_FOR_VERTICAL_EXCLAMATION_MARK=65045]="PRESENTATION_FORM_FOR_VERTICAL_EXCLAMATION_MARK",e[e.PRESENTATION_FORM_FOR_VERTICAL_QUESTION_MARK=65046]="PRESENTATION_FORM_FOR_VERTICAL_QUESTION_MARK",e[e.PRESENTATION_FORM_FOR_VERTICAL_HORIZONTAL_ELLIPSIS=65049]="PRESENTATION_FORM_FOR_VERTICAL_HORIZONTAL_ELLIPSIS",e[e.PRESENTATION_FORM_FOR_VERTICAL_TWO_DOT_LEADER=65072]="PRESENTATION_FORM_FOR_VERTICAL_TWO_DOT_LEADER",e[e.SESAME_DOT=65093]="SESAME_DOT",e[e.WHITE_SESAME_DOT=65094]="WHITE_SESAME_DOT",e[e.DASHED_OVERLINE=65097]="DASHED_OVERLINE",e[e.CENTRELINE_OVERLINE=65098]="CENTRELINE_OVERLINE",e[e.WAVY_OVERLINE=65099]="WAVY_OVERLINE",e[e.DOUBLE_WAVY_OVERLINE=65100]="DOUBLE_WAVY_OVERLINE",e[e.SMALL_COMMA=65104]="SMALL_COMMA",e[e.SMALL_IDEOGRAPHIC_COMMA=65105]="SMALL_IDEOGRAPHIC_COMMA",e[e.SMALL_FULL_STOP=65106]="SMALL_FULL_STOP",e[e.SMALL_SEMICOLON=65108]="SMALL_SEMICOLON",e[e.SMALL_COLON=65109]="SMALL_COLON",e[e.SMALL_QUESTION_MARK=65110]="SMALL_QUESTION_MARK",e[e.SMALL_EXCLAMATION_MARK=65111]="SMALL_EXCLAMATION_MARK",e[e.SMALL_NUMBER_SIGN=65119]="SMALL_NUMBER_SIGN",e[e.SMALL_AMPERSAND=65120]="SMALL_AMPERSAND",e[e.SMALL_ASTERISK=65121]="SMALL_ASTERISK",e[e.SMALL_REVERSE_SOLIDUS=65128]="SMALL_REVERSE_SOLIDUS",e[e.SMALL_PERCENT_SIGN=65130]="SMALL_PERCENT_SIGN",e[e.SMALL_COMMERCIAL_AT=65131]="SMALL_COMMERCIAL_AT",e[e.FULLWIDTH_EXCLAMATION_MARK=65281]="FULLWIDTH_EXCLAMATION_MARK",e[e.FULLWIDTH_QUOTATION_MARK=65282]="FULLWIDTH_QUOTATION_MARK",e[e.FULLWIDTH_NUMBER_SIGN=65283]="FULLWIDTH_NUMBER_SIGN",e[e.FULLWIDTH_PERCENT_SIGN=65285]="FULLWIDTH_PERCENT_SIGN",e[e.FULLWIDTH_AMPERSAND=65286]="FULLWIDTH_AMPERSAND",e[e.FULLWIDTH_APOSTROPHE=65287]="FULLWIDTH_APOSTROPHE",e[e.FULLWIDTH_ASTERISK=65290]="FULLWIDTH_ASTERISK",e[e.FULLWIDTH_COMMA=65292]="FULLWIDTH_COMMA",e[e.FULLWIDTH_FULL_STOP=65294]="FULLWIDTH_FULL_STOP",e[e.FULLWIDTH_SOLIDUS=65295]="FULLWIDTH_SOLIDUS",e[e.FULLWIDTH_COLON=65306]="FULLWIDTH_COLON",e[e.FULLWIDTH_SEMICOLON=65307]="FULLWIDTH_SEMICOLON",e[e.FULLWIDTH_QUESTION_MARK=65311]="FULLWIDTH_QUESTION_MARK",e[e.FULLWIDTH_COMMERCIAL_AT=65312]="FULLWIDTH_COMMERCIAL_AT",e[e.FULLWIDTH_REVERSE_SOLIDUS=65340]="FULLWIDTH_REVERSE_SOLIDUS",e[e.HALFWIDTH_IDEOGRAPHIC_FULL_STOP=65377]="HALFWIDTH_IDEOGRAPHIC_FULL_STOP",e[e.HALFWIDTH_IDEOGRAPHIC_COMMA=65380]="HALFWIDTH_IDEOGRAPHIC_COMMA",e[e.HALFWIDTH_KATAKANA_MIDDLE_DOT=65381]="HALFWIDTH_KATAKANA_MIDDLE_DOT",e[e.AEGEAN_WORD_SEPARATOR_LINE=65792]="AEGEAN_WORD_SEPARATOR_LINE",e[e.AEGEAN_WORD_SEPARATOR_DOT=65793]="AEGEAN_WORD_SEPARATOR_DOT",e[e.AEGEAN_CHECK_MARK=65794]="AEGEAN_CHECK_MARK",e[e.UGARITIC_WORD_DIVIDER=66463]="UGARITIC_WORD_DIVIDER",e[e.OLD_PERSIAN_WORD_DIVIDER=66512]="OLD_PERSIAN_WORD_DIVIDER",e[e.CAUCASIAN_ALBANIAN_CITATION_MARK=66927]="CAUCASIAN_ALBANIAN_CITATION_MARK",e[e.IMPERIAL_ARAMAIC_SECTION_SIGN=67671]="IMPERIAL_ARAMAIC_SECTION_SIGN",e[e.PHOENICIAN_WORD_SEPARATOR=67871]="PHOENICIAN_WORD_SEPARATOR",e[e.LYDIAN_TRIANGULAR_MARK=67903]="LYDIAN_TRIANGULAR_MARK",e[e.KHAROSHTHI_PUNCTUATION_DOT=68176]="KHAROSHTHI_PUNCTUATION_DOT",e[e.KHAROSHTHI_PUNCTUATION_SMALL_CIRCLE=68177]="KHAROSHTHI_PUNCTUATION_SMALL_CIRCLE",e[e.KHAROSHTHI_PUNCTUATION_CIRCLE=68178]="KHAROSHTHI_PUNCTUATION_CIRCLE",e[e.KHAROSHTHI_PUNCTUATION_CRESCENT_BAR=68179]="KHAROSHTHI_PUNCTUATION_CRESCENT_BAR",e[e.KHAROSHTHI_PUNCTUATION_MANGALAM=68180]="KHAROSHTHI_PUNCTUATION_MANGALAM",e[e.KHAROSHTHI_PUNCTUATION_LOTUS=68181]="KHAROSHTHI_PUNCTUATION_LOTUS",e[e.KHAROSHTHI_PUNCTUATION_DANDA=68182]="KHAROSHTHI_PUNCTUATION_DANDA",e[e.KHAROSHTHI_PUNCTUATION_DOUBLE_DANDA=68183]="KHAROSHTHI_PUNCTUATION_DOUBLE_DANDA",e[e.KHAROSHTHI_PUNCTUATION_LINES=68184]="KHAROSHTHI_PUNCTUATION_LINES",e[e.OLD_SOUTH_ARABIAN_NUMERIC_INDICATOR=68223]="OLD_SOUTH_ARABIAN_NUMERIC_INDICATOR",e[e.MANICHAEAN_PUNCTUATION_STAR=68336]="MANICHAEAN_PUNCTUATION_STAR",e[e.MANICHAEAN_PUNCTUATION_FLEURON=68337]="MANICHAEAN_PUNCTUATION_FLEURON",e[e.MANICHAEAN_PUNCTUATION_DOUBLE_DOT_WITHIN_DOT=68338]="MANICHAEAN_PUNCTUATION_DOUBLE_DOT_WITHIN_DOT",e[e.MANICHAEAN_PUNCTUATION_DOT_WITHIN_DOT=68339]="MANICHAEAN_PUNCTUATION_DOT_WITHIN_DOT",e[e.MANICHAEAN_PUNCTUATION_DOT=68340]="MANICHAEAN_PUNCTUATION_DOT",e[e.MANICHAEAN_PUNCTUATION_TWO_DOTS=68341]="MANICHAEAN_PUNCTUATION_TWO_DOTS",e[e.MANICHAEAN_PUNCTUATION_LINE_FILLER=68342]="MANICHAEAN_PUNCTUATION_LINE_FILLER",e[e.AVESTAN_ABBREVIATION_MARK=68409]="AVESTAN_ABBREVIATION_MARK",e[e.TINY_TWO_DOTS_OVER_ONE_DOT_PUNCTUATION=68410]="TINY_TWO_DOTS_OVER_ONE_DOT_PUNCTUATION",e[e.SMALL_TWO_DOTS_OVER_ONE_DOT_PUNCTUATION=68411]="SMALL_TWO_DOTS_OVER_ONE_DOT_PUNCTUATION",e[e.LARGE_TWO_DOTS_OVER_ONE_DOT_PUNCTUATION=68412]="LARGE_TWO_DOTS_OVER_ONE_DOT_PUNCTUATION",e[e.LARGE_ONE_DOT_OVER_TWO_DOTS_PUNCTUATION=68413]="LARGE_ONE_DOT_OVER_TWO_DOTS_PUNCTUATION",e[e.LARGE_TWO_RINGS_OVER_ONE_RING_PUNCTUATION=68414]="LARGE_TWO_RINGS_OVER_ONE_RING_PUNCTUATION",e[e.LARGE_ONE_RING_OVER_TWO_RINGS_PUNCTUATION=68415]="LARGE_ONE_RING_OVER_TWO_RINGS_PUNCTUATION",e[e.PSALTER_PAHLAVI_SECTION_MARK=68505]="PSALTER_PAHLAVI_SECTION_MARK",e[e.PSALTER_PAHLAVI_TURNED_SECTION_MARK=68506]="PSALTER_PAHLAVI_TURNED_SECTION_MARK",e[e.PSALTER_PAHLAVI_FOUR_DOTS_WITH_CROSS=68507]="PSALTER_PAHLAVI_FOUR_DOTS_WITH_CROSS",e[e.PSALTER_PAHLAVI_FOUR_DOTS_WITH_DOT=68508]="PSALTER_PAHLAVI_FOUR_DOTS_WITH_DOT",e[e.SOGDIAN_PUNCTUATION_TWO_VERTICAL_BARS=69461]="SOGDIAN_PUNCTUATION_TWO_VERTICAL_BARS",e[e.SOGDIAN_PUNCTUATION_TWO_VERTICAL_BARS_WITH_DOTS=69462]="SOGDIAN_PUNCTUATION_TWO_VERTICAL_BARS_WITH_DOTS",e[e.SOGDIAN_PUNCTUATION_CIRCLE_WITH_DOT=69463]="SOGDIAN_PUNCTUATION_CIRCLE_WITH_DOT",e[e.SOGDIAN_PUNCTUATION_TWO_CIRCLES_WITH_DOTS=69464]="SOGDIAN_PUNCTUATION_TWO_CIRCLES_WITH_DOTS",e[e.SOGDIAN_PUNCTUATION_HALF_CIRCLE_WITH_DOT=69465]="SOGDIAN_PUNCTUATION_HALF_CIRCLE_WITH_DOT",e[e.BRAHMI_DANDA=69703]="BRAHMI_DANDA",e[e.BRAHMI_DOUBLE_DANDA=69704]="BRAHMI_DOUBLE_DANDA",e[e.BRAHMI_PUNCTUATION_DOT=69705]="BRAHMI_PUNCTUATION_DOT",e[e.BRAHMI_PUNCTUATION_DOUBLE_DOT=69706]="BRAHMI_PUNCTUATION_DOUBLE_DOT",e[e.BRAHMI_PUNCTUATION_LINE=69707]="BRAHMI_PUNCTUATION_LINE",e[e.BRAHMI_PUNCTUATION_CRESCENT_BAR=69708]="BRAHMI_PUNCTUATION_CRESCENT_BAR",e[e.BRAHMI_PUNCTUATION_LOTUS=69709]="BRAHMI_PUNCTUATION_LOTUS",e[e.KAITHI_ABBREVIATION_SIGN=69819]="KAITHI_ABBREVIATION_SIGN",e[e.KAITHI_ENUMERATION_SIGN=69820]="KAITHI_ENUMERATION_SIGN",e[e.KAITHI_SECTION_MARK=69822]="KAITHI_SECTION_MARK",e[e.KAITHI_DOUBLE_SECTION_MARK=69823]="KAITHI_DOUBLE_SECTION_MARK",e[e.KAITHI_DANDA=69824]="KAITHI_DANDA",e[e.KAITHI_DOUBLE_DANDA=69825]="KAITHI_DOUBLE_DANDA",e[e.CHAKMA_SECTION_MARK=69952]="CHAKMA_SECTION_MARK",e[e.CHAKMA_DANDA=69953]="CHAKMA_DANDA",e[e.CHAKMA_DOUBLE_DANDA=69954]="CHAKMA_DOUBLE_DANDA",e[e.CHAKMA_QUESTION_MARK=69955]="CHAKMA_QUESTION_MARK",e[e.MAHAJANI_ABBREVIATION_SIGN=70004]="MAHAJANI_ABBREVIATION_SIGN",e[e.MAHAJANI_SECTION_MARK=70005]="MAHAJANI_SECTION_MARK",e[e.SHARADA_DANDA=70085]="SHARADA_DANDA",e[e.SHARADA_DOUBLE_DANDA=70086]="SHARADA_DOUBLE_DANDA",e[e.SHARADA_ABBREVIATION_SIGN=70087]="SHARADA_ABBREVIATION_SIGN",e[e.SHARADA_SEPARATOR=70088]="SHARADA_SEPARATOR",e[e.SHARADA_SUTRA_MARK=70093]="SHARADA_SUTRA_MARK",e[e.SHARADA_SIGN_SIDDHAM=70107]="SHARADA_SIGN_SIDDHAM",e[e.SHARADA_CONTINUATION_SIGN=70109]="SHARADA_CONTINUATION_SIGN",e[e.SHARADA_SECTION_MARK_1=70110]="SHARADA_SECTION_MARK_1",e[e.SHARADA_SECTION_MARK_2=70111]="SHARADA_SECTION_MARK_2",e[e.KHOJKI_DANDA=70200]="KHOJKI_DANDA",e[e.KHOJKI_DOUBLE_DANDA=70201]="KHOJKI_DOUBLE_DANDA",e[e.KHOJKI_WORD_SEPARATOR=70202]="KHOJKI_WORD_SEPARATOR",e[e.KHOJKI_SECTION_MARK=70203]="KHOJKI_SECTION_MARK",e[e.KHOJKI_DOUBLE_SECTION_MARK=70204]="KHOJKI_DOUBLE_SECTION_MARK",e[e.KHOJKI_ABBREVIATION_SIGN=70205]="KHOJKI_ABBREVIATION_SIGN",e[e.MULTANI_SECTION_MARK=70313]="MULTANI_SECTION_MARK",e[e.NEWA_DANDA=70731]="NEWA_DANDA",e[e.NEWA_DOUBLE_DANDA=70732]="NEWA_DOUBLE_DANDA",e[e.NEWA_COMMA=70733]="NEWA_COMMA",e[e.NEWA_GAP_FILLER=70734]="NEWA_GAP_FILLER",e[e.NEWA_ABBREVIATION_SIGN=70735]="NEWA_ABBREVIATION_SIGN",e[e.NEWA_DOUBLE_COMMA=70746]="NEWA_DOUBLE_COMMA",e[e.NEWA_PLACEHOLDER_MARK=70747]="NEWA_PLACEHOLDER_MARK",e[e.NEWA_INSERTION_SIGN=70749]="NEWA_INSERTION_SIGN",e[e.TIRHUTA_ABBREVIATION_SIGN=70854]="TIRHUTA_ABBREVIATION_SIGN",e[e.SIDDHAM_SIGN_SIDDHAM=71105]="SIDDHAM_SIGN_SIDDHAM",e[e.SIDDHAM_DANDA=71106]="SIDDHAM_DANDA",e[e.SIDDHAM_DOUBLE_DANDA=71107]="SIDDHAM_DOUBLE_DANDA",e[e.SIDDHAM_SEPARATOR_DOT=71108]="SIDDHAM_SEPARATOR_DOT",e[e.SIDDHAM_SEPARATOR_BAR=71109]="SIDDHAM_SEPARATOR_BAR",e[e.SIDDHAM_REPETITION_MARK_1=71110]="SIDDHAM_REPETITION_MARK_1",e[e.SIDDHAM_REPETITION_MARK_2=71111]="SIDDHAM_REPETITION_MARK_2",e[e.SIDDHAM_REPETITION_MARK_3=71112]="SIDDHAM_REPETITION_MARK_3",e[e.SIDDHAM_END_OF_TEXT_MARK=71113]="SIDDHAM_END_OF_TEXT_MARK",e[e.SIDDHAM_SECTION_MARK_WITH_TRIDENT_AND_U_SHAPED_ORNAMENTS=71114]="SIDDHAM_SECTION_MARK_WITH_TRIDENT_AND_U_SHAPED_ORNAMENTS",e[e.SIDDHAM_SECTION_MARK_WITH_TRIDENT_AND_DOTTED_CRESCENTS=71115]="SIDDHAM_SECTION_MARK_WITH_TRIDENT_AND_DOTTED_CRESCENTS",e[e.SIDDHAM_SECTION_MARK_WITH_RAYS_AND_DOTTED_CRESCENTS=71116]="SIDDHAM_SECTION_MARK_WITH_RAYS_AND_DOTTED_CRESCENTS",e[e.SIDDHAM_SECTION_MARK_WITH_RAYS_AND_DOTTED_DOUBLE_CRESCENTS=71117]="SIDDHAM_SECTION_MARK_WITH_RAYS_AND_DOTTED_DOUBLE_CRESCENTS",e[e.SIDDHAM_SECTION_MARK_WITH_RAYS_AND_DOTTED_TRIPLE_CRESCENTS=71118]="SIDDHAM_SECTION_MARK_WITH_RAYS_AND_DOTTED_TRIPLE_CRESCENTS",e[e.SIDDHAM_SECTION_MARK_DOUBLE_RING=71119]="SIDDHAM_SECTION_MARK_DOUBLE_RING",e[e.SIDDHAM_SECTION_MARK_DOUBLE_RING_WITH_RAYS=71120]="SIDDHAM_SECTION_MARK_DOUBLE_RING_WITH_RAYS",e[e.SIDDHAM_SECTION_MARK_WITH_DOUBLE_CRESCENTS=71121]="SIDDHAM_SECTION_MARK_WITH_DOUBLE_CRESCENTS",e[e.SIDDHAM_SECTION_MARK_WITH_TRIPLE_CRESCENTS=71122]="SIDDHAM_SECTION_MARK_WITH_TRIPLE_CRESCENTS",e[e.SIDDHAM_SECTION_MARK_WITH_QUADRUPLE_CRESCENTS=71123]="SIDDHAM_SECTION_MARK_WITH_QUADRUPLE_CRESCENTS",e[e.SIDDHAM_SECTION_MARK_WITH_SEPTUPLE_CRESCENTS=71124]="SIDDHAM_SECTION_MARK_WITH_SEPTUPLE_CRESCENTS",e[e.SIDDHAM_SECTION_MARK_WITH_CIRCLES_AND_RAYS=71125]="SIDDHAM_SECTION_MARK_WITH_CIRCLES_AND_RAYS",e[e.SIDDHAM_SECTION_MARK_WITH_CIRCLES_AND_TWO_ENCLOSURES=71126]="SIDDHAM_SECTION_MARK_WITH_CIRCLES_AND_TWO_ENCLOSURES",e[e.SIDDHAM_SECTION_MARK_WITH_CIRCLES_AND_FOUR_ENCLOSURES=71127]="SIDDHAM_SECTION_MARK_WITH_CIRCLES_AND_FOUR_ENCLOSURES",e[e.MODI_DANDA=71233]="MODI_DANDA",e[e.MODI_DOUBLE_DANDA=71234]="MODI_DOUBLE_DANDA",e[e.MODI_ABBREVIATION_SIGN=71235]="MODI_ABBREVIATION_SIGN",e[e.MONGOLIAN_BIRGA_WITH_ORNAMENT=71264]="MONGOLIAN_BIRGA_WITH_ORNAMENT",e[e.MONGOLIAN_ROTATED_BIRGA=71265]="MONGOLIAN_ROTATED_BIRGA",e[e.MONGOLIAN_DOUBLE_BIRGA_WITH_ORNAMENT=71266]="MONGOLIAN_DOUBLE_BIRGA_WITH_ORNAMENT",e[e.MONGOLIAN_TRIPLE_BIRGA_WITH_ORNAMENT=71267]="MONGOLIAN_TRIPLE_BIRGA_WITH_ORNAMENT",e[e.MONGOLIAN_BIRGA_WITH_DOUBLE_ORNAMENT=71268]="MONGOLIAN_BIRGA_WITH_DOUBLE_ORNAMENT",e[e.MONGOLIAN_ROTATED_BIRGA_WITH_ORNAMENT=71269]="MONGOLIAN_ROTATED_BIRGA_WITH_ORNAMENT",e[e.MONGOLIAN_ROTATED_BIRGA_WITH_DOUBLE_ORNAMENT=71270]="MONGOLIAN_ROTATED_BIRGA_WITH_DOUBLE_ORNAMENT",e[e.MONGOLIAN_INVERTED_BIRGA=71271]="MONGOLIAN_INVERTED_BIRGA",e[e.MONGOLIAN_INVERTED_BIRGA_WITH_DOUBLE_ORNAMENT=71272]="MONGOLIAN_INVERTED_BIRGA_WITH_DOUBLE_ORNAMENT",e[e.MONGOLIAN_SWIRL_BIRGA=71273]="MONGOLIAN_SWIRL_BIRGA",e[e.MONGOLIAN_SWIRL_BIRGA_WITH_ORNAMENT=71274]="MONGOLIAN_SWIRL_BIRGA_WITH_ORNAMENT",e[e.MONGOLIAN_SWIRL_BIRGA_WITH_DOUBLE_ORNAMENT=71275]="MONGOLIAN_SWIRL_BIRGA_WITH_DOUBLE_ORNAMENT",e[e.MONGOLIAN_TURNED_SWIRL_BIRGA_WITH_DOUBLE_ORNAMENT=71276]="MONGOLIAN_TURNED_SWIRL_BIRGA_WITH_DOUBLE_ORNAMENT",e[e.AHOM_SIGN_SMALL_SECTION=71484]="AHOM_SIGN_SMALL_SECTION",e[e.AHOM_SIGN_SECTION=71485]="AHOM_SIGN_SECTION",e[e.AHOM_SIGN_RULAI=71486]="AHOM_SIGN_RULAI",e[e.DOGRA_ABBREVIATION_SIGN=71739]="DOGRA_ABBREVIATION_SIGN",e[e.DIVES_AKURU_DOUBLE_DANDA=72004]="DIVES_AKURU_DOUBLE_DANDA",e[e.DIVES_AKURU_GAP_FILLER=72005]="DIVES_AKURU_GAP_FILLER",e[e.DIVES_AKURU_END_OF_TEXT_MARK=72006]="DIVES_AKURU_END_OF_TEXT_MARK",e[e.NANDINAGARI_SIGN_SIDDHAM=72162]="NANDINAGARI_SIGN_SIDDHAM",e[e.ZANABAZAR_SQUARE_INITIAL_HEAD_MARK=72255]="ZANABAZAR_SQUARE_INITIAL_HEAD_MARK",e[e.ZANABAZAR_SQUARE_CLOSING_HEAD_MARK=72256]="ZANABAZAR_SQUARE_CLOSING_HEAD_MARK",e[e.ZANABAZAR_SQUARE_MARK_TSHEG=72257]="ZANABAZAR_SQUARE_MARK_TSHEG",e[e.ZANABAZAR_SQUARE_MARK_SHAD=72258]="ZANABAZAR_SQUARE_MARK_SHAD",e[e.ZANABAZAR_SQUARE_MARK_DOUBLE_SHAD=72259]="ZANABAZAR_SQUARE_MARK_DOUBLE_SHAD",e[e.ZANABAZAR_SQUARE_MARK_LONG_TSHEG=72260]="ZANABAZAR_SQUARE_MARK_LONG_TSHEG",e[e.ZANABAZAR_SQUARE_INITIAL_DOUBLE_LINED_HEAD_MARK=72261]="ZANABAZAR_SQUARE_INITIAL_DOUBLE_LINED_HEAD_MARK",e[e.ZANABAZAR_SQUARE_CLOSING_DOUBLE_LINED_HEAD_MARK=72262]="ZANABAZAR_SQUARE_CLOSING_DOUBLE_LINED_HEAD_MARK",e[e.SOYOMBO_MARK_TSHEG=72346]="SOYOMBO_MARK_TSHEG",e[e.SOYOMBO_MARK_SHAD=72347]="SOYOMBO_MARK_SHAD",e[e.SOYOMBO_MARK_DOUBLE_SHAD=72348]="SOYOMBO_MARK_DOUBLE_SHAD",e[e.SOYOMBO_HEAD_MARK_WITH_MOON_AND_SUN_AND_TRIPLE_FLAME=72350]="SOYOMBO_HEAD_MARK_WITH_MOON_AND_SUN_AND_TRIPLE_FLAME",e[e.SOYOMBO_HEAD_MARK_WITH_MOON_AND_SUN_AND_FLAME=72351]="SOYOMBO_HEAD_MARK_WITH_MOON_AND_SUN_AND_FLAME",e[e.SOYOMBO_HEAD_MARK_WITH_MOON_AND_SUN=72352]="SOYOMBO_HEAD_MARK_WITH_MOON_AND_SUN",e[e.SOYOMBO_TERMINAL_MARK_1=72353]="SOYOMBO_TERMINAL_MARK_1",e[e.SOYOMBO_TERMINAL_MARK_2=72354]="SOYOMBO_TERMINAL_MARK_2",e[e.BHAIKSUKI_DANDA=72769]="BHAIKSUKI_DANDA",e[e.BHAIKSUKI_DOUBLE_DANDA=72770]="BHAIKSUKI_DOUBLE_DANDA",e[e.BHAIKSUKI_WORD_SEPARATOR=72771]="BHAIKSUKI_WORD_SEPARATOR",e[e.BHAIKSUKI_GAP_FILLER_1=72772]="BHAIKSUKI_GAP_FILLER_1",e[e.BHAIKSUKI_GAP_FILLER_2=72773]="BHAIKSUKI_GAP_FILLER_2",e[e.MARCHEN_HEAD_MARK=72816]="MARCHEN_HEAD_MARK",e[e.MARCHEN_MARK_SHAD=72817]="MARCHEN_MARK_SHAD",e[e.MAKASAR_PASSIMBANG=73463]="MAKASAR_PASSIMBANG",e[e.MAKASAR_END_OF_SECTION=73464]="MAKASAR_END_OF_SECTION",e[e.TAMIL_PUNCTUATION_END_OF_TEXT=73727]="TAMIL_PUNCTUATION_END_OF_TEXT",e[e.CUNEIFORM_PUNCTUATION_SIGN_OLD_ASSYRIAN_WORD_DIVIDER=74864]="CUNEIFORM_PUNCTUATION_SIGN_OLD_ASSYRIAN_WORD_DIVIDER",e[e.CUNEIFORM_PUNCTUATION_SIGN_VERTICAL_COLON=74865]="CUNEIFORM_PUNCTUATION_SIGN_VERTICAL_COLON",e[e.CUNEIFORM_PUNCTUATION_SIGN_DIAGONAL_COLON=74866]="CUNEIFORM_PUNCTUATION_SIGN_DIAGONAL_COLON",e[e.CUNEIFORM_PUNCTUATION_SIGN_DIAGONAL_TRICOLON=74867]="CUNEIFORM_PUNCTUATION_SIGN_DIAGONAL_TRICOLON",e[e.CUNEIFORM_PUNCTUATION_SIGN_DIAGONAL_QUADCOLON=74868]="CUNEIFORM_PUNCTUATION_SIGN_DIAGONAL_QUADCOLON",e[e.MRO_DANDA=92782]="MRO_DANDA",e[e.MRO_DOUBLE_DANDA=92783]="MRO_DOUBLE_DANDA",e[e.BASSA_VAH_FULL_STOP=92917]="BASSA_VAH_FULL_STOP",e[e.PAHAWH_HMONG_SIGN_VOS_THOM=92983]="PAHAWH_HMONG_SIGN_VOS_THOM",e[e.PAHAWH_HMONG_SIGN_VOS_TSHAB_CEEB=92984]="PAHAWH_HMONG_SIGN_VOS_TSHAB_CEEB",e[e.PAHAWH_HMONG_SIGN_CIM_CHEEM=92985]="PAHAWH_HMONG_SIGN_CIM_CHEEM",e[e.PAHAWH_HMONG_SIGN_VOS_THIAB=92986]="PAHAWH_HMONG_SIGN_VOS_THIAB",e[e.PAHAWH_HMONG_SIGN_VOS_FEEM=92987]="PAHAWH_HMONG_SIGN_VOS_FEEM",e[e.PAHAWH_HMONG_SIGN_XAUS=92996]="PAHAWH_HMONG_SIGN_XAUS",e[e.MEDEFAIDRIN_COMMA=93847]="MEDEFAIDRIN_COMMA",e[e.MEDEFAIDRIN_FULL_STOP=93848]="MEDEFAIDRIN_FULL_STOP",e[e.MEDEFAIDRIN_SYMBOL_AIVA=93849]="MEDEFAIDRIN_SYMBOL_AIVA",e[e.MEDEFAIDRIN_EXCLAMATION_OH=93850]="MEDEFAIDRIN_EXCLAMATION_OH",e[e.OLD_CHINESE_HOOK_MARK=94178]="OLD_CHINESE_HOOK_MARK",e[e.DUPLOYAN_PUNCTUATION_CHINOOK_FULL_STOP=113823]="DUPLOYAN_PUNCTUATION_CHINOOK_FULL_STOP",e[e.SIGNWRITING_COMMA=121479]="SIGNWRITING_COMMA",e[e.SIGNWRITING_FULL_STOP=121480]="SIGNWRITING_FULL_STOP",e[e.SIGNWRITING_SEMICOLON=121481]="SIGNWRITING_SEMICOLON",e[e.SIGNWRITING_COLON=121482]="SIGNWRITING_COLON",e[e.SIGNWRITING_PARENTHESIS=121483]="SIGNWRITING_PARENTHESIS",e[e.ADLAM_INITIAL_EXCLAMATION_MARK=125278]="ADLAM_INITIAL_EXCLAMATION_MARK",e[e.ADLAM_INITIAL_QUESTION_MARK=125279]="ADLAM_INITIAL_QUESTION_MARK"}(UnicodePoCodePoint||(UnicodePoCodePoint={})),function(e){e[e.LEFT_PARENTHESIS=40]="LEFT_PARENTHESIS",e[e.LEFT_SQUARE_BRACKET=91]="LEFT_SQUARE_BRACKET",e[e.LEFT_CURLY_BRACKET=123]="LEFT_CURLY_BRACKET",e[e.TIBETAN_MARK_GUG_RTAGS_GYON=3898]="TIBETAN_MARK_GUG_RTAGS_GYON",e[e.TIBETAN_MARK_ANG_KHANG_GYON=3900]="TIBETAN_MARK_ANG_KHANG_GYON",e[e.OGHAM_FEATHER_MARK=5787]="OGHAM_FEATHER_MARK",e[e.SINGLE_LOW_9_QUOTATION_MARK=8218]="SINGLE_LOW_9_QUOTATION_MARK",e[e.DOUBLE_LOW_9_QUOTATION_MARK=8222]="DOUBLE_LOW_9_QUOTATION_MARK",e[e.LEFT_SQUARE_BRACKET_WITH_QUILL=8261]="LEFT_SQUARE_BRACKET_WITH_QUILL",e[e.SUPERSCRIPT_LEFT_PARENTHESIS=8317]="SUPERSCRIPT_LEFT_PARENTHESIS",e[e.SUBSCRIPT_LEFT_PARENTHESIS=8333]="SUBSCRIPT_LEFT_PARENTHESIS",e[e.LEFT_CEILING=8968]="LEFT_CEILING",e[e.LEFT_FLOOR=8970]="LEFT_FLOOR",e[e.LEFT_POINTING_ANGLE_BRACKET=9001]="LEFT_POINTING_ANGLE_BRACKET",e[e.MEDIUM_LEFT_PARENTHESIS_ORNAMENT=10088]="MEDIUM_LEFT_PARENTHESIS_ORNAMENT",e[e.MEDIUM_FLATTENED_LEFT_PARENTHESIS_ORNAMENT=10090]="MEDIUM_FLATTENED_LEFT_PARENTHESIS_ORNAMENT",e[e.MEDIUM_LEFT_POINTING_ANGLE_BRACKET_ORNAMENT=10092]="MEDIUM_LEFT_POINTING_ANGLE_BRACKET_ORNAMENT",e[e.HEAVY_LEFT_POINTING_ANGLE_QUOTATION_MARK_ORNAMENT=10094]="HEAVY_LEFT_POINTING_ANGLE_QUOTATION_MARK_ORNAMENT",e[e.HEAVY_LEFT_POINTING_ANGLE_BRACKET_ORNAMENT=10096]="HEAVY_LEFT_POINTING_ANGLE_BRACKET_ORNAMENT",e[e.LIGHT_LEFT_TORTOISE_SHELL_BRACKET_ORNAMENT=10098]="LIGHT_LEFT_TORTOISE_SHELL_BRACKET_ORNAMENT",e[e.MEDIUM_LEFT_CURLY_BRACKET_ORNAMENT=10100]="MEDIUM_LEFT_CURLY_BRACKET_ORNAMENT",e[e.LEFT_S_SHAPED_BAG_DELIMITER=10181]="LEFT_S_SHAPED_BAG_DELIMITER",e[e.MATHEMATICAL_LEFT_WHITE_SQUARE_BRACKET=10214]="MATHEMATICAL_LEFT_WHITE_SQUARE_BRACKET",e[e.MATHEMATICAL_LEFT_ANGLE_BRACKET=10216]="MATHEMATICAL_LEFT_ANGLE_BRACKET",e[e.MATHEMATICAL_LEFT_DOUBLE_ANGLE_BRACKET=10218]="MATHEMATICAL_LEFT_DOUBLE_ANGLE_BRACKET",e[e.MATHEMATICAL_LEFT_WHITE_TORTOISE_SHELL_BRACKET=10220]="MATHEMATICAL_LEFT_WHITE_TORTOISE_SHELL_BRACKET",e[e.MATHEMATICAL_LEFT_FLATTENED_PARENTHESIS=10222]="MATHEMATICAL_LEFT_FLATTENED_PARENTHESIS",e[e.LEFT_WHITE_CURLY_BRACKET=10627]="LEFT_WHITE_CURLY_BRACKET",e[e.LEFT_WHITE_PARENTHESIS=10629]="LEFT_WHITE_PARENTHESIS",e[e.Z_NOTATION_LEFT_IMAGE_BRACKET=10631]="Z_NOTATION_LEFT_IMAGE_BRACKET",e[e.Z_NOTATION_LEFT_BINDING_BRACKET=10633]="Z_NOTATION_LEFT_BINDING_BRACKET",e[e.LEFT_SQUARE_BRACKET_WITH_UNDERBAR=10635]="LEFT_SQUARE_BRACKET_WITH_UNDERBAR",e[e.LEFT_SQUARE_BRACKET_WITH_TICK_IN_TOP_CORNER=10637]="LEFT_SQUARE_BRACKET_WITH_TICK_IN_TOP_CORNER",e[e.LEFT_SQUARE_BRACKET_WITH_TICK_IN_BOTTOM_CORNER=10639]="LEFT_SQUARE_BRACKET_WITH_TICK_IN_BOTTOM_CORNER",e[e.LEFT_ANGLE_BRACKET_WITH_DOT=10641]="LEFT_ANGLE_BRACKET_WITH_DOT",e[e.LEFT_ARC_LESS_THAN_BRACKET=10643]="LEFT_ARC_LESS_THAN_BRACKET",e[e.DOUBLE_LEFT_ARC_GREATER_THAN_BRACKET=10645]="DOUBLE_LEFT_ARC_GREATER_THAN_BRACKET",e[e.LEFT_BLACK_TORTOISE_SHELL_BRACKET=10647]="LEFT_BLACK_TORTOISE_SHELL_BRACKET",e[e.LEFT_WIGGLY_FENCE=10712]="LEFT_WIGGLY_FENCE",e[e.LEFT_DOUBLE_WIGGLY_FENCE=10714]="LEFT_DOUBLE_WIGGLY_FENCE",e[e.LEFT_POINTING_CURVED_ANGLE_BRACKET=10748]="LEFT_POINTING_CURVED_ANGLE_BRACKET",e[e.TOP_LEFT_HALF_BRACKET=11810]="TOP_LEFT_HALF_BRACKET",e[e.BOTTOM_LEFT_HALF_BRACKET=11812]="BOTTOM_LEFT_HALF_BRACKET",e[e.LEFT_SIDEWAYS_U_BRACKET=11814]="LEFT_SIDEWAYS_U_BRACKET",e[e.LEFT_DOUBLE_PARENTHESIS=11816]="LEFT_DOUBLE_PARENTHESIS",e[e.DOUBLE_LOW_REVERSED_9_QUOTATION_MARK=11842]="DOUBLE_LOW_REVERSED_9_QUOTATION_MARK",e[e.LEFT_ANGLE_BRACKET=12296]="LEFT_ANGLE_BRACKET",e[e.LEFT_DOUBLE_ANGLE_BRACKET=12298]="LEFT_DOUBLE_ANGLE_BRACKET",e[e.LEFT_CORNER_BRACKET=12300]="LEFT_CORNER_BRACKET",e[e.LEFT_WHITE_CORNER_BRACKET=12302]="LEFT_WHITE_CORNER_BRACKET",e[e.LEFT_BLACK_LENTICULAR_BRACKET=12304]="LEFT_BLACK_LENTICULAR_BRACKET",e[e.LEFT_TORTOISE_SHELL_BRACKET=12308]="LEFT_TORTOISE_SHELL_BRACKET",e[e.LEFT_WHITE_LENTICULAR_BRACKET=12310]="LEFT_WHITE_LENTICULAR_BRACKET",e[e.LEFT_WHITE_TORTOISE_SHELL_BRACKET=12312]="LEFT_WHITE_TORTOISE_SHELL_BRACKET",e[e.LEFT_WHITE_SQUARE_BRACKET=12314]="LEFT_WHITE_SQUARE_BRACKET",e[e.REVERSED_DOUBLE_PRIME_QUOTATION_MARK=12317]="REVERSED_DOUBLE_PRIME_QUOTATION_MARK",e[e.ORNATE_RIGHT_PARENTHESIS=64831]="ORNATE_RIGHT_PARENTHESIS",e[e.PRESENTATION_FORM_FOR_VERTICAL_LEFT_WHITE_LENTICULAR_BRACKET=65047]="PRESENTATION_FORM_FOR_VERTICAL_LEFT_WHITE_LENTICULAR_BRACKET",e[e.PRESENTATION_FORM_FOR_VERTICAL_LEFT_PARENTHESIS=65077]="PRESENTATION_FORM_FOR_VERTICAL_LEFT_PARENTHESIS",e[e.PRESENTATION_FORM_FOR_VERTICAL_LEFT_CURLY_BRACKET=65079]="PRESENTATION_FORM_FOR_VERTICAL_LEFT_CURLY_BRACKET",e[e.PRESENTATION_FORM_FOR_VERTICAL_LEFT_TORTOISE_SHELL_BRACKET=65081]="PRESENTATION_FORM_FOR_VERTICAL_LEFT_TORTOISE_SHELL_BRACKET",e[e.PRESENTATION_FORM_FOR_VERTICAL_LEFT_BLACK_LENTICULAR_BRACKET=65083]="PRESENTATION_FORM_FOR_VERTICAL_LEFT_BLACK_LENTICULAR_BRACKET",e[e.PRESENTATION_FORM_FOR_VERTICAL_LEFT_DOUBLE_ANGLE_BRACKET=65085]="PRESENTATION_FORM_FOR_VERTICAL_LEFT_DOUBLE_ANGLE_BRACKET",e[e.PRESENTATION_FORM_FOR_VERTICAL_LEFT_ANGLE_BRACKET=65087]="PRESENTATION_FORM_FOR_VERTICAL_LEFT_ANGLE_BRACKET",e[e.PRESENTATION_FORM_FOR_VERTICAL_LEFT_CORNER_BRACKET=65089]="PRESENTATION_FORM_FOR_VERTICAL_LEFT_CORNER_BRACKET",e[e.PRESENTATION_FORM_FOR_VERTICAL_LEFT_WHITE_CORNER_BRACKET=65091]="PRESENTATION_FORM_FOR_VERTICAL_LEFT_WHITE_CORNER_BRACKET",e[e.PRESENTATION_FORM_FOR_VERTICAL_LEFT_SQUARE_BRACKET=65095]="PRESENTATION_FORM_FOR_VERTICAL_LEFT_SQUARE_BRACKET",e[e.SMALL_LEFT_PARENTHESIS=65113]="SMALL_LEFT_PARENTHESIS",e[e.SMALL_LEFT_CURLY_BRACKET=65115]="SMALL_LEFT_CURLY_BRACKET",e[e.SMALL_LEFT_TORTOISE_SHELL_BRACKET=65117]="SMALL_LEFT_TORTOISE_SHELL_BRACKET",e[e.FULLWIDTH_LEFT_PARENTHESIS=65288]="FULLWIDTH_LEFT_PARENTHESIS",e[e.FULLWIDTH_LEFT_SQUARE_BRACKET=65339]="FULLWIDTH_LEFT_SQUARE_BRACKET",e[e.FULLWIDTH_LEFT_CURLY_BRACKET=65371]="FULLWIDTH_LEFT_CURLY_BRACKET",e[e.FULLWIDTH_LEFT_WHITE_PARENTHESIS=65375]="FULLWIDTH_LEFT_WHITE_PARENTHESIS",e[e.HALFWIDTH_LEFT_CORNER_BRACKET=65378]="HALFWIDTH_LEFT_CORNER_BRACKET"}(UnicodePsCodePoint||(UnicodePsCodePoint={})),function(e){e[e.SPACE=32]="SPACE",e[e.NO_BREAK_SPACE=160]="NO_BREAK_SPACE",e[e.OGHAM_SPACE_MARK=5760]="OGHAM_SPACE_MARK",e[e.EN_QUAD=8192]="EN_QUAD",e[e.EM_QUAD=8193]="EM_QUAD",e[e.EN_SPACE=8194]="EN_SPACE",e[e.EM_SPACE=8195]="EM_SPACE",e[e.THREE_PER_EM_SPACE=8196]="THREE_PER_EM_SPACE",e[e.FOUR_PER_EM_SPACE=8197]="FOUR_PER_EM_SPACE",e[e.SIX_PER_EM_SPACE=8198]="SIX_PER_EM_SPACE",e[e.FIGURE_SPACE=8199]="FIGURE_SPACE",e[e.PUNCTUATION_SPACE=8200]="PUNCTUATION_SPACE",e[e.THIN_SPACE=8201]="THIN_SPACE",e[e.HAIR_SPACE=8202]="HAIR_SPACE",e[e.NARROW_NO_BREAK_SPACE=8239]="NARROW_NO_BREAK_SPACE",e[e.MEDIUM_MATHEMATICAL_SPACE=8287]="MEDIUM_MATHEMATICAL_SPACE",e[e.IDEOGRAPHIC_SPACE=12288]="IDEOGRAPHIC_SPACE"}(UnicodeZsCodePoint||(UnicodeZsCodePoint={})),function(e){e[e.LINE_END=-1]="LINE_END",e[e.SPACE=-2]="SPACE"}(VirtualCodePoint||(VirtualCodePoint={})),createCodePointSearcher([AsciiCodePoint.HT,AsciiCodePoint.LF,AsciiCodePoint.VT,AsciiCodePoint.FF,AsciiCodePoint.CR,AsciiCodePoint.SPACE]);const[isAsciiPunctuationCharacter,asciiPunctuationCharacters]=createCodePointSearcher([AsciiCodePoint.EXCLAMATION_MARK,AsciiCodePoint.DOUBLE_QUOTE,AsciiCodePoint.NUMBER_SIGN,AsciiCodePoint.DOLLAR_SIGN,AsciiCodePoint.PERCENT_SIGN,AsciiCodePoint.AMPERSAND,AsciiCodePoint.SINGLE_QUOTE,AsciiCodePoint.OPEN_PARENTHESIS,AsciiCodePoint.CLOSE_PARENTHESIS,AsciiCodePoint.ASTERISK,AsciiCodePoint.PLUS_SIGN,AsciiCodePoint.COMMA,AsciiCodePoint.MINUS_SIGN,AsciiCodePoint.DOT,AsciiCodePoint.SLASH,AsciiCodePoint.COLON,AsciiCodePoint.SEMICOLON,AsciiCodePoint.OPEN_ANGLE,AsciiCodePoint.EQUALS_SIGN,AsciiCodePoint.CLOSE_ANGLE,AsciiCodePoint.QUESTION_MARK,AsciiCodePoint.AT_SIGN,AsciiCodePoint.OPEN_BRACKET,AsciiCodePoint.BACKSLASH,AsciiCodePoint.CLOSE_BRACKET,AsciiCodePoint.CARET,AsciiCodePoint.UNDERSCORE,AsciiCodePoint.BACKTICK,AsciiCodePoint.OPEN_BRACE,AsciiCodePoint.VERTICAL_SLASH,AsciiCodePoint.CLOSE_BRACE,AsciiCodePoint.TILDE]),isAsciiDigitCharacter=e=>e>=AsciiCodePoint.DIGIT0&&e<=AsciiCodePoint.DIGIT9,isAsciiLowerLetter=e=>e>=AsciiCodePoint.LOWERCASE_A&&e<=AsciiCodePoint.LOWERCASE_Z,isAsciiUpperLetter=e=>e>=AsciiCodePoint.UPPERCASE_A&&e<=AsciiCodePoint.UPPERCASE_Z,isAsciiLetter=e=>isAsciiLowerLetter(e)||isAsciiUpperLetter(e),isAlphanumeric=e=>isAsciiLowerLetter(e)||isAsciiUpperLetter(e)||isAsciiDigitCharacter(e),isAsciiCharacter=e=>e>=AsciiCodePoint.NUL&&e<=AsciiCodePoint.DELETE,[isAsciiControlCharacter,asciiControlCharacters]=createCodePointSearcher([AsciiCodePoint.NUL,AsciiCodePoint.SOH,AsciiCodePoint.STX,AsciiCodePoint.ETX,AsciiCodePoint.EOT,AsciiCodePoint.ENQ,AsciiCodePoint.ACK,AsciiCodePoint.BEL,AsciiCodePoint.BS,AsciiCodePoint.HT,AsciiCodePoint.LF,AsciiCodePoint.VT,AsciiCodePoint.FF,AsciiCodePoint.CR,AsciiCodePoint.SO,AsciiCodePoint.SI,AsciiCodePoint.DLE,AsciiCodePoint.DC1,AsciiCodePoint.DC2,AsciiCodePoint.DC3,AsciiCodePoint.DC4,AsciiCodePoint.NAK,AsciiCodePoint.SYN,AsciiCodePoint.ETB,AsciiCodePoint.CAN,AsciiCodePoint.EM,AsciiCodePoint.SUB,AsciiCodePoint.ESC,AsciiCodePoint.FS,AsciiCodePoint.GS,AsciiCodePoint.RS,AsciiCodePoint.US,AsciiCodePoint.DELETE]),[isWhitespaceCharacter,whitespaceCharacters]=createCodePointSearcher([AsciiCodePoint.VT,AsciiCodePoint.FF,AsciiCodePoint.SPACE,VirtualCodePoint.SPACE,VirtualCodePoint.LINE_END]);AsciiCodePoint.SPACE,VirtualCodePoint.SPACE;const isSpaceCharacter=e=>e===AsciiCodePoint.SPACE||e===VirtualCodePoint.SPACE,isLineEnding=e=>e===VirtualCodePoint.LINE_END,[isPunctuationCharacter,punctuationCharacters]=createCodePointSearcher([...asciiPunctuationCharacters,...collectCodePointsFromEnum(UnicodePcCodePoint),...collectCodePointsFromEnum(UnicodePdCodePoint),...collectCodePointsFromEnum(UnicodePeCodePoint),...collectCodePointsFromEnum(UnicodePfCodePoint),...collectCodePointsFromEnum(UnicodePiCodePoint),...collectCodePointsFromEnum(UnicodePoCodePoint),...collectCodePointsFromEnum(UnicodePsCodePoint)]),isSpaceLike=e=>isSpaceCharacter(e)||isLineEnding(e),[isUnicodeWhitespaceCharacter,unicodeWhitespaceCharacters]=createCodePointSearcher([AsciiCodePoint.HT,AsciiCodePoint.LF,AsciiCodePoint.FF,AsciiCodePoint.CR,VirtualCodePoint.SPACE,VirtualCodePoint.LINE_END,...collectCodePointsFromEnum(UnicodeZsCodePoint)]);var UnicodeCodePoint;function createEntityReferenceTrie(){const e=(e,n)=>{if(e.length<=4){for(let t=0;t<e.length;++t)if(e[t].key>=n)return t;return e.length}let t=0,i=e.length;for(;t<i;){const o=t+i>>>1;e[o].key<n?t=o+1:i=o}return t},n={key:0,children:[]};return{insert:(t,i)=>{let o=n;for(const n of t){const t=e(o.children,n);if(t>=o.children.length){const e={key:n,children:[]};o.children.push(e),o=e;continue}let i=o.children[t];i.key!==n?(i={key:n,children:[]},o.children.splice(t,0,i),o=i):o=i}o.value=i},search:(t,i,o)=>{let a=n;for(let n=i;n<o;++n){const i=t[n].codePoint,o=e(a.children,i);if(o>=a.children.length)return null;const A=a.children[o];if(A.key!==i)return null;if(null!=A.value)return{nextIndex:n+1,value:A.value};a=A}return null}}}!function(e){e[e.REPLACEMENT_CHARACTER=65533]="REPLACEMENT_CHARACTER"}(UnicodeCodePoint||(UnicodeCodePoint={}));const entityReferenceTrie=createEntityReferenceTrie();function eatEntityReference(e,n,t){if(n+1>=t)return null;const i=entityReferenceTrie.search(e,n,t);if(null!=i)return i;if(e[n].codePoint!==AsciiCodePoint.NUMBER_SIGN)return null;let o,a=0,A=n+1;if(e[A].codePoint===AsciiCodePoint.LOWERCASE_X||e[A].codePoint===AsciiCodePoint.UPPERCASE_X){A+=1;for(let n=1;n<=6&&A<t;++n,++A){const n=e[A].codePoint;if(isAsciiDigitCharacter(n))a=(a<<4)+(n-AsciiCodePoint.DIGIT0);else if(n>=AsciiCodePoint.UPPERCASE_A&&n<=AsciiCodePoint.UPPERCASE_F)a=(a<<4)+(n-AsciiCodePoint.UPPERCASE_A+10);else{if(!(n>=AsciiCodePoint.LOWERCASE_A&&n<=AsciiCodePoint.LOWERCASE_F))break;a=(a<<4)+(n-AsciiCodePoint.LOWERCASE_A+10)}}}else for(let n=1;n<=7&&A<t;++n,++A){const n=e[A].codePoint;if(!isAsciiDigitCharacter(n))break;a=10*a+(n-AsciiCodePoint.DIGIT0)}if(A>=t||e[A].codePoint!==AsciiCodePoint.SEMICOLON)return null;try{0===a&&(a=UnicodeCodePoint.REPLACEMENT_CHARACTER),o=String.fromCodePoint(a)}catch(e){o=String.fromCodePoint(UnicodeCodePoint.REPLACEMENT_CHARACTER)}return{nextIndex:A+1,value:o}}function foldCase(e){return Array.from(e).map((e=>{var n;return null!==(n=foldingCaseCodeMap[e])&&void 0!==n?n:e})).join("")}function*createNodePointGenerator(e){let n=0,t=1,i=1;const o="string"==typeof e?[e]:e;for(const e of o){const o=[];for(const n of e){const e=n.codePointAt(0);o.push(e)}const a=[],A=o.length;for(let e=0;e<A;++e){const l=o[e];switch(l){case AsciiCodePoint.HT:for(let e=0;e<4;++e)a.push({line:i,column:t,offset:n,codePoint:VirtualCodePoint.SPACE});n+=1,t+=1;break;case AsciiCodePoint.LF:a.push({line:i,column:t,offset:n,codePoint:VirtualCodePoint.LINE_END}),n+=1,t=1,i+=1;break;case AsciiCodePoint.CR:a.push({line:i,column:t,offset:n,codePoint:VirtualCodePoint.LINE_END}),n+=1,t=1,i+=1,e+1<A&&o[e+1]===AsciiCodePoint.LF&&(n+=1,e+=1);break;case AsciiCodePoint.NUL:a.push({line:i,column:t,offset:n,codePoint:UnicodeCodePoint.REPLACEMENT_CHARACTER}),n+=1,t+=1;break;default:a.push({line:i,column:t,offset:n,codePoint:l}),n+=1,t+=1}}yield a}}function calcStringFromNodePoints(e,n=0,t=e.length,i=!1){i&&([n,t]=calcTrimBoundaryOfCodePoints(e,n,t));let o="";for(let i,a=n;a<t;++a){const n=e[a].codePoint;switch(n){case VirtualCodePoint.SPACE:{for(i=a+1;i<t&&e[i].codePoint===VirtualCodePoint.SPACE;++i);const n=i-a>>2,A=i-a&3;for(let e=0;e<A;++e)o+=" ";for(let e=0;e<n;++e)o+="\t";a=i-1;break}case VirtualCodePoint.LINE_END:o+="\n";break;default:o+=String.fromCodePoint(n)}}return o}function calcEscapedStringFromNodePoints(e,n=0,t=e.length,i=!1){i&&([n,t]=calcTrimBoundaryOfCodePoints(e,n,t));let o="";for(let i,a=n;a<t;++a){const n=e[a].codePoint;if(n===AsciiCodePoint.BACKSLASH&&a+1<t){const n=e[a+1].codePoint;if(isAsciiPunctuationCharacter(n)){a+=1,o+=String.fromCodePoint(n);continue}}switch(n){case VirtualCodePoint.SPACE:{for(i=a+1;i<t&&e[i].codePoint===VirtualCodePoint.SPACE;++i);const n=i-a>>2,A=i-a&3;for(let e=0;e<A;++e)o+=" ";for(let e=0;e<n;++e)o+="\t";a=i-1;break}case VirtualCodePoint.LINE_END:o+="\n";break;case AsciiCodePoint.AMPERSAND:{const n=eatEntityReference(e,a+1,t);null==n?o+="&":(o+=n.value,a=n.nextIndex-1);break}default:o+=String.fromCodePoint(n)}}return o}function calcTrimBoundaryOfCodePoints(e,n=0,t=e.length){let i=n,o=t-1;for(;i<=o;++i){const n=e[i];if(!isWhitespaceCharacter(n.codePoint))break}for(;i<=o;--o){const n=e[o];if(!isWhitespaceCharacter(n.codePoint))break}return[i,o+1]}entityReferences.forEach((e=>entityReferenceTrie.insert(e.key,e.value))),(()=>{try{const e=/\p{Script=Han}|[\u{3002}\u{ff1f}\u{ff01}\u{ff0c}\u{3001}\u{ff1b}\u{ff1a}\u{201c}\u{201d}\u{2018}\u{2019}\u{ff08}\u{ff09}\u{300a}\u{300b}\u{3008}\u{3009}\u{3010}\u{3011}\u{300e}\u{300f}\u{300c}\u{300d}\u{fe43}\u{fe44}\u{3014}\u{3015}\u{2026}\u{2014}\u{ff5e}\u{fe4f}\u{ffe5}]/u.source,n=new RegExp(`(${e})\\n+(${e})`,"gu")}catch(e){const n=/[\u{4E00}-\u{9FCC}\u{3400}-\u{4DB5}\u{FA0E}\u{FA0F}\u{FA11}\u{FA13}\u{FA14}\u{FA1F}\u{FA21}\u{FA23}\u{FA24}\u{FA27}-\u{FA29}]|[\u{d840}-\u{d868}][\u{dc00}-\u{dfff}]|\u{d869}[\u{dc00}-\u{ded6}\u{df00}-\u{dfff}]|[\u{d86a}-\u{d86c}][\u{dc00}-\u{dfff}]|\u{d86d}[\u{dc00}-\u{df34}\u{df40}-\u{dfff}]|\u{d86e}[\u{dc00}-\u{dc1d}]/u.source,t=new RegExp(`(${n})\\n+(${n})`,"gu");return e=>e.replace(t,"$1$2")}})();const AdmonitionType="admonition",BlockquoteType="blockquote",BreakType="break",CodeType="code",DefinitionType="definition",DeleteType="delete",EcmaImportType="ecmaImport",EmphasisType="emphasis",FootnoteType="footnote",FootnoteDefinitionType="footnoteDefinition",FootnoteReferenceType="footnoteReference",HeadingType="heading",HtmlType="html";var HtmlContentType;!function(e){e.CDATA="cdata",e.Closing="closing",e.Comment="comment",e.Declaration="declaration",e.Instruction="instruction",e.Open="open"}(HtmlContentType||(HtmlContentType={}));const ImageReferenceType="imageReference",ImageType="image",InlineCodeType="inlineCode",InlineMathType="inlineMath",LinkReferenceType="linkReference",LinkType="link",ListItemType="listItem";var TaskStatus;!function(e){e.TODO="todo",e.DOING="doing",e.DONE="done"}(TaskStatus||(TaskStatus={}));const ListType="list",MathType="math",ParagraphType="paragraph",StrongType="strong",TableCellType="tableCell",TableRowType="tableRow",TableType="table",TextType="text",ThematicBreakType="thematicBreak";var TokenizerPriority;!function(e){e[e.ATOMIC=10]="ATOMIC",e[e.FENCED_BLOCK=10]="FENCED_BLOCK",e[e.CONTAINING_BLOCK=10]="CONTAINING_BLOCK",e[e.INTERRUPTABLE_BLOCK=2]="INTERRUPTABLE_BLOCK",e[e.IMAGES=4]="IMAGES",e[e.LINKS=3]="LINKS",e[e.CONTAINING_INLINE=2]="CONTAINING_INLINE",e[e.SOFT_INLINE=1]="SOFT_INLINE",e[e.FALLBACK=-1]="FALLBACK"}(TokenizerPriority||(TokenizerPriority={}));class BaseInlineTokenizer{constructor(e){this.name=e.name,this.priority=e.priority}*findDelimiter(e,n){let t=-1,i=null;for(;;){const[o,a]=yield i;t===a&&(null==i||i.startIndex>=o)||(t=a,i=this._findDelimiter(o,a,e,n))}}toString(){return this.name}}class BaseBlockTokenizer{constructor(e){this.name=e.name,this.priority=e.priority}toString(){return this.name}}const PhrasingContentType="phrasingContent";function calcStartYastNodePoint(e,n){const{line:t,column:i,offset:o}=e[n];return{line:t,column:i,offset:o}}function calcEndYastNodePoint(e,n){const{line:t,column:i,offset:o}=e[n];return{line:t,column:i+1,offset:o+1}}function*createPhrasingLineGenerator(e){const n=[];let t=0,i=0,o=0;for(const a of e){const e=[];for(const A of a){const a=A.codePoint;if(i===n.length&&isSpaceCharacter(a)&&(o+=1,i+=1),n.push(A),isLineEnding(a)){i+1===n.length&&(i+=1);const a={nodePoints:n,startIndex:t,endIndex:n.length,firstNonWhitespaceIndex:i,countOfPrecedeSpaces:o};e.push(a),t=n.length,i=n.length,o=0}}yield e}if(t<n.length){const e={nodePoints:n,startIndex:t,endIndex:n.length,firstNonWhitespaceIndex:i,countOfPrecedeSpaces:o};yield[e]}return n}function calcPositionFromPhrasingContentLines(e){const n=e[0],t=e[e.length-1];return{start:calcStartYastNodePoint(n.nodePoints,n.startIndex),end:calcEndYastNodePoint(t.nodePoints,t.endIndex-1)}}function mergeContentLinesFaithfully(e,n=0,t=e.length){if(n>=t||n<0||t>e.length)return[];const i=[];for(let o=n;o<t;++o){const{nodePoints:n,startIndex:t,endIndex:a}=e[o];for(let e=t;e<a;++e)i.push(n[e])}return i}function mergeAndStripContentLines(e,n=0,t=e.length){const i=[];if(n>=t||n<0||t>e.length)return[];for(let o=n;o+1<t;++o){const{nodePoints:n,endIndex:t,firstNonWhitespaceIndex:a}=e[o];for(let e=a;e<t;++e)i.push(n[e])}const{nodePoints:o,endIndex:a,firstNonWhitespaceIndex:A}=e[t-1];let l=a-1;for(;l>=0;--l){const e=o[l];if(!isWhitespaceCharacter(e.codePoint))break}for(let e=A;e<=l;++e)i.push(o[e]);return i}function encodeLinkDestination(e){const n=decodeURI(e);return encodeURI(n)}function resolveLabelToIdentifier(e){return foldCase(e.trim().replace(/\s+/gu," ").toLowerCase())}function resolveLinkLabelAndIdentifier(e,n,t){const i=calcStringFromNodePoints(e,n,t,!0);if(i.length<=0)return null;return{label:i,identifier:resolveLabelToIdentifier(i)}}function eatLinkLabel(e,n,t){let i=n+1;const o=Math.min(i+1e3,t);for(;i<o;++i){switch(e[i].codePoint){case AsciiCodePoint.BACKSLASH:i+=1;break;case AsciiCodePoint.OPEN_BRACKET:return{nextIndex:-1,labelAndIdentifier:null};case AsciiCodePoint.CLOSE_BRACKET:return{nextIndex:i+1,labelAndIdentifier:resolveLinkLabelAndIdentifier(e,n+1,i)}}}return{nextIndex:-1,labelAndIdentifier:null}}function isLinkToken(e){return"link"===e.nodeType||"linkReference"===e.nodeType}function eatOptionalCharacters(e,n,t,i){let o=n;for(;o<t&&e[o].codePoint===i;)o+=1;return o}function eatOptionalWhitespaces(e,n,t){for(let i=n;i<t;++i){const n=e[i].codePoint;if(!isWhitespaceCharacter(n))return i}return t}function eatOptionalBlankLines(e,n,t){let i=n;for(let o=n;o<t;++o){const n=e[o].codePoint;if(!isSpaceCharacter(n)){if(!isLineEnding(n))break;i=o+1}}return i}function trimBlankLines(e){if(e.length<=0)return null;let n=0;for(;n<e.length;++n){const t=e[n];if(t.firstNonWhitespaceIndex<t.endIndex)break}let t=e.length-1;for(;t>n;--t){const n=e[t];if(n.firstNonWhitespaceIndex<n.endIndex)break}return n>t?null:e.slice(n,t+1)}function createNodeTypeMatcher(e){if(null==e)return()=>!0;if(0===e.length)return()=>!1;if(1===e.length){const n=e[0];return e=>e.type===n}return n=>{for(const t of e)if(n.type===t)return!0;return!1}}function replaceAST(e,n,t){const i=createNodeTypeMatcher(n),o=e=>{let n=null;const{children:a}=e;for(let A=0;A<a.length;++A){const l=a[A];if(null!=l.children&&o(l),i(l)){const i=t(l,e,A);if(i!==l){null===n&&(n=a.slice(0,A)),null!=i&&(Array.isArray(i)?n.push(...i):n.push(i));continue}}null!==n&&n.push(l)}null!=n&&(e.children=n)};o(e)}function mergePresetIdentifiers(e,n){for(const{identifier:t}of n)e[t]=!0}const prefix="Invariant failed";function invariant(e,n){if(!e)throw new Error(prefix)}const phrasingContentTokenizerUniqueName="@yozora/tokenizer-phrasing-content";class PhrasingContentTokenizer extends BaseBlockTokenizer{constructor(e={}){var n;super({name:phrasingContentTokenizerUniqueName,priority:null!==(n=e.priority)&&void 0!==n?n:1}),this.isContainingBlock=!1}parseBlock(e){const n=this.buildPhrasingContent(e.lines);return null==n?null:n}extractPhrasingContentLines(e){return e.lines}buildBlockToken(e){const n=trimBlankLines(e);if(null==n)return null;const t=calcPositionFromPhrasingContentLines(n);return{_tokenizer:this.name,nodeType:"phrasingContent",lines:n,position:t}}buildPhrasingContent(e){const n=mergeAndStripContentLines(e);if(n.length<=0)return null;return{type:"phrasingContent",contents:n}}}function createBlockContentProcessor(e,n,t){const i={_tokenizer:"root",nodeType:"root",position:{start:{line:1,column:1,offset:0},end:{line:1,column:1,offset:0}},children:[]},o=[];o.push({hook:{isContainingBlock:!0},token:i});let a=0;const A=e=>{for(let n=a;n>=0;--n){o[n].token.position.end=Object.assign({},e)}},l=(i,o)=>{if(o.length<=0)return null;const a=n.filter((e=>e!=i)),A=createBlockContentProcessor(e,a,t);for(const e of o)A.consume(e);return A},_=()=>{const n=o.pop();if(null!=n){if(o.length>0){const t=o[o.length-1];if(null!=n.hook.onClose){const i=n.hook.onClose(n.token,e);if(null!=i)switch(i.status){case"closingAndRollback":{const e=l(n.hook,i.lines);if(null==e)break;const o=e.done();t.token.children.push(...o.children);break}case"failedAndRollback":{t.token.children.pop();const e=l(n.hook,i.lines);if(null==e)break;const o=e.done();t.token.children.push(...o.children);break}}}}return a>=o.length&&(a=o.length-1),n}},r=e=>{for(;o.length>e;)_()},u=(e,n,t)=>{r(a+1);o[a].token.children.push(n),A(n.position.end),a+=1,o.push({hook:e,token:n}),t&&_()},I=(e,n,t)=>{const i=l(e,n);if(null==i)return!1;const _=i.shallowSnapshot(),r=_[0];null!=r.token.children&&t.token.children.push(...r.token.children),A(r.token.position.end);for(let e=1;e<_.length;++e){const n=_[e];o.push(n)}return a=o.length-1,!0};return{consume:i=>{const{nodePoints:l,startIndex:_,endIndex:E}=i;let{firstNonWhitespaceIndex:T,countOfPrecedeSpaces:s,startIndex:N}=i;const k=()=>({nodePoints:l,startIndex:N,endIndex:E,firstNonWhitespaceIndex:T,countOfPrecedeSpaces:s}),c=(e,n)=>{if(invariant(N<=e),n){const n=calcEndYastNodePoint(l,e-1);A(n)}if(N!==e)for(N=e,s=0,T=e;T<E;++T){const e=l[T].codePoint;if(isSpaceCharacter(e))s+=1;else if(!isWhitespaceCharacter(e))break}},R=(e,n)=>{const{token:t}=o[a],i=e.eatOpener(n,t);if(null==i)return!1;invariant(i.nextIndex>N,`[consumeNewOpener] The marker of the new data node cannot be empty.\n tokenizer(${i.token._tokenizer})`),c(i.nextIndex,!1);const A=i.token;return A._tokenizer=e.name,u(e,A,Boolean(i.saturated)),!0},d=(n,t)=>{if(null==n.eatAndInterruptPreviousSibling)return!1;const{hook:i,token:A}=o[a],{token:l}=o[a-1];if(n.priority<=i.priority)return!1;const _=n.eatAndInterruptPreviousSibling(t,A,l,e);if(null==_)return!1;r(a),l.children.pop(),null!=_.remainingSibling&&(Array.isArray(_.remainingSibling)?l.children.push(..._.remainingSibling):l.children.push(_.remainingSibling)),c(_.nextIndex,!1);const I=_.token;return I._tokenizer=n.name,u(n,I,Boolean(_.saturated)),!0};if((()=>{if(a=1,o.length<2)return;let{token:t}=o[a-1];for(;N<E&&a<o.length;){const i=o[a],A=i.hook,l=k();if(n.some((e=>e!==A&&d(e,l))))break;const _=null==A.eatContinuationText?{status:"notMatched"}:A.eatContinuationText(l,i.token,t,e);let u=!1,E=!1;switch(_.status){case"failedAndRollback":if(t.children.pop(),o.length=a,a-=1,_.lines.length>0){const e=o[a];if(I(A,_.lines,e)){E=!0;break}}u=!0;break;case"closingAndRollback":if(r(a),_.lines.length>0){const e=o[a];if(I(A,_.lines,e)){E=!0;break}}u=!0;break;case"notMatched":a-=1,u=!0;break;case"closing":c(_.nextIndex,!0),a-=1,u=!0;break;case"opening":c(_.nextIndex,!0);break;default:throw new TypeError(`[eatContinuationText] unexpected status (${_.status}).`)}if(u)break;E||(a+=1,t=i.token)}})(),(()=>{if(!(N>=E)){if(a<o.length){if(null!=o[o.length-1].hook.eatLazyContinuationText){if(k().countOfPrecedeSpaces>=4)return}}else a=o.length-1;for(;N<E&&o[a].hook.isContainingBlock;){let e=!1;const t=k();for(const i of n)if(R(i,t)){e=!0;break}if(!e)break}}})(),(()=>{if(N>=E||a+1>=o.length)return!1;const{hook:n,token:t}=o[o.length-1];if(null==n.eatLazyContinuationText)return!1;const{token:i}=o[o.length-2],A=k(),l=n.eatLazyContinuationText(A,t,i,e);switch(l.status){case"notMatched":return!1;case"opening":return a=o.length-1,c(l.nextIndex,!0),a=o.length-1,!0;default:throw new TypeError(`[eatLazyContinuationText] unexpected status (${l.status}).`)}})()||r(a+1),null!=t&&N<E){const e=k();R(t,e)}invariant(T>=E)},done:()=>{for(;o.length>1;)_();return i},shallowSnapshot:()=>[...o]}}function createSinglePriorityDelimiterProcessor(){let e=0;const n=[],t=[],i=[],o=(e,n)=>{t.push({hook:e,delimiter:n,inactive:!1,tokenStackIndex:i.length})},a=(e,n)=>{if(t.length<=0)return n;let a,A=n,l=[];for(let n=t.length-1;n>=0;--n){const _=t[n];if(_.hook!==e||_.inactive)continue;const r=_.tokenStackIndex;for(r<i.length&&(l=i.splice(r).concat(l)),a=_.delimiter;null!=a&&null!=A;){if("opener"===A.type){o(e,A),A=void 0;break}if("full"===A.type)break;const i=e.isDelimiterPair(a,A,l);if(!i.paired){if(!i.opener){const n=e.processSingleDelimiter(a);if(n.length>0){for(const t of n)t._tokenizer=e.name;l.unshift(...n)}a=void 0,_.inactive=!0}if(!i.closer){const n=e.processSingleDelimiter(A);if(n.length>0){for(const t of n)t._tokenizer=e.name;l.push(...n)}A=void 0}break}const r=e.processDelimiterPair(a,A,l);for(const n of r.tokens)null==n._tokenizer&&(n._tokenizer=e.name);l=r.tokens,a=r.remainOpenerDelimiter,A=r.remainCloserDelimiter,cutStaleBranch(t,n),n=Math.min(n,t.length),null!=a&&o(e,a)}if(null==A||"full"===A.type)break}if(i.push(...l),null==A)return null;if("full"===A.type||"closer"===A.type){const n=e.processSingleDelimiter(A);for(const t of n)t._tokenizer=e.name,i.push(t);return null}return A};return{process:(t,A)=>{for(;e<n.length;++e){const t=n[e];if(t.startIndex>=A.endIndex)break;t.startIndex>=A.startIndex||i.push(t)}switch(A.type){case"opener":o(t,A);break;case"both":{const e=a(t,A);null!=e&&o(t,e);break}case"closer":a(t,A);break;case"full":{const e=t.processSingleDelimiter(A);for(const n of e)n._tokenizer=t.name,i.push(n);break}default:throw new TypeError(`Unexpected delimiter type(${A.type}) from ${t.name}.`)}},done:()=>{const o=[];for(const{delimiter:e,hook:n}of t){const t=n.processSingleDelimiter(e);for(const e of t)e._tokenizer=n.name,o.push(e)}if(t.length=0,o.length>0){const e=mergeSortedTokens(i,o);i.length=0,i.push(...e)}return i.concat(n.slice(e))},reset:o=>{n.length=o.length;for(let e=0;e<o.length;++e)n[e]=o[e];e=0,t.length=0,i.length=0},findNearestPairedDelimiter:(e,i)=>{if(t.length<=0)return null;let o=null;for(let a=t.length-1;a>=0;--a){if(o=t[a],o.inactive||o.hook!==e)continue;const A=o.delimiter,l=e.isDelimiterPair(A,i,n);if(l.paired)return A;if(!l.closer)return null}return null}}}function cutStaleBranch(e,n){let t=n-1;for(;t>=0;--t){if(!e[t].inactive)break}e.length=t+1}function mergeSortedTokens(e,n){if(e.length<=0)return n;if(n.length<=0)return e;const t=[];let i=0,o=0;for(;i<e.length&&o<n.length;)e[i].startIndex<n[o].startIndex?(t.push(e[i]),i+=1):(t.push(n[o]),o+=1);for(;i<e.length;++i)t.push(e[i]);for(;o<n.length;++o)t.push(n[o]);return t}function createPhrasingContentProcessor(e,n){const t=(e,n,t)=>{let o=[],a=null;const A=[e,n];for(const e of t){const n=e.findDelimiter(A);if(null!=n){if(null!=a){if(n.startIndex>a)continue;n.startIndex<a&&(o=[])}a=n.startIndex,o.push({hook:e,delimiter:n})}}if(o.length<=0)return{items:[],nextIndex:-1};const l=a+1;if(o.length>1){let e=0;for(const n of o){const t=n.delimiter.type;if("full"===t)return{items:[n],nextIndex:n.delimiter.endIndex};"both"!==t&&"closer"!==t||(e+=1)}if(e>1){let e=-1,n=-1;for(let t=0;t<o.length;++t){const{hook:a,delimiter:A}=o[t];if("both"===A.type||"closer"===A.type){const o=i.findNearestPairedDelimiter(a,A);null!=o&&n<o.startIndex&&(e=t,n=o.startIndex)}}return{items:e>-1?[o[e]]:o.filter((e=>"closer"!==e.delimiter.type)),nextIndex:l}}}return{items:o,nextIndex:l}},i=createSinglePriorityDelimiterProcessor();return{process:(o,a,A,l)=>{let _=o;for(let o=n;o<e.length;++o){const n=e[o];for(const e of n)e.reset(l);let r=0;i.reset(_);for(let e=a;e<A;){let o=A;for(;r<_.length;++r){const n=_[r];if(e<n.startIndex){o=n.startIndex;break}e=Math.max(e,n.endIndex)}const{items:a,nextIndex:l}=t(e,o,n);if(l<0||a.length<=0)e=l<0?o:l;else{e+=1;for(const{hook:n,delimiter:t}of a)e=Math.max(e,t.endIndex),i.process(n,t)}}_=i.done()}return _}}}function createProcessorHookGroups(e,n,t){const i=e.slice().sort(((e,n)=>n.priority-e.priority)),o=[];for(let e=0;e<i.length;){const a=[];o.push(a);const A=createPhrasingContentProcessor(o,o.length),l=Object.freeze(Object.assign(Object.assign({},n),{resolveInternalTokens:(e,n,i,o)=>{let a=A.process(e,n,i,o);return a=t(a,n,i,o),a}})),_=i[e].priority;for(;e<i.length;++e){const n=i[e];if(n.priority!==_)break;const t=createProcessorHook(n,l);a.push(t)}}return o}function createProcessorHook(e,n){const t=n;let i,o;const a=null==e.isDelimiterPair?void 0:e.isDelimiterPair.bind(e),A=null==e.processDelimiterPair?void 0:e.processDelimiterPair.bind(e),l=null==e.processSingleDelimiter?void 0:e.processSingleDelimiter.bind(e);return{name:e.name,priority:e.priority,findDelimiter:e=>o.next(e).value,isDelimiterPair:null==a?()=>({paired:!0}):(e,n,o)=>a(e,n,o,i,t),processDelimiterPair:null==A?(e,n,t)=>({tokens:t}):(e,n,o)=>A(e,n,o,i,t),processSingleDelimiter:null==l?()=>[]:e=>l(e,i,t),reset:n=>{i=n,o=e.findDelimiter(i,t),o.next()}}}function createProcessor(e){const{tokenizerHookMap:n,matchBlockHooks:t,postMatchBlockHooks:i,matchInlineHooks:o,phrasingContentTokenizer:a,blockFallbackTokenizer:A,inlineFallbackTokenizer:l,shouldReservePosition:_,presetDefinitions:r,presetFootnoteDefinitions:u}=e,I={type:"root",children:[]};let E,T,s=!1,N=-1,k=-1;const c=Object.freeze({matchBlockApi:{extractPhrasingLines:d,buildPhrasingContentToken:O,rollbackPhrasingLines:C,registerDefinitionIdentifier:e=>{s&&(E[e]=!0)},registerFootnoteDefinitionIdentifier:e=>{s&&(T[e]=!0)}},postMatchBlockApi:{extractPhrasingLines:d,buildPhrasingContentToken:O,rollbackPhrasingLines:C},parseBlockApi:{buildPhrasingContent:function(e){return a.buildPhrasingContent(e)},parsePhrasingContent:S,parseBlockTokens:v},matchInlineApi:{hasDefinition:e=>Boolean(E[e]),hasFootnoteDefinition:e=>Boolean(T[e]),getBlockStartIndex:()=>N,getBlockEndIndex:()=>k,resolveFallbackTokens:y},parseInlineApi:{hasDefinition:e=>Boolean(E[e]),hasFootnoteDefinition:e=>Boolean(T[e])}}),R=createPhrasingContentProcessor(createProcessorHookGroups(o,c.matchInlineApi,y),0);return{process:function(e){E={},T={},s=!0;let n=P(e);n=function(e){const n=e=>{const t=Object.assign({},e);if(null!=e.children&&e.children.length>0){let o=e.children.map(n);for(const e of i)o=e.transformMatch(o,c.postMatchBlockApi);t.children=o}return t};return n(e)}(n),s=!1,mergePresetIdentifiers(E,r),mergePresetIdentifiers(T,u);const t=v(n.children);I.children=t,_&&(I.position=n.position);return replaceAST(I,["phrasingContent"],(e=>S(e))),I}};function d(e){const t=n.get(e._tokenizer);return null==t||null==t.extractPhrasingContentLines?null:t.extractPhrasingContentLines(e)}function O(e){return a.buildBlockToken(e)}function C(e,t){if(null!=t){const i=n.get(t._tokenizer);if(null!=i&&null!=i.buildBlockToken){const n=i.buildBlockToken(e,t);if(null!=n)return[n]}}return P([e]).children}function S(e){const n=e.contents;return L(n,function(e,n,t){N=n,k=t;const i=R.process([],n,t,e);return y(i,n,t,e)}(n,0,n.length))}function y(e,n,t,i){if(null==l)return e;let o=n;const a=[];for(const n of e){if(o<n.startIndex){const e=l.findAndHandleDelimiter(o,n.startIndex,i,c.matchInlineApi);e._tokenizer=l.name,a.push(e)}a.push(n),o=n.endIndex}if(o<t){const e=l.findAndHandleDelimiter(o,t,i,c.matchInlineApi);e._tokenizer=l.name,a.push(e)}return a}function P(e){const n=createBlockContentProcessor(c.matchBlockApi,t,A);for(const t of e)for(const e of t)n.consume(e);return n.done()}function v(e){const t=[];for(const i of e){const e=n.get(i._tokenizer);invariant(null!=e,`[parseBlock] tokenizer '${i._tokenizer}' not found`);const o=null!=i.children?v(i.children):void 0,a=e.parseBlock(i,o,c.parseBlockApi);if(null==a)continue;const A=a;_&&(A.position=i.position),t.push(A)}return t}function L(e,t){const i=[];for(const o of t){const t=n.get(o._tokenizer);invariant(null!=t,`[parseInline] tokenizer '${o._tokenizer}' not existed`);const a=null!=o.children?L(e,o.children):void 0,A=t.processToken(o,a,e,c.parseInlineApi);_&&(A.position={start:calcStartYastNodePoint(e,o.startIndex),end:calcEndYastNodePoint(e,o.endIndex-1)}),i.push(A)}return i}}class DefaultYastParser{constructor(e){this.blockFallbackTokenizer=null,this.inlineFallbackTokenizer=null,this.defaultParseOptions=null,this.tokenizerHookMap=new Map,this.matchBlockHooks=[],this.postMatchBlockHooks=[],this.matchInlineHooks=[],this.phrasingContentTokenizer=new PhrasingContentTokenizer,this.setDefaultParseOptions(e.defaultParseOptions),this.useTokenizer(new PhrasingContentTokenizer,void 0,{"match-block":!1,"post-match-block":!1,"match-inline":!1});const n=null!=e.blockFallbackTokenizer?e.blockFallbackTokenizer:null;null!=n&&this.useBlockFallbackTokenizer(n);const t=null!=e.inlineFallbackTokenizer?e.inlineFallbackTokenizer:null;null!=t&&this.useInlineFallbackTokenizer(t)}useTokenizer(e,n,t={}){if(null!=this.tokenizerHookMap.get(e.name))throw new TypeError(`[useTokenizer] Name(${e.name}) has been registered.`);const i=e;this.tokenizerHookMap.set(e.name,i);const o=(e,o)=>{if(!1===t[o])return;let a=0;for(;a<e.length;++a){const t=e[a];if(n===t.name)break;if(i.priority>t.priority)break}a<0||a>=e.length?e.push(i):e.splice(a,0,i)};return null!=i.eatOpener&&o(this.matchBlockHooks,"match-block"),null!=i.transformMatch&&o(this.postMatchBlockHooks,"post-match-block"),null!=i.findDelimiter&&o(this.matchInlineHooks,"match-inline"),this}replaceTokenizer(e,n,t){return this.unmountTokenizer(e.name),this.useTokenizer(e,n,t),this}unmountTokenizer(e){const n="string"==typeof e?e:e.name;if(!this.tokenizerHookMap.delete(n))return this;null==this.blockFallbackTokenizer||this.blockFallbackTokenizer.name===n?this.blockFallbackTokenizer=null:null!=this.inlineFallbackTokenizer&&this.inlineFallbackTokenizer.name!==n||(this.inlineFallbackTokenizer=null);const t=e=>{const t=e.findIndex((e=>e.name===n));t>=0&&e.splice(t,1)};return t(this.matchBlockHooks),t(this.postMatchBlockHooks),t(this.matchInlineHooks),this}useBlockFallbackTokenizer(e){return null!=this.blockFallbackTokenizer&&this.unmountTokenizer(this.blockFallbackTokenizer),this.useTokenizer(e,void 0,{"match-block":!1,"post-match-block":!1,"match-inline":!1}),this.blockFallbackTokenizer=e,this}useInlineFallbackTokenizer(e){return null!=this.inlineFallbackTokenizer&&this.unmountTokenizer(this.inlineFallbackTokenizer),this.useTokenizer(e,void 0,{"match-block":!1,"post-match-block":!1,"match-inline":!1}),this.inlineFallbackTokenizer=e,this}setDefaultParseOptions(e={}){this.defaultParseOptions=Object.assign({presetDefinitions:[],presetFootnoteDefinitions:[],shouldReservePosition:!1},e)}parse(e,n={}){const{shouldReservePosition:t,presetDefinitions:i,presetFootnoteDefinitions:o}=Object.assign(Object.assign({},this.defaultParseOptions),n),a=createPhrasingLineGenerator(createNodePointGenerator(e));return createProcessor({tokenizerHookMap:this.tokenizerHookMap,matchBlockHooks:this.matchBlockHooks,postMatchBlockHooks:this.postMatchBlockHooks,matchInlineHooks:this.matchInlineHooks,phrasingContentTokenizer:this.phrasingContentTokenizer,blockFallbackTokenizer:this.blockFallbackTokenizer,inlineFallbackTokenizer:this.inlineFallbackTokenizer,shouldReservePosition:t,presetDefinitions:i,presetFootnoteDefinitions:o}).process(a)}}class FencedBlockTokenizer extends BaseBlockTokenizer{constructor(e){var n;super({name:e.name,priority:null!==(n=e.priority)&&void 0!==n?n:TokenizerPriority.FENCED_BLOCK}),this.isContainingBlock=!1,this.markers=[],this.nodeType=e.nodeType,this.markers=e.markers,this.markersRequired=e.markersRequired,this.checkInfoString=e.checkInfoString}eatOpener(e){if(e.countOfPrecedeSpaces>=4)return null;const{endIndex:n,firstNonWhitespaceIndex:t}=e;if(t+this.markersRequired-1>=n)return null;const{nodePoints:i,startIndex:o}=e,a=i[t].codePoint;if(this.markers.indexOf(a)<0)return null;const A=eatOptionalCharacters(i,t+1,n,a),l=A-t;if(l<this.markersRequired)return null;const[_,r]=calcTrimBoundaryOfCodePoints(i,A,n),u=i.slice(_,r);if(null!=this.checkInfoString&&!this.checkInfoString(u,a,l))return null;const I=n;return{token:{nodeType:this.nodeType,position:{start:calcStartYastNodePoint(i,o),end:calcEndYastNodePoint(i,I-1)},indent:t-o,marker:a,markerCount:l,lines:[],infoString:u},nextIndex:I}}eatAndInterruptPreviousSibling(e,n){const t=this.eatOpener(e);return null==t?null:{token:t.token,nextIndex:t.nextIndex,remainingSibling:n}}eatContinuationText(e,n){const{nodePoints:t,startIndex:i,endIndex:o,firstNonWhitespaceIndex:a,countOfPrecedeSpaces:A}=e;if(A<4&&a<o){let e=eatOptionalCharacters(t,a,o,n.marker);if(e-a>=n.markerCount){for(;e<o;++e){const n=t[e].codePoint;if(!isSpaceCharacter(n))break}if(e+1>=o)return{status:"closing",nextIndex:o}}}const l=Math.min(i+n.indent,a,o-1);return n.lines.push({nodePoints:t,startIndex:l,endIndex:o,firstNonWhitespaceIndex:a,countOfPrecedeSpaces:A}),{status:"opening",nextIndex:o}}}const uniqueName$u="@yozora/tokenizer-admonition";class AdmonitionTokenizer extends FencedBlockTokenizer{constructor(e={}){var n,t;super({name:null!==(n=e.name)&&void 0!==n?n:uniqueName$u,priority:null!==(t=e.priority)&&void 0!==t?t:TokenizerPriority.FENCED_BLOCK,nodeType:"admonition",markers:[AsciiCodePoint.COLON],markersRequired:3}),this.isContainingBlock=!0}onClose(e,n){const t=n.rollbackPhrasingLines(e.lines);e.children=t}parseBlock(e,n,t){const i=e.infoString;let o=0;const a=[];for(;o<i.length;++o){const e=i[o];if(isUnicodeWhitespaceCharacter(e.codePoint))break;a.push(e)}o=eatOptionalWhitespaces(i,o,i.length);const A=(()=>{if(o>=i.length)return[];const e=[{nodePoints:i,startIndex:o,endIndex:i.length,firstNonWhitespaceIndex:o,countOfPrecedeSpaces:0}],n=t.buildPhrasingContent(e);return null==n?[]:t.parsePhrasingContent(n)})();return{type:"admonition",keyword:calcEscapedStringFromNodePoints(a,0,a.length,!0),title:A,children:null!=n?n:[]}}}const uniqueName$t="@yozora/tokenizer-autolink";function eatEmailAddress(e,n,t){let i=n;for(;i<t;i+=1){const n=e[i].codePoint;if(!isAsciiLetter(n)&&!isAsciiDigitCharacter(n)&&(n!==AsciiCodePoint.DOT&&n!==AsciiCodePoint.EXCLAMATION_MARK&&n!==AsciiCodePoint.NUMBER_SIGN&&n!==AsciiCodePoint.DOLLAR_SIGN&&n!==AsciiCodePoint.PERCENT_SIGN&&n!==AsciiCodePoint.AMPERSAND&&n!==AsciiCodePoint.SINGLE_QUOTE&&n!==AsciiCodePoint.ASTERISK&&n!==AsciiCodePoint.PLUS_SIGN&&n!==AsciiCodePoint.SLASH&&n!==AsciiCodePoint.EQUALS_SIGN&&n!==AsciiCodePoint.QUESTION_MARK&&n!==AsciiCodePoint.CARET&&n!==AsciiCodePoint.UNDERSCORE&&n!==AsciiCodePoint.BACKTICK&&n!==AsciiCodePoint.OPEN_BRACE&&n!==AsciiCodePoint.VERTICAL_SLASH&&n!==AsciiCodePoint.CLOSE_BRACE&&n!==AsciiCodePoint.TILDE&&n!==AsciiCodePoint.MINUS_SIGN))break}if(i===n||i+1>=t||e[i].codePoint!==AsciiCodePoint.AT_SIGN||!isAlphanumeric(e[i+1].codePoint))return{valid:!1,nextIndex:i+1};for(i=eatAddressPart0(e,i+2,t);i+1<t;){let n=e[i].codePoint;if(n!==AsciiCodePoint.DOT)break;if(n=e[i+1].codePoint,!isAsciiLetter(n)&&!isAsciiDigitCharacter(n))break;i=eatAddressPart0(e,i+2,t)}return{valid:!0,nextIndex:i}}function eatAddressPart0(e,n,t){let i=n,o=-1;for(let n=Math.min(t,i+62);i<n;++i){const n=e[i].codePoint;if(isAsciiLetter(n)||isAsciiDigitCharacter(n))o=i;else if(n!==AsciiCodePoint.MINUS_SIGN)break}return o>=n?o+1:n}function eatAbsoluteUri(e,n,t){const i=eatAutolinkSchema(e,n,t);let{nextIndex:o}=i;if(!i.valid||o>=t||e[o].codePoint!==AsciiCodePoint.COLON)return{valid:!1,nextIndex:o};for(o+=1;o<t;++o){const n=e[o].codePoint;if(!((a=n)>=AsciiCodePoint.NUL&&a<=AsciiCodePoint.DELETE)||isWhitespaceCharacter(n)||isAsciiControlCharacter(n)||n===AsciiCodePoint.OPEN_ANGLE||n===AsciiCodePoint.CLOSE_ANGLE)break}var a;return{valid:!0,nextIndex:o}}function eatAutolinkSchema(e,n,t){let i=n;const o=e[i].codePoint;if(!isAsciiLetter(o))return{valid:!1,nextIndex:i+1};for(i+=1;i<t;++i){const n=e[i].codePoint;if(!isAlphanumeric(n)&&n!==AsciiCodePoint.PLUS_SIGN&&n!==AsciiCodePoint.DOT&&n!==AsciiCodePoint.MINUS_SIGN)break}const a=i-n;return a<2||a>32?{valid:!1,nextIndex:i+1}:{valid:!0,nextIndex:i}}const helpers$1=[{contentType:"uri",eat:eatAbsoluteUri},{contentType:"email",eat:eatEmailAddress}];class AutolinkTokenizer extends BaseInlineTokenizer{constructor(e={}){var n,t;super({name:null!==(n=e.name)&&void 0!==n?n:uniqueName$t,priority:null!==(t=e.priority)&&void 0!==t?t:TokenizerPriority.ATOMIC})}_findDelimiter(e,n,t){for(let i=e;i<n;++i){if(t[i].codePoint!==AsciiCodePoint.OPEN_ANGLE)continue;let e=n,o=null;for(const a of helpers$1){const A=a.eat(t,i+1,n);if(e=Math.min(e,A.nextIndex),A.valid){o=a.contentType,e=A.nextIndex;break}}if(null!=o){if(e<n&&t[e].codePoint===AsciiCodePoint.CLOSE_ANGLE)return{type:"full",startIndex:i,endIndex:e+1,contentType:o};i=e-1}else i=Math.max(i,e-1)}return null}processSingleDelimiter(e,n,t){return[{nodeType:"link",startIndex:e.startIndex,endIndex:e.endIndex,contentType:e.contentType,children:t.resolveFallbackTokens([],e.startIndex+1,e.endIndex-1,n)}]}processToken(e,n,t){let i=calcStringFromNodePoints(t,e.startIndex+1,e.endIndex-1);"email"===e.contentType&&(i="mailto:"+i);return{type:"link",url:encodeLinkDestination(i),children:null!=n?n:[]}}}const uniqueName$s="@yozora/tokenizer-autolink-extension";function eatExtendEmailAddress(e,n,t){let i=n;if(i>=t||!isAlphanumeric(e[i].codePoint))return{valid:!1,nextIndex:i+1};for(i+=1;i<t;i+=1){const n=e[i].codePoint;if(!isAlphanumeric(n)&&n!==AsciiCodePoint.DOT&&n!==AsciiCodePoint.MINUS_SIGN&&n!==AsciiCodePoint.UNDERSCORE&&n!==AsciiCodePoint.PLUS_SIGN)break}if(i===n||i+2>=t||e[i].codePoint!==AsciiCodePoint.AT_SIGN||!isAlphanumeric(e[i+1].codePoint))return{valid:!1,nextIndex:i+1};let o=0;for(i+=2;i<t;i+=1){const n=e[i].codePoint;if(n!==AsciiCodePoint.DOT){if(!isAlphanumeric(n)&&n!==AsciiCodePoint.MINUS_SIGN&&n!==AsciiCodePoint.UNDERSCORE)break}else o+=1}const a=e[i-1].codePoint;return a===AsciiCodePoint.MINUS_SIGN||a===AsciiCodePoint.UNDERSCORE?{valid:!1,nextIndex:i}:(a===AsciiCodePoint.DOT&&(i-=1,o-=1),o<=0?{valid:!1,nextIndex:i}:{valid:!0,nextIndex:i})}function eatExtendedUrl(e,n,t){const i=eatAutolinkSchema(e,n,t),{nextIndex:o}=i;if(!i.valid||o+3>=t||e[o].codePoint!==AsciiCodePoint.COLON||e[o+1].codePoint!==AsciiCodePoint.SLASH||e[o+2].codePoint!==AsciiCodePoint.SLASH)return{valid:!1,nextIndex:o+1};const a=eatValidDomain(e,o+3,t);return a.nextIndex=eatOptionalDomainFollows(e,a.nextIndex,t),a}function eatWWWDomain(e,n,t){const i=eatDomainSegment(e,n,t),o=i.nextIndex;if(!i.valid||o>=t||e[o].codePoint!==AsciiCodePoint.DOT||o-n!=3)return{valid:!1,nextIndex:o};for(let t=n;t<o;++t){const n=e[t].codePoint;if(n!==AsciiCodePoint.LOWERCASE_W&&n!==AsciiCodePoint.UPPERCASE_W)return{valid:!1,nextIndex:o}}const a=eatValidDomain(e,o+1,t);return a.nextIndex=eatOptionalDomainFollows(e,a.nextIndex,t),a}function eatOptionalDomainFollows(e,n,t){let i=n;for(;i<t;++i){const n=e[i].codePoint;if(isWhitespaceCharacter(n)||n===AsciiCodePoint.OPEN_ANGLE)break}for(i-=1;i>=n;i-=1){const n=e[i].codePoint;if(!isPunctuationCharacter(n)&&n!==AsciiCodePoint.QUESTION_MARK&&n!==AsciiCodePoint.EXCLAMATION_MARK&&n!==AsciiCodePoint.DOT&&n!==AsciiCodePoint.COMMA&&n!==AsciiCodePoint.COLON&&n!==AsciiCodePoint.ASTERISK&&n!==AsciiCodePoint.UNDERSCORE&&n!==AsciiCodePoint.TILDE)break}if(i>=n&&i+1<t&&e[i+1].codePoint===AsciiCodePoint.CLOSE_PARENTHESIS){let o=0;for(let t=n;t<i;++t){switch(e[t].codePoint){case AsciiCodePoint.OPEN_PARENTHESIS:o+=1;break;case AsciiCodePoint.CLOSE_PARENTHESIS:o-=1}}if(o>0){for(i+=2,o-=1;i<t&&o>0;){if(e[i].codePoint!==AsciiCodePoint.CLOSE_PARENTHESIS)break;o-=1,i+=1}i-=1}}if(i+1<t&&e[i+1].codePoint===AsciiCodePoint.SEMICOLON){let t=i;for(;t>=n;--t){const n=e[t].codePoint;if(!isAlphanumeric(n))break}t>=n&&e[t].codePoint===AsciiCodePoint.AMPERSAND&&(i=t-1)}return i+1}function eatValidDomain(e,n,t){const i=eatDomainSegment(e,n,t);if(!i.valid||i.nextIndex>=t)return{valid:!1,nextIndex:i.nextIndex};let o=i.nextIndex,a=0,A=i.hasUnderscore?2:0;for(;o<t&&e[o].codePoint===AsciiCodePoint.DOT;){const n=eatDomainSegment(e,o+1,t);if(!n.valid)break;o=n.nextIndex,a+=1,A>>>=1,A|=n.hasUnderscore?2:0}return a<=0&&0===A?{valid:!1,nextIndex:o}:{valid:!0,nextIndex:o}}function eatDomainSegment(e,n,t){let i=n,o=!1;for(;i<t;++i){const n=e[i].codePoint;if(n!==AsciiCodePoint.UNDERSCORE){if(!isAlphanumeric(n)&&n!==AsciiCodePoint.MINUS_SIGN)break}else o=!0}return i>n?{valid:!0,nextIndex:i,hasUnderscore:o}:{valid:!1,nextIndex:i,hasUnderscore:o}}const helpers=[{contentType:"uri",eat:eatExtendedUrl},{contentType:"uri-www",eat:eatWWWDomain},{contentType:"email",eat:eatExtendEmailAddress}];class AutolinkExtensionTokenizer extends BaseInlineTokenizer{constructor(e={}){var n,t;super({name:null!==(n=e.name)&&void 0!==n?n:uniqueName$s,priority:null!==(t=e.priority)&&void 0!==t?t:TokenizerPriority.LINKS})}_findDelimiter(e,n,t,i){const o=i.getBlockStartIndex();for(let i=e;i<n;++i){{let e=i,a=!1;for(;e<n;++e){const n=t[e].codePoint;if(isWhitespaceCharacter(n)||n===AsciiCodePoint.ASTERISK||n===AsciiCodePoint.UNDERSCORE||n===AsciiCodePoint.TILDE||n===AsciiCodePoint.OPEN_PARENTHESIS)a=!0;else{if(a||e===o)break;a=!1}}if(e>=n)break;i=e}let e=n,a=null;for(const o of helpers){const A=o.eat(t,i,n);if(e=Math.min(e,A.nextIndex),A.valid){a=o.contentType,e=A.nextIndex;break}}if(null!=a){if(e<=n)return{type:"full",startIndex:i,endIndex:e,contentType:a};i=e-1}else i=Math.max(i,e-1)}return null}processSingleDelimiter(e,n,t){return[{nodeType:"link",startIndex:e.startIndex,endIndex:e.endIndex,contentType:e.contentType,children:t.resolveFallbackTokens([],e.startIndex,e.endIndex,n)}]}processToken(e,n,t){let i=calcStringFromNodePoints(t,e.startIndex,e.endIndex);switch(e.contentType){case"email":i="mailto:"+i;break;case"uri-www":i="http://"+i}return{type:"link",url:i,children:null!=n?n:[]}}}const uniqueName$r="@yozora/tokenizer-blockquote";class BlockquoteTokenizer extends BaseBlockTokenizer{constructor(e={}){var n,t;super({name:null!==(n=e.name)&&void 0!==n?n:uniqueName$r,priority:null!==(t=e.priority)&&void 0!==t?t:TokenizerPriority.CONTAINING_BLOCK}),this.isContainingBlock=!0}eatOpener(e){if(e.countOfPrecedeSpaces>=4)return null;const{nodePoints:n,startIndex:t,endIndex:i,firstNonWhitespaceIndex:o}=e;if(o>=i||n[o].codePoint!==AsciiCodePoint.CLOSE_ANGLE)return null;let a=o+1;a<i&&isSpaceCharacter(n[a].codePoint)&&(a+=1,a<i&&n[a].codePoint===VirtualCodePoint.SPACE&&(a+=1));return{token:{nodeType:"blockquote",position:{start:calcStartYastNodePoint(n,t),end:calcEndYastNodePoint(n,a-1)},children:[]},nextIndex:a}}eatAndInterruptPreviousSibling(e,n){const t=this.eatOpener(e);return null==t?null:{token:t.token,nextIndex:t.nextIndex,remainingSibling:n}}eatContinuationText(e,n,t){const{nodePoints:i,startIndex:o,endIndex:a,firstNonWhitespaceIndex:A,countOfPrecedeSpaces:l}=e;if(l>=4||A>=a||i[A].codePoint!==AsciiCodePoint.CLOSE_ANGLE)return"blockquote"===t.nodeType?{status:"opening",nextIndex:o}:{status:"notMatched"};return{status:"opening",nextIndex:A+1<a&&isSpaceCharacter(i[A+1].codePoint)?A+2:A+1}}parseBlock(e,n){return{type:"blockquote",children:n||[]}}}const uniqueName$q="@yozora/tokenizer-break";var BreakTokenMarkerType;!function(e){e.BACKSLASH="backslash",e.MORE_THAN_TWO_SPACES="more-than-two-spaces"}(BreakTokenMarkerType||(BreakTokenMarkerType={}));class BreakTokenizer extends BaseInlineTokenizer{constructor(e={}){var n,t;super({name:null!==(n=e.name)&&void 0!==n?n:uniqueName$q,priority:null!==(t=e.priority)&&void 0!==t?t:TokenizerPriority.SOFT_INLINE})}_findDelimiter(e,n,t){for(let i=e+1;i<n;++i){if(t[i].codePoint!==VirtualCodePoint.LINE_END)continue;let n=null,o=null;switch(t[i-1].codePoint){case AsciiCodePoint.BACKSLASH:{let a=i-2;for(;a>=e&&t[a].codePoint===AsciiCodePoint.BACKSLASH;a-=1);0==(i-a&1)&&(n=i-1,o=BreakTokenMarkerType.BACKSLASH);break}case AsciiCodePoint.SPACE:{let a=i-2;for(;a>=e&&t[a].codePoint===AsciiCodePoint.SPACE;a-=1);i-a>2&&(n=a+1,o=BreakTokenMarkerType.MORE_THAN_TWO_SPACES);break}}if(null!=n&&null!=o)return{type:"full",markerType:o,startIndex:n,endIndex:i}}return null}processSingleDelimiter(e){return[{nodeType:"break",startIndex:e.startIndex,endIndex:e.endIndex}]}processToken(){return{type:"break"}}}const uniqueName$p="@yozora/tokenizer-definition";function eatAndCollectLinkDestination(e,n,t,i){let o=n;null==i&&(i={saturated:!1,nodePoints:[],hasOpenAngleBracket:!1,openParensCount:0});const a=eatOptionalWhitespaces(e,o,t);if(a>=t)return{nextIndex:-1,token:i};if(i.nodePoints.length<=0){o=a;const n=e[o];n.codePoint===AsciiCodePoint.OPEN_ANGLE&&(o+=1,i.hasOpenAngleBracket=!0,i.nodePoints.push(n))}if(i.hasOpenAngleBracket){for(;o<t;++o){const n=e[o];switch(n.codePoint){case AsciiCodePoint.BACKSLASH:o+1<t&&(i.nodePoints.push(n),i.nodePoints.push(e[o+1])),o+=1;break;case AsciiCodePoint.OPEN_ANGLE:case VirtualCodePoint.LINE_END:return{nextIndex:-1,token:i};case AsciiCodePoint.CLOSE_ANGLE:return i.saturated=!0,i.nodePoints.push(n),{nextIndex:o+1,token:i};default:i.nodePoints.push(n)}}return{nextIndex:o,token:i}}for(;o<t;++o){const n=e[o];switch(n.codePoint){case AsciiCodePoint.BACKSLASH:o+1<t&&(i.nodePoints.push(n),i.nodePoints.push(e[o+1])),o+=1;break;case AsciiCodePoint.OPEN_PARENTHESIS:i.openParensCount+=1,i.nodePoints.push(n);break;case AsciiCodePoint.CLOSE_PARENTHESIS:if(i.openParensCount-=1,i.nodePoints.push(n),i.openParensCount<0)return{nextIndex:o,token:i};break;default:if(isWhitespaceCharacter(n.codePoint)||isAsciiControlCharacter(n.codePoint))return i.saturated=!0,{nextIndex:o,token:i};i.nodePoints.push(n)}}return i.saturated=!0,{nextIndex:o,token:i}}function eatAndCollectLinkLabel(e,n,t,i){let o=n;null==i&&(i={saturated:!1,nodePoints:[],hasNonWhitespaceCharacter:!1});const a=eatOptionalWhitespaces(e,o,t);if(a>=t)return{nextIndex:-1,token:i};if(i.nodePoints.length<=0){o=a;const n=e[o];if(n.codePoint!==AsciiCodePoint.OPEN_BRACKET)return{nextIndex:-1,token:i};o+=1,i.nodePoints.push(n)}for(;o<t;++o){const n=e[o];switch(n.codePoint){case AsciiCodePoint.BACKSLASH:i.hasNonWhitespaceCharacter=!0,o+1<t&&(i.nodePoints.push(n),i.nodePoints.push(e[o+1])),o+=1;break;case AsciiCodePoint.OPEN_BRACKET:return{nextIndex:-1,token:i};case AsciiCodePoint.CLOSE_BRACKET:return i.nodePoints.push(n),i.hasNonWhitespaceCharacter?(i.saturated=!0,{nextIndex:o+1,token:i}):{nextIndex:-1,token:i};default:isWhitespaceCharacter(n.codePoint)||(i.hasNonWhitespaceCharacter=!0),i.nodePoints.push(n)}}return{nextIndex:1,token:i}}function eatAndCollectLinkTitle(e,n,t,i){let o=n;null==i&&(i={saturated:!1,nodePoints:[],wrapSymbol:null});const a=eatOptionalWhitespaces(e,o,t);if(a>=t)return{nextIndex:-1,token:i};if(i.nodePoints.length<=0){o=a;const n=e[o];switch(n.codePoint){case AsciiCodePoint.DOUBLE_QUOTE:case AsciiCodePoint.SINGLE_QUOTE:case AsciiCodePoint.OPEN_PARENTHESIS:i.wrapSymbol=n.codePoint,i.nodePoints.push(n),o+=1;break;default:return{nextIndex:-1,token:i}}}if(null==i.wrapSymbol)return{nextIndex:-1,token:i};switch(i.wrapSymbol){case AsciiCodePoint.DOUBLE_QUOTE:case AsciiCodePoint.SINGLE_QUOTE:for(;o<t;++o){const n=e[o];switch(n.codePoint){case AsciiCodePoint.BACKSLASH:o+1<t&&(i.nodePoints.push(n),i.nodePoints.push(e[o+1])),o+=1;break;case i.wrapSymbol:return i.saturated=!0,i.nodePoints.push(n),{nextIndex:o+1,token:i};default:i.nodePoints.push(n)}}break;case AsciiCodePoint.OPEN_PARENTHESIS:for(;o<t;++o){const n=e[o];switch(n.codePoint){case AsciiCodePoint.BACKSLASH:o+1<t&&(i.nodePoints.push(n),i.nodePoints.push(e[o+1])),o+=1;break;case AsciiCodePoint.OPEN_PARENTHESIS:return{nextIndex:-1,token:i};case AsciiCodePoint.CLOSE_PARENTHESIS:if(o+1>=t||e[o+1].codePoint===VirtualCodePoint.LINE_END){i.nodePoints.push(n),i.saturated=!0;break}return{nextIndex:-1,token:i};default:i.nodePoints.push(n)}}}return{nextIndex:t,token:i}}class DefinitionTokenizer extends BaseBlockTokenizer{constructor(e={}){var n,t;super({name:null!==(n=e.name)&&void 0!==n?n:uniqueName$p,priority:null!==(t=e.priority)&&void 0!==t?t:TokenizerPriority.ATOMIC}),this.isContainingBlock=!1}eatOpener(e){if(e.countOfPrecedeSpaces>=4)return null;const{nodePoints:n,startIndex:t,endIndex:i,firstNonWhitespaceIndex:o}=e;if(o>=i)return null;let a=o;const A=eatAndCollectLinkLabel(n,a,i,null);if(A.nextIndex<0)return null;const l=n[t].line,_=()=>({nodeType:"definition",position:{start:calcStartYastNodePoint(n,t),end:calcEndYastNodePoint(n,i-1)},label:A.token,destination:null,title:null,lineNoOfLabel:l,lineNoOfDestination:-1,lineNoOfTitle:-1,lines:[e]});if(!A.token.saturated){return{token:_(),nextIndex:i}}const r=A.nextIndex;if(r<0||r+1>=i||n[r].codePoint!==AsciiCodePoint.COLON)return null;if(a=eatOptionalWhitespaces(n,r+1,i),a>=i){return{token:_(),nextIndex:i}}const u=eatAndCollectLinkDestination(n,a,i,null);if(u.nextIndex<0)return null;if(!u.token.saturated&&u.nextIndex!==i)return null;const I=u.nextIndex;if(a=eatOptionalWhitespaces(n,I,i),a>=i){const e=_();return e.destination=u.token,e.lineNoOfDestination=l,{token:e,nextIndex:i}}if(a===I)return null;const E=eatAndCollectLinkTitle(n,a,i,null);if(E.nextIndex>=0&&(a=E.nextIndex),a<i){if(eatOptionalWhitespaces(n,a,i)<i)return null}const T=_();return T.destination=u.token,T.title=E.token,T.lineNoOfDestination=l,T.lineNoOfTitle=l,{token:T,nextIndex:i}}eatContinuationText(e,n){var t;if(null!=n.title&&n.title.saturated)return{status:"notMatched"};const{nodePoints:i,startIndex:o,firstNonWhitespaceIndex:a,endIndex:A}=e,l=i[o].line;let _=a;if(!n.label.saturated){const t=eatAndCollectLinkLabel(i,_,A,n.label);if(t.nextIndex<0)return{status:"failedAndRollback",lines:n.lines};const o=t.nextIndex;if(!t.token.saturated)return n.lines.push(e),{status:"opening",nextIndex:A};if(o+1>=A||i[o].codePoint!==AsciiCodePoint.COLON)return{status:"failedAndRollback",lines:n.lines};_=o+1}if(null==n.destination){if(_=eatOptionalWhitespaces(i,_,A),_>=A)return{status:"failedAndRollback",lines:n.lines};const t=eatAndCollectLinkDestination(i,_,A,null);if(t.nextIndex<0||!t.token.saturated)return{status:"failedAndRollback",lines:n.lines};if(_=eatOptionalWhitespaces(i,t.nextIndex,A),_>=A)return n.destination=t.token,n.lines.push(e),{status:"opening",nextIndex:A};n.lineNoOfDestination=l,n.lineNoOfTitle=l}n.lineNoOfTitle<0&&(n.lineNoOfTitle=l);const r=eatAndCollectLinkTitle(i,_,A,n.title);if(n.title=r.token,r.nextIndex<0||r.token.nodePoints.length<=0||r.token.saturated&&eatOptionalWhitespaces(i,r.nextIndex,A)<A){if(n.lineNoOfDestination===n.lineNoOfTitle)return{status:"failedAndRollback",lines:n.lines};const e=n.lines[n.lines.length-1];return n.title=null,n.position.end=calcEndYastNodePoint(e.nodePoints,e.endIndex-1),{status:"closingAndRollback",lines:n.lines.slice(n.lineNoOfTitle-1)}}n.lines.push(e);return{status:(null===(t=n.title)||void 0===t?void 0:t.saturated)?"closing":"opening",nextIndex:A}}onClose(e,n){let t;if(null==e.title||!e.title.saturated){if(!e.label.saturated)return{status:"failedAndRollback",lines:e.lines};if(null==e.destination||!e.destination.saturated)return{status:"failedAndRollback",lines:e.lines};if(null!=e.title&&!e.title.saturated){if(e.lineNoOfDestination===e.lineNoOfTitle)return{status:"failedAndRollback",lines:e.lines};const n=e.lines.splice(e.lineNoOfTitle-1),i=e.lines[e.lines.length-1];e.title=null,e.position.end=calcEndYastNodePoint(i.nodePoints,i.endIndex-1),t={status:"closingAndRollback",lines:n}}}const i=e.label.nodePoints,o=calcStringFromNodePoints(i,1,i.length-1),a=resolveLabelToIdentifier(o);return n.registerDefinitionIdentifier(a),e._label=o,e._identifier=a,t}parseBlock(e){const n=e._label,t=e._identifier,i=e.destination.nodePoints;return{type:"definition",identifier:t,label:n,url:encodeLinkDestination(i[0].codePoint===AsciiCodePoint.OPEN_ANGLE?calcEscapedStringFromNodePoints(i,1,i.length-1,!0):calcEscapedStringFromNodePoints(i,0,i.length,!0)),title:null==e.title?void 0:calcEscapedStringFromNodePoints(e.title.nodePoints,1,e.title.nodePoints.length-1)}}}const uniqueName$o="@yozora/tokenizer-delete";class DeleteTokenizer extends BaseInlineTokenizer{constructor(e={}){var n,t;super({name:null!==(n=e.name)&&void 0!==n?n:uniqueName$o,priority:null!==(t=e.priority)&&void 0!==t?t:TokenizerPriority.CONTAINING_INLINE})}_findDelimiter(e,n,t){for(let i=e;i<n;++i){const o=t[i].codePoint;switch(o){case AsciiCodePoint.BACKSLASH:i+=1;break;case AsciiCodePoint.TILDE:{const a=i;if(i=eatOptionalCharacters(t,i+1,n,o)-1,i-a!=1)break;let A="both";const l=a===e?null:t[a-1];null!=l&&isWhitespaceCharacter(l.codePoint)&&(A="opener");const _=i+1===n?null:t[i+1];if(null!=_&&isWhitespaceCharacter(_.codePoint)){if("both"!==A)break;A="closer"}return{type:A,startIndex:a,endIndex:i+1}}}}return null}processDelimiterPair(e,n,t,i,o){t=o.resolveInternalTokens(t,e.endIndex,n.startIndex,i);return{tokens:[{nodeType:"delete",startIndex:e.startIndex,endIndex:n.endIndex,children:t}]}}processToken(e,n){return{type:"delete",children:null!=n?n:[]}}}const uniqueName$n="@yozora/tokenizer-ecma-import",namedImportItemRegex=/^(\w+)(?:\s+as\s+(\w+))?$/,namedImportRegex=/\{\s*((?:[\w]+(?:\s+as\s+[\w]+)?\s*,\s*)*[\w]+(?:\s+as\s+[\w]+)?)\s*\}\s*/,regex1=/^import\s+(['"])([^'"]+)\1$/,regex2=/^import\s+([\w]+)\s+from\s+(['"])([^'"]+)\2$/,regex3=new RegExp(/^import\s+(?:([\w]+)\s*,\s*)?/.source+namedImportRegex.source+/from\s+(['"])([^'"]+)\3$/.source);function resolveNameImports(e){const n=e.split(/\s*,\s*/g).filter((e=>e.length>0)),t=[];for(const e of n){const[,n,i]=namedImportItemRegex.exec(e);t.push({src:n,alias:null==i?null:i})}return t}class EcmaImportTokenizer extends BaseBlockTokenizer{constructor(e={}){var n,t;super({name:null!==(n=e.name)&&void 0!==n?n:uniqueName$n,priority:null!==(t=e.priority)&&void 0!==t?t:TokenizerPriority.ATOMIC}),this.isContainingBlock=!1}eatOpener(e){if(e.countOfPrecedeSpaces>=4)return null;const{nodePoints:n,startIndex:t,endIndex:i,firstNonWhitespaceIndex:o}=e;if(o+8>=i)return null;const a=o;if(n[a].codePoint!==AsciiCodePoint.LOWERCASE_I)return null;if(n[a+1].codePoint!==AsciiCodePoint.LOWERCASE_M)return null;if(n[a+2].codePoint!==AsciiCodePoint.LOWERCASE_P)return null;if(n[a+3].codePoint!==AsciiCodePoint.LOWERCASE_O)return null;if(n[a+4].codePoint!==AsciiCodePoint.LOWERCASE_R)return null;if(n[a+5].codePoint!==AsciiCodePoint.LOWERCASE_T)return null;const[A,l]=calcTrimBoundaryOfCodePoints(n,o,i),_=calcStringFromNodePoints(n,A,l);let r,u=null;const I=()=>({start:calcStartYastNodePoint(n,t),end:calcEndYastNodePoint(n,i-1)});return null!=(r=regex1.exec(_))?u={nodeType:"ecmaImport",position:I(),moduleName:r[2],defaultImport:null,namedImports:[]}:null!=(r=regex2.exec(_))?u={nodeType:"ecmaImport",position:I(),moduleName:r[3],defaultImport:r[1],namedImports:[]}:null!=(r=regex3.exec(_))&&(u={nodeType:"ecmaImport",position:I(),moduleName:r[4],defaultImport:r[1],namedImports:resolveNameImports(r[2])}),null===u?null:{token:u,nextIndex:i,saturated:!0}}parseBlock(e){return{type:"ecmaImport",moduleName:e.moduleName,defaultImport:e.defaultImport,namedImports:e.namedImports}}}const uniqueName$m="@yozora/tokenizer-emphasis";class EmphasisTokenizer extends BaseInlineTokenizer{constructor(e={}){var n,t;super({name:null!==(n=e.name)&&void 0!==n?n:uniqueName$m,priority:null!==(t=e.priority)&&void 0!==t?t:TokenizerPriority.CONTAINING_INLINE})}_findDelimiter(e,n,t){const i=(i,o)=>{const a=o>=n?null:t[o];if(null==a||isUnicodeWhitespaceCharacter(a.codePoint))return!1;if(!isPunctuationCharacter(a.codePoint))return!0;if(i<=e)return!0;const A=t[i-1];return isUnicodeWhitespaceCharacter(A.codePoint)||isPunctuationCharacter(A.codePoint)},o=(i,o)=>{if(i>e){const e=t[i-1];if(isUnicodeWhitespaceCharacter(e.codePoint))return!1;if(!isPunctuationCharacter(e.codePoint))return!0}if(o>=n)return!0;const a=t[o];return isUnicodeWhitespaceCharacter(a.codePoint)||isPunctuationCharacter(a.codePoint)};for(let a=e;a<n;++a){const A=t[a].codePoint;switch(A){case AsciiCodePoint.BACKSLASH:a+=1;break;case AsciiCodePoint.ASTERISK:case AsciiCodePoint.UNDERSCORE:{const l=a;a=eatOptionalCharacters(t,a+1,n,A)-1;const _=a+1,r=i(l,_),u=o(l,_);let I=r,E=u;if(A===AsciiCodePoint.UNDERSCORE&&r&&u){l>e&&!isPunctuationCharacter(t[l-1].codePoint)&&(I=!1);const n=t[_];isPunctuationCharacter(n.codePoint)||(E=!1)}if(!I&&!E)break;const T=_-l;return{type:I?E?"both":"opener":"closer",startIndex:l,endIndex:_,thickness:T,originalThickness:T}}}}return null}isDelimiterPair(e,n,t,i){return i[e.startIndex].codePoint!==i[n.startIndex].codePoint||("both"===e.type||"both"===n.type)&&(e.originalThickness+n.originalThickness)%3==0&&e.originalThickness%3!=0?{paired:!1,opener:!0,closer:!0}:{paired:!0}}processDelimiterPair(e,n,t,i,o){let a=1;e.thickness>1&&n.thickness>1&&(a=2),t=o.resolveInternalTokens(t,e.endIndex,n.startIndex,i);return{tokens:[{nodeType:1===a?"emphasis":"strong",startIndex:e.endIndex-a,endIndex:n.startIndex+a,thickness:a,children:t}],remainOpenerDelimiter:e.thickness>a?{type:e.type,startIndex:e.startIndex,endIndex:e.endIndex-a,thickness:e.thickness-a,originalThickness:e.originalThickness}:void 0,remainCloserDelimiter:n.thickness>a?{type:n.type,startIndex:n.startIndex+a,endIndex:n.endIndex,thickness:n.thickness-a,originalThickness:n.originalThickness}:void 0}}processToken(e,n){return{type:e.nodeType,children:null!=n?n:[]}}}const uniqueName$l="@yozora/tokenizer-fenced-code";class FencedCodeTokenizer extends FencedBlockTokenizer{constructor(e={}){var n,t;super({name:null!==(n=e.name)&&void 0!==n?n:uniqueName$l,priority:null!==(t=e.priority)&&void 0!==t?t:TokenizerPriority.FENCED_BLOCK,nodeType:"code",markers:[AsciiCodePoint.BACKTICK,AsciiCodePoint.TILDE],markersRequired:3,checkInfoString:(e,n)=>{if(n===AsciiCodePoint.BACKTICK)for(const n of e)if(n.codePoint===AsciiCodePoint.BACKTICK)return!1;return!0}}),this.isContainingBlock=!1}parseBlock(e){const n=e.infoString;let t=0;const i=[];for(;t<n.length;++t){const e=n[t];if(isUnicodeWhitespaceCharacter(e.codePoint))break;i.push(e)}t=eatOptionalWhitespaces(n,t,n.length);const o=mergeContentLinesFaithfully(e.lines);return{type:"code",lang:calcEscapedStringFromNodePoints(i,0,i.length,!0),meta:calcEscapedStringFromNodePoints(n,t,n.length,!0),value:calcStringFromNodePoints(o)}}}const uniqueName$k="@yozora/tokenizer-link";function eatLinkDestination(e,n,t){let i=n;switch(e[i].codePoint){case AsciiCodePoint.OPEN_ANGLE:for(i+=1;i<t;++i){switch(e[i].codePoint){case AsciiCodePoint.BACKSLASH:i+=1;break;case AsciiCodePoint.OPEN_ANGLE:case VirtualCodePoint.LINE_END:return-1;case AsciiCodePoint.CLOSE_ANGLE:return i+1}}return-1;default:{let n=0;for(;i<t;++i){const t=e[i].codePoint;switch(t){case AsciiCodePoint.BACKSLASH:i+=1;break;case AsciiCodePoint.OPEN_PARENTHESIS:n+=1;break;case AsciiCodePoint.CLOSE_PARENTHESIS:if(n-=1,n<0)return i;break;default:if(isWhitespaceCharacter(t)||isAsciiControlCharacter(t))return i}}return 0===n?i:-1}}}const checkBalancedBracketsStatus=(e,n,t,i)=>{let o=e,a=0;const A=()=>{switch(i[o].codePoint){case AsciiCodePoint.BACKSLASH:o+=1;break;case AsciiCodePoint.OPEN_BRACKET:a+=1;break;case AsciiCodePoint.CLOSE_BRACKET:a-=1}};for(const i of t)if(!(i.startIndex<e)){if(i.endIndex>n)break;for(;o<i.startIndex;++o)if(A(),a<0)return-1;o=i.endIndex}for(;o<n;++o)if(A(),a<0)return-1;return a>0?1:0};function eatLinkTitle(e,n,t){let i=n;const o=e[i].codePoint;switch(o){case AsciiCodePoint.DOUBLE_QUOTE:case AsciiCodePoint.SINGLE_QUOTE:for(i+=1;i<t;++i){const t=e[i];switch(t.codePoint){case AsciiCodePoint.BACKSLASH:i+=1;break;case o:return i+1;case VirtualCodePoint.LINE_END:if(e[eatOptionalBlankLines(e,n,i)].line>t.line+1)return-1;break}}break;case AsciiCodePoint.OPEN_PARENTHESIS:{let o=1;for(i+=1;i<t;++i){const t=e[i];switch(t.codePoint){case AsciiCodePoint.BACKSLASH:i+=1;break;case VirtualCodePoint.LINE_END:if(e[eatOptionalBlankLines(e,n,i)].line>t.line+1)return-1;break;case AsciiCodePoint.OPEN_PARENTHESIS:o+=1;break;case AsciiCodePoint.CLOSE_PARENTHESIS:if(o-=1,0===o)return i+1}}break}case AsciiCodePoint.CLOSE_PARENTHESIS:return i;default:return-1}return-1}class LinkTokenizer extends BaseInlineTokenizer{constructor(e={}){var n,t;super({name:null!==(n=e.name)&&void 0!==n?n:uniqueName$k,priority:null!==(t=e.priority)&&void 0!==t?t:TokenizerPriority.LINKS})}_findDelimiter(e,n,t,i){const o=i.getBlockEndIndex();for(let i=e;i<n;++i){switch(t[i].codePoint){case AsciiCodePoint.BACKSLASH:i+=1;break;case AsciiCodePoint.OPEN_BRACKET:return{type:"opener",startIndex:i,endIndex:i+1};case AsciiCodePoint.CLOSE_BRACKET:{if(i+1>=n||t[i+1].codePoint!==AsciiCodePoint.OPEN_PARENTHESIS)break;const e=eatOptionalWhitespaces(t,i+2,o),a=eatLinkDestination(t,e,o);if(a<0)break;const A=eatOptionalWhitespaces(t,a,o),l=eatLinkTitle(t,A,o);if(l<0)break;const _=i,r=eatOptionalWhitespaces(t,l,o)+1;if(r>o||t[r-1].codePoint!==AsciiCodePoint.CLOSE_PARENTHESIS)break;return{type:"closer",startIndex:_,endIndex:r,destinationContent:e<a?{startIndex:e,endIndex:a}:void 0,titleContent:A<l?{startIndex:A,endIndex:l}:void 0}}}}return null}isDelimiterPair(e,n,t,i){if(null!=t.find(isLinkToken))return{paired:!1,opener:!1,closer:!1};switch(checkBalancedBracketsStatus(e.endIndex,n.startIndex,t,i)){case-1:return{paired:!1,opener:!1,closer:!0};case 0:return{paired:!0};case 1:return{paired:!1,opener:!0,closer:!1}}}processDelimiterPair(e,n,t,i,o){const a=o.resolveInternalTokens(t,e.endIndex,n.startIndex,i);return{tokens:[{nodeType:"link",startIndex:e.startIndex,endIndex:n.endIndex,destinationContent:n.destinationContent,titleContent:n.titleContent,children:a}]}}processToken(e,n,t){let i,o="";if(null!=e.destinationContent){let{startIndex:n,endIndex:i}=e.destinationContent;t[n].codePoint===AsciiCodePoint.OPEN_ANGLE&&(n+=1,i-=1);o=encodeLinkDestination(calcEscapedStringFromNodePoints(t,n,i,!0))}if(null!=e.titleContent){const{startIndex:n,endIndex:o}=e.titleContent;i=calcEscapedStringFromNodePoints(t,n+1,o-1)}return{type:"link",url:o,title:i,children:n||[]}}}const uniqueName$j="@yozora/tokenizer-footnote";class FootnoteTokenizer extends BaseInlineTokenizer{constructor(e={}){var n,t;super({name:null!==(n=e.name)&&void 0!==n?n:uniqueName$j,priority:null!==(t=e.priority)&&void 0!==t?t:TokenizerPriority.LINKS})}_findDelimiter(e,n,t){for(let i=e;i<n;++i){switch(t[i].codePoint){case AsciiCodePoint.BACKSLASH:i+=1;break;case AsciiCodePoint.CARET:if(i+2<n&&t[i+1].codePoint===AsciiCodePoint.OPEN_BRACKET)return{type:"opener",startIndex:i,endIndex:i+2};break;case AsciiCodePoint.CLOSE_BRACKET:return{type:"closer",startIndex:i,endIndex:i+1}}}return null}isDelimiterPair(e,n,t,i){switch(checkBalancedBracketsStatus(e.endIndex,n.startIndex,t,i)){case-1:return{paired:!1,opener:!1,closer:!0};case 0:return{paired:!0};case 1:return{paired:!1,opener:!0,closer:!1}}}processDelimiterPair(e,n,t,i,o){return{tokens:[{nodeType:"footnote",startIndex:e.startIndex,endIndex:n.endIndex,children:o.resolveInternalTokens(t,e.endIndex,n.startIndex,i)}]}}processToken(e,n){return{type:"footnote",children:n||[]}}}const uniqueName$i="@yozora/tokenizer-footnote-definition";function eatFootnoteLabel(e,n,t){let i=n;if(i+1>=t||e[i].codePoint!==AsciiCodePoint.OPEN_BRACKET||e[i+1].codePoint!==AsciiCodePoint.CARET)return-1;let o=!0;const a=Math.min(t,i+1+1e3);for(i+=2;i<a;++i){const n=e[i].codePoint;switch(n){case AsciiCodePoint.BACKSLASH:i+=1;break;case AsciiCodePoint.OPEN_BRACKET:return-1;case AsciiCodePoint.CLOSE_BRACKET:return o?-1:i+1;case VirtualCodePoint.LINE_END:return-1;default:o&&!isWhitespaceCharacter(n)&&(o=!1)}}return-1}class FootnoteDefinitionTokenizer extends BaseBlockTokenizer{constructor(e={}){var n,t;super({name:null!==(n=e.name)&&void 0!==n?n:uniqueName$i,priority:null!==(t=e.priority)&&void 0!==t?t:TokenizerPriority.CONTAINING_BLOCK}),this.isContainingBlock=!0,this.indent=4}eatOpener(e){if(e.countOfPrecedeSpaces>=4)return null;const{nodePoints:n,startIndex:t,firstNonWhitespaceIndex:i,endIndex:o}=e,a=eatFootnoteLabel(n,i,o);if(a<0||a>=o||n[a].codePoint!==AsciiCodePoint.COLON)return null;return{token:{nodeType:"footnoteDefinition",position:{start:calcStartYastNodePoint(n,t),end:calcEndYastNodePoint(n,a)},label:{nodePoints:n,startIndex:i,endIndex:a},children:[]},nextIndex:a+1}}eatContinuationText(e){const{startIndex:n,endIndex:t,firstNonWhitespaceIndex:i,countOfPrecedeSpaces:o}=e;return i>=t?{status:"opening",nextIndex:Math.min(t-1,n+this.indent)}:o>=this.indent?{status:"opening",nextIndex:n+this.indent}:{status:"notMatched"}}onClose(e,n){const t=calcStringFromNodePoints(e.label.nodePoints,e.label.startIndex+2,e.label.endIndex-1),i=resolveLabelToIdentifier(t);n.registerFootnoteDefinitionIdentifier(i),e._label=t,e._identifier=i}parseBlock(e,n){const t=e._label;return{type:"footnoteDefinition",identifier:e._identifier,label:t,children:null!=n?n:[]}}}const uniqueName$h="@yozora/tokenizer-footnote-reference";class FootnoteReferenceTokenizer extends BaseInlineTokenizer{constructor(e={}){var n,t;super({name:null!==(n=e.name)&&void 0!==n?n:uniqueName$h,priority:null!==(t=e.priority)&&void 0!==t?t:TokenizerPriority.ATOMIC})}_findDelimiter(e,n,t){for(let i=e;i<n;++i){switch(t[i].codePoint){case AsciiCodePoint.BACKSLASH:i+=1;break;case AsciiCodePoint.OPEN_BRACKET:{const e=eatFootnoteLabel(t,i,n);if(e>=0)return{type:"full",startIndex:i,endIndex:e};break}}}return null}processSingleDelimiter(e,n,t){const i=resolveLinkLabelAndIdentifier(n,e.startIndex+2,e.endIndex-1);if(null==i)return[];const{label:o,identifier:a}=i;if(!t.hasFootnoteDefinition(a))return[];return[{nodeType:"footnoteReference",startIndex:e.startIndex,endIndex:e.endIndex,label:o,identifier:a}]}processToken(e){const{identifier:n,label:t}=e;return{type:"footnoteReference",identifier:n,label:t}}}const uniqueName$g="@yozora/tokenizer-heading";class HeadingTokenizer extends BaseBlockTokenizer{constructor(e={}){var n,t;super({name:null!==(n=e.name)&&void 0!==n?n:uniqueName$g,priority:null!==(t=e.priority)&&void 0!==t?t:TokenizerPriority.ATOMIC}),this.isContainingBlock=!1}eatOpener(e){if(e.countOfPrecedeSpaces>=4)return null;const{nodePoints:n,startIndex:t,endIndex:i,firstNonWhitespaceIndex:o}=e;if(o>=i||n[o].codePoint!==AsciiCodePoint.NUMBER_SIGN)return null;const a=eatOptionalCharacters(n,o+1,i,AsciiCodePoint.NUMBER_SIGN),A=a-o;if(A>6)return null;if(a+1<i&&!isSpaceCharacter(n[a].codePoint))return null;const l=i;return{token:{nodeType:"heading",position:{start:calcStartYastNodePoint(n,t),end:calcEndYastNodePoint(n,l-1)},depth:A,line:e},nextIndex:l,saturated:!0}}eatAndInterruptPreviousSibling(e,n){const t=this.eatOpener(e);return null==t?null:{token:t.token,nextIndex:t.nextIndex,remainingSibling:n}}parseBlock(e,n,t){const{nodePoints:i,firstNonWhitespaceIndex:o,endIndex:a}=e.line;let[A,l]=calcTrimBoundaryOfCodePoints(i,o+e.depth,a),_=0;for(let e=l-1;e>=A;--e){if(i[e].codePoint!==AsciiCodePoint.NUMBER_SIGN)break;_+=1}if(_>0){let e=0,n=l-1-_;for(;n>=A;--n){const t=i[n].codePoint;if(!isWhitespaceCharacter(t))break;e+=1}(e>0||n<A)&&(l-=_+e)}const r=[{nodePoints:i,startIndex:A,endIndex:l,firstNonWhitespaceIndex:A,countOfPrecedeSpaces:0}],u=t.buildPhrasingContent(r);return{type:"heading",depth:e.depth,children:null==u?[]:[u]}}}function eatHTMLTagName(e,n,t){if(n>=t||!isAsciiLetter(e[n].codePoint))return null;let i=n;for(;i<t;++i){const n=e[i].codePoint;if(!isAsciiLetter(n)&&!isAsciiDigitCharacter(n)&&n!==AsciiCodePoint.MINUS_SIGN)return i}return i}const includedTags$1=["pre","script","style"];function eatStartCondition1(e,n,t,i){if(!includedTags$1.includes(i))return null;if(n>=t)return t;const o=e[n].codePoint;return isWhitespaceCharacter(o)||o===AsciiCodePoint.CLOSE_ANGLE?n+1:null}function eatEndCondition1(e,n,t){for(let i=n;i<t;++i)if(e[i].codePoint===AsciiCodePoint.OPEN_ANGLE&&i+3<t&&e[i+1].codePoint===AsciiCodePoint.SLASH){const n=i+2,o=eatHTMLTagName(e,n,t);if(null==o||o>=t||e[o].codePoint!==AsciiCodePoint.CLOSE_ANGLE){i+=1;continue}const a=calcStringFromNodePoints(e,n,o,!0).toLowerCase();if(includedTags$1.includes(a))return o}return null}function eatStartCondition2(e,n,t){const i=n;return i+2<t&&e[i].codePoint===AsciiCodePoint.EXCLAMATION_MARK&&e[i+1].codePoint===AsciiCodePoint.MINUS_SIGN&&e[i+2].codePoint===AsciiCodePoint.MINUS_SIGN?i+3:null}function eatEndCondition2(e,n,t){for(let i=n;i<t;++i)if(e[i].codePoint===AsciiCodePoint.MINUS_SIGN&&i+2<t&&e[i+1].codePoint===AsciiCodePoint.MINUS_SIGN&&e[i+2].codePoint===AsciiCodePoint.CLOSE_ANGLE)return i+3;return null}function eatStartCondition3(e,n,t){const i=n;return i<t&&e[i].codePoint===AsciiCodePoint.QUESTION_MARK?i+1:null}function eatEndCondition3(e,n,t){for(let i=n;i<t;++i)if(e[i].codePoint===AsciiCodePoint.QUESTION_MARK&&i+1<t&&e[i+1].codePoint===AsciiCodePoint.CLOSE_ANGLE)return i+2;return null}function eatStartCondition4(e,n,t){const i=n;return i+1<t&&e[i].codePoint===AsciiCodePoint.EXCLAMATION_MARK&&isAsciiUpperLetter(e[i+1].codePoint)?i+2:null}function eatEndCondition4(e,n,t){for(let i=n;i<t;++i)if(e[i].codePoint===AsciiCodePoint.CLOSE_ANGLE)return i+1;return null}function eatStartCondition5(e,n,t){const i=n;return i+6<t&&e[i].codePoint===AsciiCodePoint.EXCLAMATION_MARK&&e[i+1].codePoint===AsciiCodePoint.OPEN_BRACKET&&e[i+2].codePoint===AsciiCodePoint.UPPERCASE_C&&e[i+3].codePoint===AsciiCodePoint.UPPERCASE_D&&e[i+4].codePoint===AsciiCodePoint.UPPERCASE_A&&e[i+5].codePoint===AsciiCodePoint.UPPERCASE_T&&e[i+6].codePoint===AsciiCodePoint.UPPERCASE_A?i+7:null}function eatEndCondition5(e,n,t){for(let i=n;i<t;++i)if(e[i].codePoint===AsciiCodePoint.CLOSE_BRACKET&&i+2<t&&e[i+1].codePoint===AsciiCodePoint.CLOSE_BRACKET&&e[i+2].codePoint===AsciiCodePoint.CLOSE_ANGLE)return i+3;return null}const includedTags=["address","article","aside","base","basefont","blockquote","body","caption","center","col","colgroup","dd","details","dialog","dir","div","dl","dt","fieldset","figcaption","figure","footer","form","frame","frameset","h1","h2","h3","h4","h5","h6","head","header","hr","html","iframe","legend","li","link","main","menu","menuitem","nav","noframes","ol","optgroup","option","p","param","section","source","summary","table","tbody","td","tfoot","th","thead","title","tr","track","ul"];function eatStartCondition6(e,n,t,i){if(!includedTags.includes(i))return null;if(n>=t)return t;const o=e[n].codePoint;return isWhitespaceCharacter(o)||o===AsciiCodePoint.CLOSE_ANGLE?n+1:o===AsciiCodePoint.SLASH&&n+1<t&&e[n+1].codePoint===AsciiCodePoint.CLOSE_ANGLE?n+2:null}function eatHTMLAttribute(e,n,t){let i=eatOptionalWhitespaces(e,n,t);if(i<=n||i>=t)return null;const o=i;let a=e[i].codePoint;if(!isAsciiLetter(a)&&a!==AsciiCodePoint.UNDERSCORE&&a!==AsciiCodePoint.COLON)return null;for(i=o+1;i<t&&(a=e[i].codePoint,isAsciiLetter(a)||isAsciiDigitCharacter(a)||a===AsciiCodePoint.UNDERSCORE||a===AsciiCodePoint.DOT||a===AsciiCodePoint.COLON||a===AsciiCodePoint.MINUS_SIGN);++i);const A=i,l={name:{startIndex:o,endIndex:A}};if(i=eatOptionalWhitespaces(e,A,t),i<t&&e[i].codePoint===AsciiCodePoint.EQUALS_SIGN&&(i=eatOptionalWhitespaces(e,i+1,t),i<t)){switch(e[i].codePoint){case AsciiCodePoint.DOUBLE_QUOTE:{const n=i+1;for(i=n;i<t&&(a=e[i].codePoint,a!==AsciiCodePoint.DOUBLE_QUOTE);++i);const o=i;i<t&&e[i].codePoint===AsciiCodePoint.DOUBLE_QUOTE&&(l.value={startIndex:n,endIndex:o},i+=1);break}case AsciiCodePoint.SINGLE_QUOTE:{const n=i+1;for(i=n;i<t&&(a=e[i].codePoint,a!==AsciiCodePoint.SINGLE_QUOTE);++i);const o=i;i<t&&e[i].codePoint===AsciiCodePoint.SINGLE_QUOTE&&(l.value={startIndex:n,endIndex:o},i+=1);break}default:{const n=i;for(;i<t&&(a=e[i].codePoint,!isWhitespaceCharacter(a)&&a!==AsciiCodePoint.DOUBLE_QUOTE&&a!==AsciiCodePoint.SINGLE_QUOTE&&a!==AsciiCodePoint.EQUALS_SIGN&&a!==AsciiCodePoint.OPEN_ANGLE&&a!==AsciiCodePoint.CLOSE_ANGLE&&a!==AsciiCodePoint.BACKTICK);++i);const o=i;o>n&&(l.value={startIndex:n,endIndex:o});break}}if(null!=l.value)return{attribute:l,nextIndex:i}}return{attribute:l,nextIndex:A}}const excludedTags=["pre","script","style"];function eatStartCondition7(e,n,t,i,o){if(excludedTags.includes(i)||n>=t)return null;let a=n;if(o){for(;a<t;){const n=eatHTMLAttribute(e,a,t);if(null==n)break;a=n.nextIndex}if(a=eatOptionalWhitespaces(e,a,t),a>=t)return null;e[a].codePoint===AsciiCodePoint.SLASH&&(a+=1)}else a=eatOptionalWhitespaces(e,n,t);if(a>=t||e[a].codePoint!==AsciiCodePoint.CLOSE_ANGLE)return null;for(a+=1;a<t;++a)if(!isWhitespaceCharacter(e[a].codePoint))return null;return t}const uniqueName$f="@yozora/tokenizer-html-block";class HtmlBlockTokenizer extends BaseBlockTokenizer{constructor(e={}){var n,t;super({name:null!==(n=e.name)&&void 0!==n?n:uniqueName$f,priority:null!==(t=e.priority)&&void 0!==t?t:TokenizerPriority.ATOMIC}),this.isContainingBlock=!1}eatOpener(e){if(e.countOfPrecedeSpaces>=4)return null;const{nodePoints:n,startIndex:t,endIndex:i,firstNonWhitespaceIndex:o}=e;if(o>=i||n[o].codePoint!==AsciiCodePoint.OPEN_ANGLE)return null;const a=o+1,A=this.eatStartCondition(n,a,i);if(null==A)return null;const{condition:l}=A;let _=!1;if(6!==l&&7!==l){null!=this.eatEndCondition(n,A.nextIndex,i,l)&&(_=!0)}const r=i;return{token:{nodeType:"html",position:{start:calcStartYastNodePoint(n,t),end:calcEndYastNodePoint(n,r-1)},condition:l,lines:[e]},nextIndex:r,saturated:_}}eatAndInterruptPreviousSibling(e,n){const t=this.eatOpener(e);if(null==t||7===t.token.condition)return null;const{token:i,nextIndex:o}=t;return{token:i,nextIndex:o,remainingSibling:n}}eatContinuationText(e,n){const{nodePoints:t,endIndex:i,firstNonWhitespaceIndex:o}=e,a=this.eatEndCondition(t,o,i,n.condition);return-1===a?{status:"notMatched"}:(n.lines.push(e),null!=a?{status:"closing",nextIndex:i}:{status:"opening",nextIndex:i})}parseBlock(e){return{type:"html",value:calcStringFromNodePoints(mergeContentLinesFaithfully(e.lines))}}eatStartCondition(e,n,t){let i=null;if(n>=t)return null;if(i=eatStartCondition2(e,n,t),null!=i)return{nextIndex:i,condition:2};if(i=eatStartCondition3(e,n,t),null!=i)return{nextIndex:i,condition:3};if(i=eatStartCondition4(e,n,t),null!=i)return{nextIndex:i,condition:4};if(i=eatStartCondition5(e,n,t),null!=i)return{nextIndex:i,condition:5};if(e[n].codePoint!==AsciiCodePoint.SLASH){const o=n,a=eatHTMLTagName(e,o,t);if(null==a)return null;const A={startIndex:o,endIndex:a},l=calcStringFromNodePoints(e,A.startIndex,A.endIndex).toLowerCase();return i=eatStartCondition1(e,A.endIndex,t,l),null!=i?{nextIndex:i,condition:1}:(i=eatStartCondition6(e,A.endIndex,t,l),null!=i?{nextIndex:i,condition:6}:(i=eatStartCondition7(e,A.endIndex,t,l,!0),null!=i?{nextIndex:i,condition:7}:null))}const o=n+1,a=eatHTMLTagName(e,o,t);if(null==a)return null;const A={startIndex:o,endIndex:a},l=calcStringFromNodePoints(e,A.startIndex,A.endIndex).toLowerCase();return i=eatStartCondition6(e,A.endIndex,t,l),null!=i?{nextIndex:i,condition:6}:(i=eatStartCondition7(e,A.endIndex,t,l,!1),null!=i?{nextIndex:i,condition:7}:null)}eatEndCondition(e,n,t,i){switch(i){case 1:return null==eatEndCondition1(e,n,t)?null:t;case 2:return null==eatEndCondition2(e,n,t)?null:t;case 3:return null==eatEndCondition3(e,n,t)?null:t;case 4:return null==eatEndCondition4(e,n,t)?null:t;case 5:return null==eatEndCondition5(e,n,t)?null:t;case 6:case 7:return eatOptionalWhitespaces(e,n,t)>=t?-1:null}}}const uniqueName$e="@yozora/tokenizer-html-inline";function eatHtmlInlineCDataDelimiter(e,n,t){let i=n;if(i+11>=t||e[i+1].codePoint!==AsciiCodePoint.EXCLAMATION_MARK||e[i+2].codePoint!==AsciiCodePoint.OPEN_BRACKET||e[i+3].codePoint!==AsciiCodePoint.UPPERCASE_C||e[i+4].codePoint!==AsciiCodePoint.UPPERCASE_D||e[i+5].codePoint!==AsciiCodePoint.UPPERCASE_A||e[i+6].codePoint!==AsciiCodePoint.UPPERCASE_T||e[i+7].codePoint!==AsciiCodePoint.UPPERCASE_A||e[i+8].codePoint!==AsciiCodePoint.OPEN_BRACKET)return null;for(i=i+9;i<t;++i){if(e[i].codePoint===AsciiCodePoint.CLOSE_BRACKET){if(i+2>=t)return null;if(e[i+1].codePoint===AsciiCodePoint.CLOSE_BRACKET&&e[i+2].codePoint===AsciiCodePoint.CLOSE_ANGLE){return{type:"full",startIndex:n,endIndex:i+3,htmlType:"cdata"}}}}return null}function eatHtmlInlineClosingDelimiter(e,n,t){let i=n;if(i+3>=t||e[i+1].codePoint!==AsciiCodePoint.SLASH)return null;const o=i+2,a=eatHTMLTagName(e,o,t);if(null==a)return null;if(i=eatOptionalWhitespaces(e,a,t),i>=t||e[i].codePoint!==AsciiCodePoint.CLOSE_ANGLE)return null;return{type:"full",startIndex:n,endIndex:i+1,htmlType:"closing",tagName:{startIndex:o,endIndex:a}}}function eatHtmlInlineCommentDelimiter(e,n,t){let i=n;if(i+6>=t||e[i+1].codePoint!==AsciiCodePoint.EXCLAMATION_MARK||e[i+2].codePoint!==AsciiCodePoint.MINUS_SIGN||e[i+3].codePoint!==AsciiCodePoint.MINUS_SIGN)return null;if(e[i+4].codePoint===AsciiCodePoint.CLOSE_ANGLE)return null;if(e[i+4].codePoint===AsciiCodePoint.MINUS_SIGN&&e[i+5].codePoint===AsciiCodePoint.CLOSE_ANGLE)return null;for(i=i+4;i<t;++i){if(e[i].codePoint!==AsciiCodePoint.MINUS_SIGN)continue;let o=1;for(;i+o<t;o+=1){if(e[i+o].codePoint!==AsciiCodePoint.MINUS_SIGN)break}if(o<2)continue;if(o>2||i+2>=t||e[i+2].codePoint!==AsciiCodePoint.CLOSE_ANGLE)return null;return{type:"full",startIndex:n,endIndex:i+3,htmlType:"comment"}}return null}function eatHtmlInlineDeclarationDelimiter(e,n,t){let i=n;if(i+4>=t||e[i+1].codePoint!==AsciiCodePoint.EXCLAMATION_MARK)return null;const o=i+2;for(i=o;i<t;++i){const n=e[i];if(!isAsciiUpperLetter(n.codePoint))break}if(i-o<=0||i+1>=t||!isWhitespaceCharacter(e[i].codePoint))return null;const a=i;for(i=i+1;i<t;++i){if(e[i].codePoint===AsciiCodePoint.CLOSE_ANGLE){return{type:"full",startIndex:n,endIndex:i+1,htmlType:"declaration",tagName:{startIndex:o,endIndex:a}}}}return null}function eatHtmlInlineInstructionDelimiter(e,n,t){let i=n;if(i+3>=t||e[i+1].codePoint!==AsciiCodePoint.QUESTION_MARK)return null;for(i=i+2;i<t;++i){if(e[i].codePoint===AsciiCodePoint.QUESTION_MARK){if(i+1>=t)return null;if(e[i+1].codePoint===AsciiCodePoint.CLOSE_ANGLE){return{type:"full",startIndex:n,endIndex:i+2,htmlType:"instruction"}}}}return null}function eatHtmlInlineTokenOpenDelimiter(e,n,t){let i=n;if(i+2>=t)return null;const o=i+1,a=eatHTMLTagName(e,o,t);if(null==a)return null;const A=[];for(i=a;i<t;){const n=eatHTMLAttribute(e,i,t);if(null==n)break;A.push(n.attribute),i=n.nextIndex}if(i=eatOptionalWhitespaces(e,i,t),i>=t)return null;let l=!1;if(e[i].codePoint===AsciiCodePoint.SLASH&&(i+=1,l=!0),i>=t||e[i].codePoint!==AsciiCodePoint.CLOSE_ANGLE)return null;return{type:"full",startIndex:n,endIndex:i+1,htmlType:"open",tagName:{startIndex:o,endIndex:a},attributes:A,selfClosed:l}}class HtmlInlineTokenizer extends BaseInlineTokenizer{constructor(e={}){var n,t;super({name:null!==(n=e.name)&&void 0!==n?n:uniqueName$e,priority:null!==(t=e.priority)&&void 0!==t?t:TokenizerPriority.ATOMIC})}_findDelimiter(e,n,t){for(let i=e;i<n&&(i=eatOptionalWhitespaces(t,i,n),!(i>=n));++i){switch(t[i].codePoint){case AsciiCodePoint.BACKSLASH:i+=1;break;case AsciiCodePoint.OPEN_ANGLE:{const e=this.tryToEatDelimiter(t,i,n);if(null!=e)return e;break}}}return null}processSingleDelimiter(e){return[Object.assign(Object.assign({},e),{nodeType:"html"})]}processToken(e,n,t){const{startIndex:i,endIndex:o}=e;return{type:"html",value:calcStringFromNodePoints(t,i,o)}}tryToEatDelimiter(e,n,t){let i=null;return i=eatHtmlInlineTokenOpenDelimiter(e,n,t),null!=i?i:(i=eatHtmlInlineClosingDelimiter(e,n,t),null!=i?i:(i=eatHtmlInlineCommentDelimiter(e,n,t),null!=i?i:(i=eatHtmlInlineInstructionDelimiter(e,n,t),null!=i?i:(i=eatHtmlInlineDeclarationDelimiter(e,n,t),null!=i||(i=eatHtmlInlineCDataDelimiter(e,n,t)),i))))}}const uniqueName$d="@yozora/tokenizer-image";function calcImageAlt(e){return e.map((e=>null!=e.value?e.value:null!=e.alt?e.alt:null!=e.children?calcImageAlt(e.children):"")).join("")}class ImageTokenizer extends BaseInlineTokenizer{constructor(e={}){var n,t;super({name:null!==(n=e.name)&&void 0!==n?n:uniqueName$d,priority:null!==(t=e.priority)&&void 0!==t?t:TokenizerPriority.LINKS})}_findDelimiter(e,n,t,i){const o=i.getBlockEndIndex();for(let i=e;i<n;++i){switch(t[i].codePoint){case AsciiCodePoint.BACKSLASH:i+=1;break;case AsciiCodePoint.EXCLAMATION_MARK:if(i+1<n&&t[i+1].codePoint===AsciiCodePoint.OPEN_BRACKET)return{type:"opener",startIndex:i,endIndex:i+2};break;case AsciiCodePoint.CLOSE_BRACKET:{if(i+1>=n||t[i+1].codePoint!==AsciiCodePoint.OPEN_PARENTHESIS)break;const e=eatOptionalWhitespaces(t,i+2,o),a=eatLinkDestination(t,e,o);if(a<0)break;const A=eatOptionalWhitespaces(t,a,o),l=eatLinkTitle(t,A,o);if(l<0)break;const _=i,r=eatOptionalWhitespaces(t,l,o)+1;if(r>o||t[r-1].codePoint!==AsciiCodePoint.CLOSE_PARENTHESIS)break;return{type:"closer",startIndex:_,endIndex:r,destinationContent:e<a?{startIndex:e,endIndex:a}:void 0,titleContent:A<l?{startIndex:A,endIndex:l}:void 0}}}}return null}isDelimiterPair(e,n,t,i){switch(checkBalancedBracketsStatus(e.endIndex,n.startIndex,t,i)){case-1:return{paired:!1,opener:!1,closer:!0};case 0:return{paired:!0};case 1:return{paired:!1,opener:!0,closer:!1}}}processDelimiterPair(e,n,t,i,o){return{tokens:[{nodeType:"image",startIndex:e.startIndex,endIndex:n.endIndex,destinationContent:n.destinationContent,titleContent:n.titleContent,children:o.resolveInternalTokens(t,e.endIndex,n.startIndex,i)}]}}processToken(e,n,t){let i="";if(null!=e.destinationContent){let{startIndex:n,endIndex:o}=e.destinationContent;t[n].codePoint===AsciiCodePoint.OPEN_ANGLE&&(n+=1,o-=1);i=encodeLinkDestination(calcEscapedStringFromNodePoints(t,n,o,!0))}const o=calcImageAlt(n||[]);let a;if(null!=e.titleContent){const{startIndex:n,endIndex:i}=e.titleContent;a=calcEscapedStringFromNodePoints(t,n+1,i-1)}return{type:"image",url:i,alt:o,title:a}}}const uniqueName$c="@yozora/tokenizer-image-reference";class ImageReferenceTokenizer extends BaseInlineTokenizer{constructor(e={}){var n,t;super({name:null!==(n=e.name)&&void 0!==n?n:uniqueName$c,priority:null!==(t=e.priority)&&void 0!==t?t:TokenizerPriority.LINKS})}_findDelimiter(e,n,t){for(let i=e;i<n;++i){switch(t[i].codePoint){case AsciiCodePoint.BACKSLASH:i+=1;break;case AsciiCodePoint.EXCLAMATION_MARK:if(i+1>=n||t[i+1].codePoint!==AsciiCodePoint.OPEN_BRACKET)break;return{type:"opener",startIndex:i,endIndex:i+2,brackets:[]};case AsciiCodePoint.CLOSE_BRACKET:{const e={type:"closer",startIndex:i,endIndex:i+1,brackets:[]};if(i+1>=n||t[i+1].codePoint!==AsciiCodePoint.OPEN_BRACKET)return e;const o=eatLinkLabel(t,i+1,n);return o.nextIndex<0?e:null==o.labelAndIdentifier?{type:"closer",startIndex:i,endIndex:o.nextIndex,brackets:[{startIndex:i+1,endIndex:o.nextIndex}]}:{type:"closer",startIndex:i,endIndex:o.nextIndex,brackets:[{startIndex:i+1,endIndex:o.nextIndex,label:o.labelAndIdentifier.label,identifier:o.labelAndIdentifier.identifier}]}}}}return null}isDelimiterPair(e,n,t,i){switch(checkBalancedBracketsStatus(e.endIndex,n.startIndex,t,i)){case-1:return{paired:!1,opener:!1,closer:!0};case 0:return{paired:!0};case 1:return{paired:!1,opener:!0,closer:!1}}}processDelimiterPair(e,n,t,i,o){const a=n.brackets[0];if(null!=a&&null!=a.identifier){if(o.hasDefinition(a.identifier)){return{tokens:[{nodeType:"imageReference",startIndex:e.startIndex,endIndex:a.endIndex,referenceType:"full",label:a.label,identifier:a.identifier,children:o.resolveInternalTokens(t,e.endIndex,n.startIndex,i)}]}}return{tokens:t}}const{nextIndex:A,labelAndIdentifier:l}=eatLinkLabel(i,e.endIndex-1,n.startIndex+1);if(A===n.startIndex+1&&null!=l&&o.hasDefinition(l.identifier)){return{tokens:[{nodeType:"imageReference",startIndex:e.startIndex,endIndex:n.endIndex,referenceType:null==a?"shortcut":"collapsed",label:l.label,identifier:l.identifier,children:o.resolveInternalTokens(t,e.endIndex,n.startIndex,i)}]}}return{tokens:t}}processToken(e,n){const{identifier:t,label:i,referenceType:o}=e;return{type:"imageReference",identifier:t,label:i,referenceType:o,alt:calcImageAlt(n||[])}}}const uniqueName$b="@yozora/tokenizer-indented-code";class IndentedCodeTokenizer extends BaseBlockTokenizer{constructor(e={}){var n,t;super({name:null!==(n=e.name)&&void 0!==n?n:uniqueName$b,priority:null!==(t=e.priority)&&void 0!==t?t:TokenizerPriority.ATOMIC}),this.isContainingBlock=!1}eatOpener(e){if(e.countOfPrecedeSpaces<4)return null;const{nodePoints:n,startIndex:t,firstNonWhitespaceIndex:i,endIndex:o}=e;let a=t+4;if(n[t].codePoint===AsciiCodePoint.SPACE&&n[t+3].codePoint===VirtualCodePoint.SPACE){let e=t+1;for(;e<i&&n[e].codePoint!==VirtualCodePoint.SPACE;++e);a=e+4}const A=o;return{token:{nodeType:"code",position:{start:calcStartYastNodePoint(n,t),end:calcEndYastNodePoint(n,A-1)},lines:[{nodePoints:n,startIndex:a,endIndex:o,firstNonWhitespaceIndex:i,countOfPrecedeSpaces:e.countOfPrecedeSpaces-(a-t)}]},nextIndex:A}}eatContinuationText(e,n){const{nodePoints:t,startIndex:i,endIndex:o,firstNonWhitespaceIndex:a,countOfPrecedeSpaces:A}=e;if(A<4&&a<o)return{status:"notMatched"};const l=Math.min(o-1,i+4);return n.lines.push({nodePoints:t,startIndex:l,endIndex:o,firstNonWhitespaceIndex:a,countOfPrecedeSpaces:A-(l-i)}),{status:"opening",nextIndex:o}}parseBlock(e){const{lines:n}=e;let t=0,i=n.length;for(;t<i;++t){const e=n[t];if(e.firstNonWhitespaceIndex<e.endIndex)break}for(;t<i;--i){const e=n[i-1];if(e.firstNonWhitespaceIndex<e.endIndex)break}return{type:"code",value:calcStringFromNodePoints(mergeContentLinesFaithfully(n,t,i))}}}const uniqueName$a="@yozora/tokenizer-inline-code";class InlineCodeTokenizer extends BaseInlineTokenizer{constructor(e={}){var n,t;super({name:null!==(n=e.name)&&void 0!==n?n:uniqueName$a,priority:null!==(t=e.priority)&&void 0!==t?t:TokenizerPriority.ATOMIC})}*findDelimiter(e,n){const t=n.getBlockStartIndex(),i=n.getBlockEndIndex(),o=[];for(let n=t;n<i;++n){const t=e[n].codePoint;switch(t){case AsciiCodePoint.BACKSLASH:if(n+=1,n<i&&e[n].codePoint===AsciiCodePoint.BACKTICK){const t=eatOptionalCharacters(e,n+1,i,AsciiCodePoint.BACKTICK);o.push({type:"closer",startIndex:n,endIndex:t}),t>n+1&&o.push({type:"opener",startIndex:n+1,endIndex:t}),n=t-1}break;case AsciiCodePoint.BACKTICK:{const a=n,A=eatOptionalCharacters(e,n+1,i,t);o.push({type:"both",startIndex:a,endIndex:A}),n=A-1;break}}}let a=0,A=-1,l=null;for(;a<o.length;){const[e,n]=yield l;if(A===n&&(null==l||l.startIndex>=e))continue;A=n;let t=null,i=null;for(;a<o.length;++a){for(;a<o.length;++a){const n=o[a];if(n.startIndex>=e&&"closer"!==n.type)break}if(a+1>=o.length)return;t=o[a];const n=t.endIndex-t.startIndex;for(let e=a+1;e<o.length;++e){const t=o[e];if("opener"!==t.type&&t.endIndex-t.startIndex===n){i=t;break}}if(null!=i)break}if(null==i)return;l={type:"full",startIndex:t.startIndex,endIndex:i.endIndex,thickness:i.endIndex-i.startIndex}}}_findDelimiter(){return null}processSingleDelimiter(e){return[{nodeType:"inlineCode",startIndex:e.startIndex,endIndex:e.endIndex,thickness:e.thickness}]}processToken(e,n,t){let i=e.startIndex+e.thickness,o=e.endIndex-e.thickness,a=!0;for(let e=i;e<o;++e)if(!isSpaceLike(t[e].codePoint)){a=!1;break}if(!a&&i+2<o){const e=t[i].codePoint,n=t[o-1].codePoint;isSpaceLike(e)&&isSpaceLike(n)&&(i+=1,o-=1)}return{type:"inlineCode",value:calcStringFromNodePoints(t,i,o).replace(/\n/g," ")}}}const uniqueName$9="@yozora/tokenizer-inline-math";class InlineMathTokenizer extends BaseInlineTokenizer{constructor(e={}){var n,t,i;super({name:null!==(n=e.name)&&void 0!==n?n:uniqueName$9,priority:null!==(t=e.priority)&&void 0!==t?t:TokenizerPriority.ATOMIC}),this.backtickRequired=null===(i=e.backtickRequired)||void 0===i||i}*findDelimiter(e,n){const t=n.getBlockStartIndex(),i=n.getBlockEndIndex(),o=[];for(let n=t;n<i;++n){switch(e[n].codePoint){case AsciiCodePoint.BACKSLASH:n+=1;break;case AsciiCodePoint.BACKTICK:{const t=n;if(n=eatOptionalCharacters(e,n+1,i,AsciiCodePoint.BACKTICK),n>=i||e[n].codePoint!==AsciiCodePoint.DOLLAR_SIGN)break;const a={type:"opener",startIndex:t,endIndex:n+1};o.push(a);break}case AsciiCodePoint.DOLLAR_SIGN:{const t=n;if(n=eatOptionalCharacters(e,n+1,i,AsciiCodePoint.BACKTICK),n<i&&e[n].codePoint===AsciiCodePoint.DOLLAR_SIGN)break;if(n-t<=1){if(this.backtickRequired)break;const e={type:"both",startIndex:t,endIndex:n};o.push(e);break}const a={type:"closer",startIndex:t,endIndex:n};o.push(a),n-=1;break}}}let a=0,A=-1,l=null;for(;a<o.length;){const[e,n]=yield l;if(A===n&&(null==l||l.startIndex>=e))continue;A=n;let t=null,i=null;for(;a<o.length;++a){for(;a<o.length;++a){const n=o[a];if(n.startIndex>=e&&"closer"!==n.type)break}if(a+1>=o.length)break;t=o[a];const n=t.endIndex-t.startIndex;for(let e=a+1;e<o.length;++e){const t=o[e];if("opener"!==t.type&&t.endIndex-t.startIndex===n){i=t;break}}if(null!=i)break}if(null==i)return;l={type:"full",startIndex:t.startIndex,endIndex:i.endIndex,thickness:i.endIndex-i.startIndex}}}_findDelimiter(){return null}processSingleDelimiter(e){return[{nodeType:"inlineMath",startIndex:e.startIndex,endIndex:e.endIndex,thickness:e.thickness}]}processToken(e,n,t){let i=e.startIndex+e.thickness,o=e.endIndex-e.thickness,a=!0;for(let e=i;e<o;++e)if(!isSpaceLike(t[e].codePoint)){a=!1;break}if(!a&&i+2<o){const e=t[i].codePoint,n=t[o-1].codePoint;isSpaceLike(e)&&isSpaceLike(n)&&(i+=1,o-=1)}return{type:"inlineMath",value:calcStringFromNodePoints(t,i,o).replace(/\n/," ")}}}const uniqueName$8="@yozora/tokenizer-link-reference";class LinkReferenceTokenizer extends BaseInlineTokenizer{constructor(e={}){var n,t;super({name:null!==(n=e.name)&&void 0!==n?n:uniqueName$8,priority:null!==(t=e.priority)&&void 0!==t?t:TokenizerPriority.LINKS})}_findDelimiter(e,n,t){for(let i=e;i<n;++i){switch(t[i].codePoint){case AsciiCodePoint.BACKSLASH:i+=1;break;case AsciiCodePoint.OPEN_BRACKET:{const e=[],o={type:"opener",startIndex:i,endIndex:i+1,brackets:e},a=eatLinkLabel(t,i,n);if(a.nextIndex<0)return o;if(null==a.labelAndIdentifier){i=a.nextIndex-1;break}for(e.push({startIndex:i,endIndex:a.nextIndex,label:a.labelAndIdentifier.label,identifier:a.labelAndIdentifier.identifier}),i=a.nextIndex;i<n&&t[i].codePoint===AsciiCodePoint.OPEN_BRACKET;){const{labelAndIdentifier:a,nextIndex:A}=eatLinkLabel(t,i,n);if(-1===A)return o.type="opener",o.endIndex=i+1,o;const l={startIndex:i,endIndex:A};if(o.type="full",o.endIndex=A,e.push(l),null==a)break;l.label=a.label,l.identifier=a.identifier,i=A}return o}case AsciiCodePoint.CLOSE_BRACKET:{if(i+1>=n||t[i+1].codePoint!==AsciiCodePoint.OPEN_BRACKET)break;const e=eatLinkLabel(t,i+1,n);if(-1===e.nextIndex)return{type:"opener",startIndex:i+1,endIndex:i+2,brackets:[]};if(null==e.labelAndIdentifier){i=e.nextIndex-1;break}const o=[{startIndex:i+1,endIndex:e.nextIndex,label:e.labelAndIdentifier.label,identifier:e.labelAndIdentifier.identifier}],a={type:"closer",startIndex:i,endIndex:e.nextIndex,brackets:o};for(i=e.nextIndex;i<n&&t[i].codePoint===AsciiCodePoint.OPEN_BRACKET;){const{labelAndIdentifier:e,nextIndex:A}=eatLinkLabel(t,i,n);if(-1===A)return a.type="both",a.endIndex=i+1,a;const l={startIndex:i,endIndex:A};if(a.type="full",a.endIndex=A,o.push(l),null==e)break;l.label=e.label,l.identifier=e.identifier,i=A}return a}}}return null}isDelimiterPair(e,n,t,i,o){if(null!=t.find(isLinkToken))return{paired:!1,opener:!1,closer:!1};switch(checkBalancedBracketsStatus(e.endIndex,n.startIndex,t,i)){case-1:return{paired:!1,opener:!1,closer:!0};case 0:{const e=n.brackets[0];return null!=e&&null!=e.identifier&&o.hasDefinition(e.identifier)?{paired:!0}:{paired:!1,opener:!1,closer:!1}}case 1:return{paired:!1,opener:!0,closer:!1}}}processDelimiterPair(e,n,t,i,o){const a=this.processSingleDelimiter(e,i,o),[A,...l]=n.brackets;return a.push({nodeType:"linkReference",startIndex:e.endIndex-1,endIndex:A.endIndex,referenceType:"full",label:A.label,identifier:A.identifier,children:o.resolveInternalTokens(t,e.endIndex,n.startIndex,i)}),{tokens:a,remainCloserDelimiter:{type:"both"===n.type?"opener":"full",startIndex:A.endIndex,endIndex:n.endIndex,brackets:l}}}processSingleDelimiter(e,n,t){const i=[],o=e.brackets;if(o.length<=0)return i;let a=0,A=-1;for(;a<o.length;++a){let e=null;for(;a<o.length&&(e=o[a],null==e.identifier||!t.hasDefinition(e.identifier));++a);if(null==e||a>=o.length)break;if(A+1<a){const l=o[a-1];i.push({nodeType:"linkReference",startIndex:l.startIndex,endIndex:e.endIndex,referenceType:"full",label:e.label,identifier:e.identifier,children:t.resolveInternalTokens([],l.startIndex+1,l.endIndex-1,n)}),A=a}else{if(a+1===o.length){i.push({nodeType:"linkReference",startIndex:e.startIndex,endIndex:e.endIndex,referenceType:"shortcut",label:e.label,identifier:e.identifier,children:t.resolveInternalTokens([],e.startIndex+1,e.endIndex-1,n)});break}if(a+1<o.length&&null==o[a+1].identifier){const A=o[a+1];i.push({nodeType:"linkReference",startIndex:e.startIndex,endIndex:A.endIndex,referenceType:"collapsed",label:e.label,identifier:e.identifier,children:t.resolveInternalTokens([],e.startIndex+1,e.endIndex-1,n)});break}}}return i}processToken(e,n){const{identifier:t,label:i,referenceType:o}=e;return{type:"linkReference",identifier:t,label:i,referenceType:o,children:n||[]}}}const uniqueName$7="@yozora/tokenizer-list";class ListTokenizer extends BaseBlockTokenizer{constructor(e={}){var n,t;super({name:null!==(n=e.name)&&void 0!==n?n:uniqueName$7,priority:null!==(t=e.priority)&&void 0!==t?t:TokenizerPriority.CONTAINING_BLOCK}),this.isContainingBlock=!0}transformMatch(e,n){const t=[];let i=[];const o=()=>{if(i.length<=0)return;let e=i.some((e=>{if(null==e.children||e.children.length<=1)return!1;let n=e.children[0].position;for(let t=1;t<e.children.length;++t){const i=e.children[t].position;if(n.end.line+1<i.start.line)return!0;n=i}return!1}));if(!e&&i.length>1){let n=i[0];for(let t=1;t<i.length;++t){const o=i[t];if(n.position.end.line+1<o.position.start.line){e=!0;break}n=o}}const o={_tokenizer:this.name,nodeType:"list",ordered:i[0].ordered,orderType:i[0].orderType,start:i[0].order,marker:i[0].marker,spread:e,position:{start:Object.assign({},i[0].position.start),end:Object.assign({},i[i.length-1].position.end)},children:[...i]};if(t.push(o),!o.spread)for(const e of o.children)null==e.children||e.children.length<=0||(e.children=e.children.map((e=>{const t=n.extractPhrasingLines(e);if(null==t)return e;const i=n.buildPhrasingContentToken(t);return null!=i?i:e})))};for(let n=0;n<e.length;++n){const a=e[n];"listItem"===a.nodeType?i.length<=0||i[0].ordered!==a.ordered||i[0].orderType!==a.orderType||i[0].marker!==a.marker?(o(),i=[a]):i.push(a):(o(),i=[],t.push(a))}return o(),t}parseBlock(e,n){return{type:"list",ordered:e.ordered,orderType:e.orderType,start:e.start,marker:e.marker,spread:e.spread,children:n||[]}}}const uniqueName$6="@yozora/tokenizer-list-item";class ListItemTokenizer extends BaseBlockTokenizer{constructor(e={}){var n,t,i,o;super({name:null!==(n=e.name)&&void 0!==n?n:uniqueName$6,priority:null!==(t=e.priority)&&void 0!==t?t:TokenizerPriority.CONTAINING_BLOCK}),this.isContainingBlock=!0,this.enableTaskListItem=null!==(i=e.enableTaskListItem)&&void 0!==i&&i,this.emptyItemCouldNotInterruptedTypes=null!==(o=e.emptyItemCouldNotInterruptedTypes)&&void 0!==o?o:["phrasingContent","paragraph"]}eatOpener(e){if(e.countOfPrecedeSpaces>=4)return null;const{nodePoints:n,startIndex:t,endIndex:i,firstNonWhitespaceIndex:o}=e;if(o>=i)return null;let a,A,l=!1,_=null,r=o,u=n[r].codePoint;if(r+1<i){const e=u;if(isAsciiDigitCharacter(e)){a="1";let t=e-AsciiCodePoint.DIGIT0;for(r+=1;r<i&&(u=n[r].codePoint,isAsciiDigitCharacter(u));++r)t=10*t+u-AsciiCodePoint.DIGIT0;A=t,a="1"}else isAsciiLowerLetter(e)?(r+=1,u=n[r].codePoint,A=e-AsciiCodePoint.LOWERCASE_A+1,a="a"):isAsciiUpperLetter(e)&&(r+=1,u=n[r].codePoint,A=e-AsciiCodePoint.UPPERCASE_A+1,a="A");r>o&&r-o<=9&&(u===AsciiCodePoint.DOT||u===AsciiCodePoint.CLOSE_PARENTHESIS)&&(r+=1,l=!0,_=u)}if(l||u!==AsciiCodePoint.PLUS_SIGN&&u!==AsciiCodePoint.MINUS_SIGN&&u!==AsciiCodePoint.ASTERISK||(r+=1,_=u),null==_)return null;let I=0,E=r;for(E<i&&(u=n[E].codePoint,u===VirtualCodePoint.SPACE&&(E+=1));E<i&&(u=n[E].codePoint,isSpaceCharacter(u));++E)I+=1;if(I>4&&(E-=I-1,I=1),0===I&&E<i&&u!==VirtualCodePoint.LINE_END)return null;const T=u===VirtualCodePoint.LINE_END?1:-1;u===VirtualCodePoint.LINE_END&&(E-=I-1,I=1);const s=r-t+I;let N=null;this.enableTaskListItem&&({status:N,nextIndex:E}=this.eatTaskStatus(n,E,i));const k={nodeType:"listItem",position:{start:calcStartYastNodePoint(n,t),end:calcEndYastNodePoint(n,E-1)},ordered:l,marker:_,orderType:l?a:void 0,order:l?A:void 0,indent:s,countOfTopBlankLine:T,children:[]};return null!=N&&(k.status=N),{token:k,nextIndex:E}}eatAndInterruptPreviousSibling(e,n){const t=this.eatOpener(e);if(null==t)return null;const{token:i,nextIndex:o}=t;if(this.emptyItemCouldNotInterruptedTypes.includes(n.nodeType)){if(i.indent===e.endIndex-e.startIndex)return null;if(i.ordered&&1!==i.order)return null}return{token:i,nextIndex:o,remainingSibling:n}}eatContinuationText(e,n){const{startIndex:t,endIndex:i,firstNonWhitespaceIndex:o,countOfPrecedeSpaces:a}=e;if(o<i&&a<n.indent)return{status:"notMatched"};if(o>=i){if(n.countOfTopBlankLine>=0&&(n.countOfTopBlankLine+=1,n.countOfTopBlankLine>1))return{status:"notMatched"}}else n.countOfTopBlankLine=-1;return{status:"opening",nextIndex:Math.min(t+n.indent,i-1)}}parseBlock(e,n){return{type:"listItem",status:e.status,children:n||[]}}eatTaskStatus(e,n,t){let i,o=n;for(;o<t;++o){const n=e[o].codePoint;if(!isSpaceCharacter(n))break}if(o+3>=t||e[o].codePoint!==AsciiCodePoint.OPEN_BRACKET||e[o+2].codePoint!==AsciiCodePoint.CLOSE_BRACKET||!isWhitespaceCharacter(e[o+3].codePoint))return{status:null,nextIndex:n};switch(e[o+1].codePoint){case AsciiCodePoint.SPACE:i=TaskStatus.TODO;break;case AsciiCodePoint.MINUS_SIGN:i=TaskStatus.DOING;break;case AsciiCodePoint.LOWERCASE_X:case AsciiCodePoint.UPPERCASE_X:i=TaskStatus.DONE;break;default:return{status:null,nextIndex:n}}return{status:i,nextIndex:o+4}}}const uniqueName$5="@yozora/tokenizer-math";class MathTokenizer extends FencedBlockTokenizer{constructor(e={}){var n,t;super({name:null!==(n=e.name)&&void 0!==n?n:uniqueName$5,priority:null!==(t=e.priority)&&void 0!==t?t:TokenizerPriority.FENCED_BLOCK,nodeType:"math",markers:[AsciiCodePoint.DOLLAR_SIGN],markersRequired:2}),this.isContainingBlock=!0}eatOpener(e){const n=super.eatOpener(e);if(null==n)return null;const{token:t}=n,[i,o]=calcTrimBoundaryOfCodePoints(t.infoString);if(i>=o)return n;let a=o-1;for(;a>=i;--a){const e=t.infoString[a].codePoint;if(!this.markers.includes(e))break}const A=o-a-1;if(A!=t.markerCount)return null;return{token:Object.assign(Object.assign({},t),{infoString:[],lines:[{nodePoints:t.infoString,startIndex:0,endIndex:o-A,firstNonWhitespaceIndex:i,countOfPrecedeSpaces:0}]}),nextIndex:e.endIndex,saturated:!0}}parseBlock(e){return{type:"math",value:calcStringFromNodePoints(mergeContentLinesFaithfully(e.lines))}}}const uniqueName$4="@yozora/tokenizer-paragraph";class ParagraphTokenizer extends BaseBlockTokenizer{constructor(e={}){var n,t;super({name:null!==(n=e.name)&&void 0!==n?n:uniqueName$4,priority:null!==(t=e.priority)&&void 0!==t?t:TokenizerPriority.FALLBACK}),this.isContainingBlock=!1}eatOpener(e){const{endIndex:n,firstNonWhitespaceIndex:t}=e;if(t>=n)return null;const i=[e];return{token:{nodeType:"paragraph",position:calcPositionFromPhrasingContentLines(i),lines:i},nextIndex:n}}eatContinuationText(e,n){const{endIndex:t,firstNonWhitespaceIndex:i}=e;return i>=t?{status:"notMatched"}:(n.lines.push(e),{status:"opening",nextIndex:t})}eatLazyContinuationText(e,n){return this.eatContinuationText(e,n)}parseBlock(e,n,t){const i=t.buildPhrasingContent(e.lines);if(null==i)return null;return{type:"paragraph",children:[i]}}extractPhrasingContentLines(e){return e.lines}buildBlockToken(e){const n=trimBlankLines(e);if(null==n)return null;const t=calcPositionFromPhrasingContentLines(n);return{_tokenizer:this.name,nodeType:"paragraph",lines:n,position:t}}}const uniqueName$3="@yozora/tokenizer-setext-heading";class SetextHeadingTokenizer extends BaseBlockTokenizer{constructor(e={}){var n,t;super({name:null!==(n=e.name)&&void 0!==n?n:uniqueName$3,priority:null!==(t=e.priority)&&void 0!==t?t:TokenizerPriority.ATOMIC}),this.isContainingBlock=!1}eatOpener(){return null}eatAndInterruptPreviousSibling(e,n,t,i){const{nodePoints:o,endIndex:a,firstNonWhitespaceIndex:A,countOfPrecedeSpaces:l}=e;if(l>=4||A>=a)return null;let _=null,r=!1;for(let e=A;e<a;++e){const n=o[e];if(n.codePoint==VirtualCodePoint.LINE_END)break;if(isUnicodeWhitespaceCharacter(n.codePoint))r=!0;else{if(r||n.codePoint!==AsciiCodePoint.EQUALS_SIGN&&n.codePoint!==AsciiCodePoint.MINUS_SIGN||null!=_&&_!==n.codePoint){_=null;break}_=n.codePoint}}if(null==_)return null;const u=i.extractPhrasingLines(n);if(null==u)return null;const I=a;return{token:{nodeType:"heading",position:{start:calcStartYastNodePoint(u[0].nodePoints,u[0].startIndex),end:calcEndYastNodePoint(o,I-1)},marker:_,lines:u},nextIndex:I,saturated:!0,remainingSibling:null}}parseBlock(e,n,t){let i=1;switch(e.marker){case AsciiCodePoint.EQUALS_SIGN:i=1;break;case AsciiCodePoint.MINUS_SIGN:i=2}const o=t.buildPhrasingContent(e.lines);return{type:"heading",depth:i,children:null==o?[]:[o]}}}const uniqueName$2="@yozora/tokenizer-table";class TableTokenizer extends BaseBlockTokenizer{constructor(e={}){var n,t;super({name:null!==(n=e.name)&&void 0!==n?n:uniqueName$2,priority:null!==(t=e.priority)&&void 0!==t?t:TokenizerPriority.INTERRUPTABLE_BLOCK}),this.isContainingBlock=!1}eatOpener(){return null}eatAndInterruptPreviousSibling(e,n,t,i){if(e.countOfPrecedeSpaces>=4)return null;const{nodePoints:o,endIndex:a,firstNonWhitespaceIndex:A}=e;if(A>=a)return null;const l=[];let _=o[A].codePoint,r=_===AsciiCodePoint.VERTICAL_SLASH?A+1:A;for(;r<a;){for(;r<a&&(_=o[r].codePoint,isWhitespaceCharacter(_));++r);if(r>=a)break;let e=!1;_===AsciiCodePoint.COLON&&(e=!0,r+=1);let n=0;for(;r<a&&(_=o[r].codePoint,_===AsciiCodePoint.MINUS_SIGN);++r)n+=1;if(n<=0)return null;let t=!1;for(r<a&&_===AsciiCodePoint.COLON&&(t=!0,r+=1);r<a;++r)if(_=o[r].codePoint,!isWhitespaceCharacter(_)){if(_===AsciiCodePoint.VERTICAL_SLASH){r+=1;break}return null}let i=null;e&&t?i="center":e?i="left":t&&(i="right");const A={align:i};l.push(A)}if(l.length<=0)return null;const u=i.extractPhrasingLines(n);if(null==u||u.length<1)return null;let I=0,E=!1;const T=u[u.length-1];for(let e=T.startIndex;e<T.endIndex;++e){const n=o[e];isWhitespaceCharacter(n.codePoint)||(n.codePoint!==AsciiCodePoint.VERTICAL_SLASH?(E=!0,n.codePoint===AsciiCodePoint.BACKSLASH&&(e+=1)):((E||I>0)&&(I+=1),E=!1))}if(E&&l.length>1&&(I+=1),I!==l.length)return null;const s=this.calcTableRow(i,T,l),N=a;return{token:{nodeType:"table",position:{start:calcStartYastNodePoint(T.nodePoints,T.startIndex),end:calcEndYastNodePoint(o,N-1)},columns:l,children:[s]},nextIndex:N,remainingSibling:i.rollbackPhrasingLines(u.slice(0,u.length-1),n)}}eatLazyContinuationText(e,n,t,i){if(e.firstNonWhitespaceIndex>=e.endIndex)return{status:"notMatched"};const o=n,a=this.calcTableRow(i,e,o.columns);return null==a?{status:"notMatched"}:(o.children.push(a),{status:"opening",nextIndex:e.endIndex})}parseBlock(e,n,t){let i;switch(e.nodeType){case"table":i={type:"table",columns:e.columns,children:n||[]};break;case"tableRow":i={type:"tableRow",children:n||[]};break;case"tableCell":i={type:"tableCell",children:n};for(const e of i.children){if("phrasingContent"!==e.type)continue;const n=[],t=e.contents.length;for(let i=0;i<t;++i){const o=e.contents[i];if(o.codePoint===AsciiCodePoint.BACKSLASH&&i+1<t){const t=e.contents[i+1];t.codePoint!==AsciiCodePoint.VERTICAL_SLASH&&n.push(o),n.push(t),i+=1}else n.push(o)}e.contents=n}break;default:return null}return i}calcTableColumn(e,n,t){if(t.firstNonWhitespaceIndex>=t.endIndex)return null;if(n.firstNonWhitespaceIndex-n.startIndex>=4)return null;const i=[];let o=e[n.firstNonWhitespaceIndex],a=o.codePoint===AsciiCodePoint.VERTICAL_SLASH?n.firstNonWhitespaceIndex+1:n.firstNonWhitespaceIndex;for(;a<n.endIndex;){for(;a<n.endIndex&&(o=e[a],isWhitespaceCharacter(o.codePoint));++a);if(a>=n.endIndex)break;let t=!1;o.codePoint===AsciiCodePoint.COLON&&(t=!0,a+=1);let A=0;for(;a<n.endIndex&&(o=e[a],o.codePoint===AsciiCodePoint.MINUS_SIGN);++a)A+=1;if(A<=0)return null;let l=!1;for(a<n.endIndex&&o.codePoint===AsciiCodePoint.COLON&&(l=!0,a+=1);a<n.endIndex;++a)if(o=e[a],!isWhitespaceCharacter(o.codePoint)){if(o.codePoint===AsciiCodePoint.VERTICAL_SLASH){a+=1;break}return null}let _=null;t&&l?_="center":t?_="left":l&&(_="right");const r={align:_};i.push(r)}if(i.length<=0)return null;let A=0,l=!1;for(let n=t.startIndex;n<t.endIndex;++n){const t=e[n];isWhitespaceCharacter(t.codePoint)||(t.codePoint!==AsciiCodePoint.VERTICAL_SLASH?(l=!0,t.codePoint===AsciiCodePoint.BACKSLASH&&(n+=1)):((l||A>0)&&(A+=1),l=!1))}return l&&i.length>1&&(A+=1),A!==i.length?null:i}calcTableRow(e,n,t){const{nodePoints:i,startIndex:o,endIndex:a,firstNonWhitespaceIndex:A}=n;let l=i[A],_=l.codePoint===AsciiCodePoint.VERTICAL_SLASH?A+1:A;const r=[];for(;_<a;_+=1){for(;_<a&&(l=i[_],isWhitespaceCharacter(l.codePoint));++_);const n=_<a?calcStartYastNodePoint(i,_):calcEndYastNodePoint(i,a-1),o=_,A=_;for(;_<a;++_)if(l=i[_],l.codePoint!==AsciiCodePoint.BACKSLASH){if(l.codePoint===AsciiCodePoint.VERTICAL_SLASH)break}else _+=1;let u=_;for(;u>o;--u){const e=i[u-1];if(!isWhitespaceCharacter(e.codePoint))break}const I=calcEndYastNodePoint(i,_-1),E=A>=u?null:e.buildPhrasingContentToken([{nodePoints:i,startIndex:o,endIndex:u,firstNonWhitespaceIndex:A,countOfPrecedeSpaces:A-o}]),T={_tokenizer:this.name,nodeType:"tableCell",position:{start:n,end:I},children:null==E?[]:[E]};if(r.push(T),r.length>=t.length)break}const u=calcStartYastNodePoint(i,o),I=calcEndYastNodePoint(i,a-1);for(let e=r.length;e<t.length;++e){const e={_tokenizer:this.name,nodeType:"tableCell",position:{start:Object.assign({},I),end:Object.assign({},I)},children:[]};r.push(e)}return{_tokenizer:this.name,nodeType:"tableRow",position:{start:u,end:I},children:r}}}const uniqueName$1="@yozora/tokenizer-text";class TextTokenizer extends BaseInlineTokenizer{constructor(e={}){var n,t;super({name:null!==(n=e.name)&&void 0!==n?n:uniqueName$1,priority:null!==(t=e.priority)&&void 0!==t?t:TokenizerPriority.FALLBACK})}_findDelimiter(e,n){return{type:"full",startIndex:e,endIndex:n}}processSingleDelimiter(e){return[{nodeType:"text",startIndex:e.startIndex,endIndex:e.endIndex}]}findAndHandleDelimiter(e,n){return{nodeType:"text",startIndex:e,endIndex:n}}processToken(e,n,t){const{startIndex:i,endIndex:o}=e;let a=calcEscapedStringFromNodePoints(t,i,o);a=a.replace(/[^\S\n]*\n[^\S\n]*/g,"\n");return{type:"text",value:a}}}const uniqueName="@yozora/tokenizer-thematic-break";class ThematicBreakTokenizer extends BaseBlockTokenizer{constructor(e={}){var n,t;super({name:null!==(n=e.name)&&void 0!==n?n:uniqueName,priority:null!==(t=e.priority)&&void 0!==t?t:TokenizerPriority.ATOMIC}),this.isContainingBlock=!1}eatOpener(e){if(e.countOfPrecedeSpaces>=4)return null;const{nodePoints:n,startIndex:t,endIndex:i,firstNonWhitespaceIndex:o}=e;if(o+2>=i)return null;let a,A=0,l=!0,_=!1;for(let e=o;e<i;++e){const t=n[e];if(isUnicodeWhitespaceCharacter(t.codePoint))_=!0;else switch(_&&(l=!1),t.codePoint){case AsciiCodePoint.MINUS_SIGN:case AsciiCodePoint.UNDERSCORE:case AsciiCodePoint.ASTERISK:if(A<=0){a=t.codePoint,A+=1;break}if(t.codePoint!==a)return null;A+=1;break;default:return null}}if(A<3)return null;return{token:{nodeType:"thematicBreak",position:{start:calcStartYastNodePoint(n,t),end:calcEndYastNodePoint(n,i-1)},marker:a,continuous:l},nextIndex:i,saturated:!0}}eatAndInterruptPreviousSibling(e,n){const t=this.eatOpener(e);return null==t?null:{token:t.token,nextIndex:t.nextIndex,remainingSibling:n}}parseBlock(){return{type:"thematicBreak"}}}class YozoraParser extends DefaultYastParser{constructor(e={}){super(e),null==this.blockFallbackTokenizer&&this.useBlockFallbackTokenizer(new ParagraphTokenizer),null==this.inlineFallbackTokenizer&&this.useInlineFallbackTokenizer(new TextTokenizer),this.useTokenizer(new IndentedCodeTokenizer).useTokenizer(new HtmlBlockTokenizer).useTokenizer(new SetextHeadingTokenizer).useTokenizer(new ThematicBreakTokenizer).useTokenizer(new BlockquoteTokenizer).useTokenizer(new ListItemTokenizer({enableTaskListItem:!0})).useTokenizer(new HeadingTokenizer).useTokenizer(new FencedCodeTokenizer).useTokenizer(new AdmonitionTokenizer).useTokenizer(new MathTokenizer).useTokenizer(new FootnoteDefinitionTokenizer).useTokenizer(new DefinitionTokenizer).useTokenizer(new EcmaImportTokenizer).useTokenizer(new TableTokenizer).useTokenizer(new ListTokenizer).useTokenizer(new HtmlInlineTokenizer).useTokenizer(new InlineMathTokenizer({backtickRequired:!1})).useTokenizer(new InlineCodeTokenizer).useTokenizer(new AutolinkTokenizer).useTokenizer(new AutolinkExtensionTokenizer).useTokenizer(new BreakTokenizer).useTokenizer(new FootnoteTokenizer).useTokenizer(new FootnoteReferenceTokenizer).useTokenizer(new ImageTokenizer).useTokenizer(new ImageReferenceTokenizer).useTokenizer(new LinkTokenizer).useTokenizer(new LinkReferenceTokenizer).useTokenizer(new EmphasisTokenizer).useTokenizer(new DeleteTokenizer)}}class GfmParser extends DefaultYastParser{constructor(e={}){super(e),null==this.blockFallbackTokenizer&&this.useBlockFallbackTokenizer(new ParagraphTokenizer),null==this.inlineFallbackTokenizer&&this.useInlineFallbackTokenizer(new TextTokenizer),this.useTokenizer(new IndentedCodeTokenizer).useTokenizer(new HtmlBlockTokenizer).useTokenizer(new SetextHeadingTokenizer).useTokenizer(new ThematicBreakTokenizer).useTokenizer(new BlockquoteTokenizer).useTokenizer(new ListItemTokenizer({enableTaskListItem:!1})).useTokenizer(new HeadingTokenizer).useTokenizer(new FencedCodeTokenizer).useTokenizer(new DefinitionTokenizer).useTokenizer(new ListTokenizer).useTokenizer(new HtmlInlineTokenizer).useTokenizer(new InlineCodeTokenizer).useTokenizer(new AutolinkTokenizer).useTokenizer(new BreakTokenizer).useTokenizer(new ImageTokenizer).useTokenizer(new ImageReferenceTokenizer).useTokenizer(new LinkTokenizer).useTokenizer(new LinkReferenceTokenizer).useTokenizer(new EmphasisTokenizer)}}class GfmExParser extends DefaultYastParser{constructor(e={}){super(e),null==this.blockFallbackTokenizer&&this.useBlockFallbackTokenizer(new ParagraphTokenizer),null==this.inlineFallbackTokenizer&&this.useInlineFallbackTokenizer(new TextTokenizer),this.useTokenizer(new IndentedCodeTokenizer).useTokenizer(new HtmlBlockTokenizer).useTokenizer(new SetextHeadingTokenizer).useTokenizer(new ThematicBreakTokenizer).useTokenizer(new BlockquoteTokenizer).useTokenizer(new ListItemTokenizer({enableTaskListItem:!0})).useTokenizer(new HeadingTokenizer).useTokenizer(new FencedCodeTokenizer).useTokenizer(new DefinitionTokenizer).useTokenizer(new TableTokenizer).useTokenizer(new ListTokenizer).useTokenizer(new HtmlInlineTokenizer).useTokenizer(new InlineCodeTokenizer).useTokenizer(new AutolinkTokenizer).useTokenizer(new AutolinkExtensionTokenizer).useTokenizer(new BreakTokenizer).useTokenizer(new ImageTokenizer).useTokenizer(new ImageReferenceTokenizer).useTokenizer(new LinkTokenizer).useTokenizer(new LinkReferenceTokenizer).useTokenizer(new EmphasisTokenizer).useTokenizer(new DeleteTokenizer)}}const yozoraParser=new YozoraParser({defaultParseOptions:{shouldReservePosition:!0}}),gfmParser=new GfmParser({defaultParseOptions:{shouldReservePosition:!0}}),exGfmParser=new GfmExParser({defaultParseOptions:{shouldReservePosition:!0}}),parsers=[{name:"yozora",description:"yozora parser",parse:yozoraParser.parse.bind(yozoraParser)},{name:"gfm",description:"GFM parser",parse:gfmParser.parse.bind(gfmParser)},{name:"ex-gfm",description:"GFM parser (extension)",parse:exGfmParser.parse.bind(exGfmParser)}];function process(e,n){const t=parsers.find((e=>e.name===n));return null==t?null:t.parse(e)}self.addEventListener("message",(function(e){const{id:n,data:t}=e.data,{code:i,parser:o}=t,a={id:n,data:process(i,o)};self.postMessage(a,void 0)}),!1);
